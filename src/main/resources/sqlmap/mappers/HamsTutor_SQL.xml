<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="HamsTutor">
    <select id="getLrnGrowthStt" parameterType="hashMap" resultType="resultMap">
        SELECT
        F.YYMM,
        F.WK,
        CASE
        WHEN B.PLAN_CNT > 0 THEN ROUND((((B.D_LRN_EX_CNT + B.LRN_EX_CNT + B.B_LRN_EX_CNT) / B.PLAN_CNT) * 100))
        ELSE NULL
        END AS EX_RT,
        C.TOP_10_EX_RT AS TOP_10_AVG_EX_RT,
        C.GRP_AVG_EX_RT,
        D.TOP_10_CRT_RT AS TOP_10_AVG_CRT_RT,
        D.GRP_AVG_CRT_RT,
        E.C01,
        E.C02,
        E.C03,
        E.C04,
        E.C05,
        E.C06
        FROM
        hams_tutor_dashboard.STUD AS A
        LEFT OUTER JOIN
        hams_tutor_dashboard.COMM_WK_DT AS F ON (F.YYMM BETWEEN DATE_FORMAT(DATE_ADD(#{endDt},INTERVAL - 1 MONTH),'%Y%m') AND DATE_FORMAT(#{endDt},'%Y%m'))
        AND (F.MO = #{endDt}
        OR F.TU = #{endDt}
        OR F.WE = #{endDt}
        OR F.TH = #{endDt}
        OR F.FR = #{endDt}
        OR F.SA = #{endDt}
        OR F.SU = #{endDt})
        LEFT OUTER JOIN
        (SELECT
        STUD_ID,
        COUNT(*) PLAN_CNT,
        COUNT(CASE
        WHEN
        FNSH_YN = 'Y'
        AND (DATE_FORMAT(END_DTTM, '%Y%m%d') <![CDATA[>]]> DATE_FORMAT(PLAN_DT, '%Y%m%d'))
        THEN
        END_DTTM
        END) D_LRN_EX_CNT,
        COUNT(CASE
        WHEN
        FNSH_YN = 'Y'
        AND (DATE_FORMAT(END_DTTM, '%Y%m%d') <![CDATA[=]]> DATE_FORMAT(PLAN_DT, '%Y%m%d'))
        THEN
        END_DTTM
        END) LRN_EX_CNT,
        COUNT(CASE
        WHEN
        FNSH_YN = 'Y'
        AND (DATE_FORMAT(END_DTTM, '%Y%m%d') <![CDATA[<]]> DATE_FORMAT(PLAN_DT, '%Y%m%d'))
        THEN
        END_DTTM
        END) B_LRN_EX_CNT
        FROM
        hams_tutor_dashboard.DAY_LRN_EX_LOG
        WHERE
        STUD_ID = #{studId}
        AND PLAN_DT IS NOT NULL
        AND PLAN_DT BETWEEN DATE_ADD(#{endDt}, INTERVAL - 6 DAY) AND #{endDt}) AS B
        ON A.STUD_ID = B.STUD_ID
        LEFT OUTER JOIN
        hams_tutor_dashboard.DAY_7_GRP_LRN_EX_STT AS C ON C.DT = #{endDt} AND A.GRADE = C.GRADE
        LEFT OUTER JOIN
        hams_tutor_dashboard.DAY_7_GRP_EXAM_RST AS D ON D.DT = #{endDt} AND A.GRADE = D.GRADE
        LEFT OUTER JOIN
        (SELECT
        A.STUD_ID,
        SUM(A.C01) AS C01,
        SUM(A.C02) AS C02,
        SUM(A.C03) AS C03,
        SUM(A.C04) AS C04,
        SUM(A.C05) AS C05,
        SUM(A.C06) AS C06
        FROM
        (SELECT
        STUD_ID,
        CASE
        WHEN SUBJ_CD = 'C01' THEN IFNULL(ROUND((SUM(CRT_CNT) / SUM(QUES_CNT)) * 100),0)
        ELSE NULL
        END AS C01,
        CASE
        WHEN SUBJ_CD = 'C02' THEN IFNULL(ROUND((SUM(CRT_CNT) / SUM(QUES_CNT)) * 100),0)
        ELSE NULL
        END AS C02,
        CASE
        WHEN SUBJ_CD = 'C03' THEN IFNULL(ROUND((SUM(CRT_CNT) / SUM(QUES_CNT)) * 100),0)
        ELSE NULL
        END AS C03,
        CASE
        WHEN SUBJ_CD = 'C04' THEN IFNULL(ROUND((SUM(CRT_CNT) / SUM(QUES_CNT)) * 100),0)
        ELSE NULL
        END AS C04,
        CASE
        WHEN SUBJ_CD = 'C05' THEN IFNULL(ROUND((SUM(CRT_CNT) / SUM(QUES_CNT)) * 100),0)
        ELSE NULL
        END AS C05,
        CASE
        WHEN SUBJ_CD = 'C06' THEN IFNULL(ROUND((SUM(CRT_CNT) / SUM(QUES_CNT)) * 100),0)
        ELSE NULL
        END AS C06
        FROM
        hams_tutor_dashboard.EXAM_SUBJ_RST
        WHERE
        STUD_ID = #{studId}
        AND DT BETWEEN DATE_ADD(#{endDt}, INTERVAL - 6 DAY) AND #{endDt}
        GROUP BY SUBJ_CD
        ) A
        ) AS E ON A.STUD_ID = E.STUD_ID
        WHERE
        A.STUD_ID = #{studId}
    </select>
    <select id="getLrnExSttEx" parameterType="hashMap" resultType="resultMap">
        SELECT
        CASE
        WHEN C.PLAN_CNT <![CDATA[>]]> 0
        THEN ROUND(
        (
        (
        (
        COUNT(CASE WHEN A.FNSH_YN = 'Y' AND (DATE_FORMAT(END_DTTM,'%Y%m%d') <![CDATA[>]]> DATE_FORMAT(A.PLAN_DT,'%Y%m%d')) THEN END_DTTM END) +
        COUNT(CASE WHEN A.FNSH_YN = 'Y' AND (DATE_FORMAT(END_DTTM,'%Y%m%d') <![CDATA[=]]> DATE_FORMAT(A.PLAN_DT,'%Y%m%d')) THEN END_DTTM END) +
        COUNT(CASE WHEN A.FNSH_YN = 'Y' AND (DATE_FORMAT(END_DTTM,'%Y%m%d') <![CDATA[<]]> DATE_FORMAT(A.PLAN_DT,'%Y%m%d')) THEN END_DTTM END)
        ) / C.PLAN_CNT
        ) * 100
        )
        )
        ELSE NULL END
        AS EX_RT,
        C.PLAN_CNT,
        CASE WHEN C.PLAN_CNT > 0 THEN COUNT(CASE WHEN A.FNSH_YN = 'Y' AND (DATE_FORMAT(A.END_DTTM,'%Y%m%d') <![CDATA[>]]> DATE_FORMAT(A.PLAN_DT,'%Y%m%d')) THEN A.END_DTTM END) ELSE NULL END D_LRN_EX_CNT,
        CASE WHEN C.PLAN_CNT > 0 THEN COUNT(CASE WHEN A.FNSH_YN = 'Y' AND (DATE_FORMAT(A.END_DTTM,'%Y%m%d') <![CDATA[=]]> DATE_FORMAT(A.PLAN_DT,'%Y%m%d')) THEN A.END_DTTM END) ELSE NULL END  LRN_EX_CNT,
        CASE WHEN C.PLAN_CNT > 0 THEN COUNT(CASE WHEN A.FNSH_YN = 'Y' AND (DATE_FORMAT(A.END_DTTM,'%Y%m%d') <![CDATA[<]]> DATE_FORMAT(A.PLAN_DT,'%Y%m%d')) THEN A.END_DTTM END) ELSE NULL END B_LRN_EX_CNT,
        IFNULL(B.A_LRN_EX_CNT,0) AS A_LRN_EX_CNT,
        IFNULL(B.A_LRN_NM,0) AS A_LRN_NM
        FROM hams_tutor_dashboard.DAY_LRN_EX_LOG AS A
        LEFT OUTER JOIN (
        SELECT
        STUD_ID,
        (
        SELECT SUM(CNT) AS A_LRN_EX_CNT FROM
        (
        SELECT
        COUNT(SUB_SUBJ_NM) CNT, SUB_SUBJ_NM,SUB_SUBJ_CD
        FROM hams_tutor_dashboard.DAY_LRN_EX_LOG
        WHERE  STUD_ID = #{studId}
        AND DT BETWEEN #{startDt} AND #{endDt}
        AND PLAN_DT IS NULL
        AND FNSH_YN = 'Y'
        GROUP BY SUB_SUBJ_NM
        ) A
        ) AS A_LRN_EX_CNT,
        SUB_SUBJ_NM AS A_LRN_NM
        FROM
        (
        SELECT
        COUNT(SUB_SUBJ_NM) CNT, SUB_SUBJ_NM,SUB_SUBJ_CD,STUD_ID
        FROM hams_tutor_dashboard.DAY_LRN_EX_LOG
        WHERE  STUD_ID = #{studId}
        AND DT BETWEEN #{startDt} AND #{endDt}
        AND PLAN_DT IS NULL
        AND FNSH_YN = 'Y'
        GROUP BY SUB_SUBJ_NM
        ) B
        ORDER BY CNT DESC,
        CASE LEFT(SUB_SUBJ_CD,3)
        WHEN 'C02' THEN 1
        WHEN 'C01' THEN 2
        WHEN 'C05' THEN 3
        WHEN 'C04' THEN 4
        WHEN 'C03' THEN 5
        WHEN 'C06' THEN 6
        WHEN 'N04' THEN 7
        WHEN 'NO3' THEN 8
        WHEN 'N01' THEN 9
        WHEN 'N02' THEN 10
        WHEN 'N05' THEN 11
        WHEN 'N01' THEN 12
        END ASC,
        CAST(RIGHT(SUB_SUBJ_CD,3) AS SIGNED) ASC
        LIMIT 1
        ) B
        ON
        A.STUD_ID = B.STUD_ID
        LEFT OUTER JOIN
        (
        SELECT
        STUD_ID,SUM(PLAN_CNT) AS PLAN_CNT
        FROM
        hams_tutor_dashboard.DAY_PLAN_STT
        WHERE
        STUD_ID = #{studId}
        AND
        PLAN_CNT IS NOT NULL AND
        DT BETWEEN #{startDt} AND #{endDt}
        ) AS C
        ON
        A.STUD_ID = C.STUD_ID
        WHERE
        A.STUD_ID = #{studId}
        AND A.PLAN_DT IS NOT NULL
        AND A.PLAN_DT BETWEEN #{startDt} AND #{endDt}

    </select>
    <select id="getLrnExSttTm" parameterType="hashMap" resultType="resultMap">
        SELECT
        SUM(LRN_SEC) AS LRN_TM,
        COUNT(CASE WHEN (CAST(RIGHT(SUB_SUBJ_CD,3) AS SIGNED) <![CDATA[>]]> 100 OR (CAST(RIGHT(SUB_SUBJ_CD,3) AS SIGNED)) = 001) AND LRN_SEC <![CDATA[>]]> 1500 THEN LRN_SEC END) AS LONG_LRN_TM,
        COUNT(CASE WHEN (CAST(RIGHT(SUB_SUBJ_CD,3) AS SIGNED) <![CDATA[>]]> 100  OR (CAST(RIGHT(SUB_SUBJ_CD,3) AS SIGNED)) = 001) AND LRN_SEC <![CDATA[<]]> 300 THEN LRN_SEC END) AS SHORT_LRN_TM,
        (
        SELECT COUNT(A.SUB_SUBJ_CD) AS LRN_TM_CHECK FROM hams_tutor_dashboard.DAY_LRN_EX_LOG AS A,
        (
        SELECT DT,CTGR,MAX(END_DTTM) AS SORT_END_DTTM FROM hams_tutor_dashboard.DAY_LRN_EX_LOG
        Where STUD_ID = #{studId}
        AND DT BETWEEN #{startDt} AND #{endDt}
        AND (CAST(RIGHT(SUB_SUBJ_CD,3) AS SIGNED) = 1 OR CAST(RIGHT(SUB_SUBJ_CD,3) AS SIGNED) = 11)
        AND END_DTTM IS NOT NULL
        AND PLAN_DT IS NOT NULL
        AND FNSH_YN = 'Y'
        GROUP BY DT,CTGR
        HAVING COUNT(DT) <![CDATA[>]]> 1
        ) AS B
        Where A.STUD_ID = #{studId}
        AND A.DT BETWEEN #{startDt} AND #{endDt}
        AND (CAST(RIGHT(A.SUB_SUBJ_CD,3) AS SIGNED) = 1 OR CAST(RIGHT(A.SUB_SUBJ_CD,3) AS SIGNED) = 11)
        AND A.END_DTTM IS NOT NULL
        AND A.PLAN_DT IS NOT NULL
        AND A.FNSH_YN = 'Y'
        AND A.DT = B.DT
        AND A.CTGR = B.CTGR
        AND A.END_DTTM = B.SORT_END_DTTM
        AND (CAST(RIGHT(SUB_SUBJ_CD,3) AS SIGNED) = 1)
        ORDER BY A.END_DTTM,A.SUBJ_CD
        ) AS LRN_PTN_CNT
        FROM hams_tutor_dashboard.DAY_LRN_EX_LOG
        WHERE STUD_ID = #{studId}
        AND DT BETWEEN #{startDt} AND #{endDt}
    </select>
    <select id="getLrnExChartDay" parameterType="hashMap" resultType="resultMap">
        SELECT
            A.DT,
            A.SUBJ_CD,
            SUM(LRN_SEC) LRN_TM,
            B.TOTAL_LRN_TM
        FROM hams_tutor_dashboard.DAY_LRN_EX_LOG AS A
                 LEFT OUTER JOIN
             (
                 SELECT
                     DT,SUM(LRN_SEC) AS TOTAL_LRN_TM FROM hams_tutor_dashboard.DAY_LRN_EX_LOG
                 WHERE
                     STUD_ID = #{studId}
                   AND
                     DT BETWEEN #{startDt} AND #{endDt}
                 GROUP BY
                     DT
             ) AS B ON A.DT = B.DT
        WHERE
            A.STUD_ID = #{studId}
          AND A.DT BETWEEN #{startDt} AND #{endDt}
        GROUP BY A.DT,A.SUBJ_CD
        ORDER BY DT,SUBJ_CD
    </select>
    <select id="getLrnExChartDayMsg" parameterType="hashMap" resultType="resultMap">
        SELECT
        DT,
        SUBJ_CD,
        SUB_SUBJ_CD,
        CONCAT(
        ' > ',
        IFNULL(LRN_GRADE,''),CASE WHEN LRN_GRADE IS NOT NULL THEN '학년' ELSE '' END,IFNULL(LRN_TERM,''),CASE WHEN LRN_TERM IS NOT NULL THEN ' 학기 > ' ELSE '' END,
        SUB_SUBJ_NM,' > ',
        CTGR
        ) AS MSG
        FROM hams_tutor_dashboard.DAY_LRN_EX_LOG A
        WHERE
        STUD_ID = #{studId}
        AND DT BETWEEN #{startDt} AND #{endDt}
        AND LRN_SEC <![CDATA[>]]> 0
        ORDER BY DT,SUBJ_CD,SUB_SUBJ_CD
    </select>
    <select id="getLrnExChartSubj" parameterType="hashMap" resultType="resultMap">
        SELECT
            SUBJ_CD,
            (SELECT SUM(LRN_SEC) FROM DAY_LRN_EX_LOG WHERE DT BETWEEN #{startDt} AND #{endDt} AND STUD_ID = #{studId} AND SUBJ_CD = A.SUBJ_CD GROUP BY SUBJ_CD) AS TOTAL_LRN_TM,
            SUB_SUBJ_CD,
            SUM(LRN_SEC) AS LRN_TM
        FROM hams_tutor_dashboard.DAY_LRN_EX_LOG A
        WHERE
            STUD_ID = #{studId}
          AND DT BETWEEN #{startDt} AND #{endDt}
        GROUP BY SUBJ_CD, SUB_SUBJ_CD
        HAVING SUM(LRN_SEC) <![CDATA[>]]> 0
        ORDER BY SUBJ_CD,SUB_SUBJ_CD
    </select>
    <select id="getLrnExChartSubjMsg" parameterType="hashMap" resultType="resultMap">
        SELECT
            SUBJ_CD,
            SUB_SUBJ_CD,
            CONCAT(
                    ' > ',
                    IFNULL(LRN_GRADE,''),CASE WHEN LRN_GRADE IS NOT NULL THEN '학년' ELSE '' END,IFNULL(LRN_TERM,''),CASE WHEN LRN_TERM IS NOT NULL THEN ' 학기 > ' ELSE '' END,
                    SUB_SUBJ_NM,' > ',
                    CTGR
                ) AS MSG
        FROM hams_tutor_dashboard.DAY_LRN_EX_LOG A
        WHERE
            STUD_ID = #{studId}
          AND DT BETWEEN #{startDt} AND #{endDt}
        GROUP BY SUBJ_CD, SUB_SUBJ_CD,CTGR
        HAVING SUM(LRN_SEC) <![CDATA[>]]> 0
        ORDER BY SUBJ_CD,SUB_SUBJ_CD
    </select>
    <select id="getExamStt" parameterType="hashMap" resultType="resultMap">
        SELECT
            ROUND((SUM(A.CRT_QUES_CNT) / SUM(A.ANS_QUES_CNT))*100) AS CRT_RT,
            B.TOP_10_CRT_RT,
            B.GRP_AVG_CRT_RT,
            SUM(A.EXPL_CNT) AS EXPL_CNT,
            SUM(A.ANS_QUES_CNT) AS ANS_QUES_CNT,
            SUM(A.CRT_QUES_CNT) AS CRT_QUES_CNT,
            SUM(A.INCRT_NOTE_NC_CNT) AS INCRT_NOTE_NC_CNT,
            SUM(A.SKIP_QUES_CNT) AS SKIP_QUES_CNT,
            SUM(A.CUSORY_QUES_CNT) AS CUSORY_QUES_CNT,
            SUM(A.GUESS_QUES_CNT) AS GUESS_QUES_CNT,
            SUM(A.MISTAKE_QUES_CNT) AS MISTAKE_QUES_CNT
        FROM
            hams_tutor_dashboard.STUD AS S
                JOIN
            (
                SELECT
                    STUD_ID,
                    SUBJ_CD,
                    SUM(QUES_CNT) AS ANS_QUES_CNT,
                    COUNT(*) AS EXPL_CNT,
                    SUM(CRT_CNT)  AS CRT_QUES_CNT,
                    SUM(INCRT_NT_REG_CNT) - SUM(INCRT_NT_FNSH_CNT) AS INCRT_NOTE_NC_CNT,
                    SUM(SKIP_QUES_CNT) AS SKIP_QUES_CNT,
                    SUM(CUSORY_QUES_CNT)AS CUSORY_QUES_CNT,
                    SUM(GUESS_QUES_CNT) AS GUESS_QUES_CNT,
                    SUM(MISTAKE_QUES_CNT) AS MISTAKE_QUES_CNT
                FROM(
                        SELECT
                            A.DT,
                            A.STUD_ID,
                            A.SUBJ_CD,
                            A.EXAM_CD,
                            A.EXAM_TYPE,
                            MAX(QUES_CNT) AS QUES_CNT,
                            MAX(CRT_CNT) AS CRT_CNT,
                            MAX(INCRT_NT_REG_CNT) AS INCRT_NT_REG_CNT,
                            MAX(INCRT_NT_FNSH_CNT) AS INCRT_NT_FNSH_CNT,
                            COUNT(CASE WHEN B.QUES_PTN = 'SKP' THEN 1 ELSE NULL END) AS SKIP_QUES_CNT,
                            COUNT(CASE WHEN B.QUES_PTN = 'CUR' THEN 1 ELSE NULL END) AS CUSORY_QUES_CNT,
                            COUNT(CASE WHEN B.QUES_PTN = 'GUC' OR QUES_PTN = 'GUI' THEN 1 ELSE NULL END) AS GUESS_QUES_CNT,
                            COUNT(CASE WHEN B.QUES_PTN = 'MIS' THEN 1 ELSE NULL END) AS MISTAKE_QUES_CNT
                        FROM
                            hams_tutor_dashboard.EXAM_RST AS A
                                JOIN
                            hams_tutor_dashboard.EXAM_RST_QUES_LOG AS B
                            ON
                                    A.STUD_ID = B.STUD_ID
                                    AND
                                    A.DT = B.DT
                                    AND
                                    A.EXAM_TYPE = B.EXAM_TYPE
                                    AND
                                    A.EXAM_CD = B.EXAM_CD
                        WHERE
                            A.STUD_ID = #{studId}
                          AND
                            A.DT BETWEEN #{startDt} AND #{endDt}
                          AND
                            A.DEL_YN = 'N'
                          AND
                            EXAM_SEC > 0
                          AND
                            A.SCORE IS NOT NULL
                        GROUP BY
                            A.EXAM_CD, A.EXAM_TYPE
                    ) AA
                GROUP BY SUBJ_CD
            ) AS A
            ON
                S.STUD_ID = A.STUD_ID
                JOIN
            hams_tutor_dashboard.MONTH_GRP_EXAM_RST AS B
            ON
                    B.GRADE = S.GRADE
                    AND B.YYMM = DATE_FORMAT(#{endDt},'%Y%m')
        GROUP BY
            S.STUD_ID,
            B.TOP_10_CRT_RT,
            B.GRP_AVG_CRT_RT

    </select>
    <select id="getExamChart" parameterType="hashMap" resultType="resultMap">
        SELECT
            A.SUBJ_CD,
            ROUND((A.CRT_QUES_CNT/A.ANS_QUES_CNT) * 100) AS CRT_RT,
            B.TOP_10_CRT_RT,
            B.GRP_AVG_CRT_RT,
            A.EXPL_CNT,
            A.ANS_QUES_CNT,
            A.CRT_QUES_CNT,
            A.INCRT_NOTE_NC_CNT,
            A.SKIP_QUES_CNT,
            A.CUSORY_QUES_CNT,
            A.GUESS_QUES_CNT,
            A.MISTAKE_QUES_CNT
        FROM
            hams_tutor_dashboard.STUD AS S
                JOIN
            (
                SELECT
                    STUD_ID,
                    SUBJ_CD,
                    SUM(QUES_CNT) AS ANS_QUES_CNT,
                    COUNT(*) AS EXPL_CNT,
                    SUM(CRT_CNT)  AS CRT_QUES_CNT,
                    SUM(INCRT_NT_REG_CNT) - SUM(INCRT_NT_FNSH_CNT) AS INCRT_NOTE_NC_CNT,
                    SUM(SKIP_QUES_CNT) AS SKIP_QUES_CNT,
                    SUM(CUSORY_QUES_CNT)AS CUSORY_QUES_CNT,
                    SUM(GUESS_QUES_CNT) AS GUESS_QUES_CNT,
                    SUM(MISTAKE_QUES_CNT) AS MISTAKE_QUES_CNT
                FROM(
                        SELECT
                            A.DT,
                            A.STUD_ID,
                            A.SUBJ_CD,
                            A.EXAM_CD,
                            A.EXAM_TYPE,
                            MAX(QUES_CNT) AS QUES_CNT,
                            MAX(CRT_CNT) AS CRT_CNT,
                            MAX(INCRT_NT_REG_CNT) AS INCRT_NT_REG_CNT,
                            MAX(INCRT_NT_FNSH_CNT) AS INCRT_NT_FNSH_CNT,
                            COUNT(CASE WHEN B.QUES_PTN = 'SKP' THEN 1 ELSE NULL END) AS SKIP_QUES_CNT,
                            COUNT(CASE WHEN B.QUES_PTN = 'CUR' THEN 1 ELSE NULL END) AS CUSORY_QUES_CNT,
                            COUNT(CASE WHEN B.QUES_PTN = 'GUC' OR QUES_PTN = 'GUI' THEN 1 ELSE NULL END) AS GUESS_QUES_CNT,
                            COUNT(CASE WHEN B.QUES_PTN = 'MIS' THEN 1 ELSE NULL END) AS MISTAKE_QUES_CNT
                        FROM
                            hams_tutor_dashboard.EXAM_RST AS A
                                JOIN
                            hams_tutor_dashboard.EXAM_RST_QUES_LOG AS B
                            ON
                                    A.STUD_ID = B.STUD_ID
                                    AND
                                    A.DT = B.DT
                                    AND
                                    A.EXAM_TYPE = B.EXAM_TYPE
                                    AND
                                    A.EXAM_CD = B.EXAM_CD
                        WHERE
                            A.STUD_ID = #{studId}
                          AND
                            A.DT BETWEEN #{startDt} AND #{endDt}
                          AND
                            A.DEL_YN = 'N'
                          AND
                            EXAM_SEC > 0
                          AND
                            A.SCORE IS NOT NULL
                        GROUP BY
                            A.EXAM_CD, A.EXAM_TYPE
                    ) AA
                GROUP BY SUBJ_CD
            ) AS A
            ON
                S.STUD_ID = A.STUD_ID
                JOIN
            hams_tutor_dashboard.MONTH_GRP_EXAM_SUBJ_RST AS B
            ON
                    B.GRADE = S.GRADE
                    AND B.SUBJ_CD = A.SUBJ_CD
                    AND B.YYMM = DATE_FORMAT(#{endDt},'%Y%m')

    </select>
</mapper>
