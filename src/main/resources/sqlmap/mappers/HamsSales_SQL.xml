<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="HamsSales">
	<select id="subjCodeInfo" parameterType="hashMap" resultType="resultMap">
	/* HamsSales.subjCodeInfo : 과목 코드 정보 */
		SELECT 
			CD AS SUBJ_CD,
		    CD_NM AS SUBJ_NM,
		    NULL AS UPPER_SUBJ_CD
		FROM COMM_CD
		WHERE 
			GRP = 'SUBJ'
			AND GRADE = 6
			AND LANG_CD = 'ko'
		    AND CD_TYPE = 'G'
		UNION ALL
		SELECT 
			CD AS SUBJ_CD,
		    CD_NM AS SUBJ_NM,
		    UPPER_CD AS UPPER_SUBJ_CD
		FROM COMM_SUB_CD
		WHERE 
			GRP = 'SUBJ'
			AND GRADE = 6
			AND LANG_CD = 'ko'
		    AND CD_TYPE = 'G'
	</select>
	
	<select id="selectStudInfo" parameterType="hashMap" resultType="resultMap">
	/* HamsSales.selectStudInfo : 학생 정보 */
		SELECT 
			STUD_ID,
			STUD_NM,
			GRADE,
			SCHL_NM,
			GENDER,
			TCHR_CHA_ID AS TCHR_ID,
			STU_NO AS STUDENT_NO,
			DATE_FORMAT(START_DT, '%Y-%m-%d') AS EXP_START_DT,
			DATE_FORMAT(END_DT, '%Y-%m-%d') AS EXP_END_DT
		FROM STUD
		WHERE 
			STUD_ID = #{studId}
		ORDER BY DT DESC
		LIMIT 1
	</select>
	
	<select id="selectLoginLogList" parameterType="hashMap" resultType="resultMap">
	/* HamsSales.selectLoginLogList : 일별 출석 로그 전체*/
		SELECT
			DATE_FORMAT(DT, '%Y-%m-%d') AS DT,
			DATE_FORMAT(LOGIN_DTTM, '%Y-%m-%d %H:%i:%s') AS LOGIN_DTTM
		FROM DAY_ATT_LOG
		WHERE
			DT BETWEEN #{startDt} AND #{endDt}
		    AND STUD_ID = #{studId}
		ORDER BY ORD DESC
		LIMIT 10
	</select>
	
	<select id="selectLrnPtn" parameterType="hashMap" resultType="resultMap">
	/* HamsSales.selectLrnPtn : 3일 리포트 학습 패턴*/
		SELECT 
			TOTAL_LRN_SEC
		FROM LRN_EX_DETAIL
		WHERE DT = #{dt}
			AND STUD_ID = #{studId}
	</select>
	
	<select id="selectThreeDayLrn" parameterType="hashMap" resultType="resultMap">
	/* HamsSales.selectThreeDayLrn : 3일 리포트 학습 요약*/
		SELECT
			POSITIVE_MSG_CNT, 
			NEGATIVE_MSG_CNT, 
			POSITIVE_MSG_CD_SP, 
			NEGATIVE_MSG_CD_SP, 
			LRN_EX_CNT, 
			SUMMARY_MSG_CD
		FROM DAY_LRN_SUMMARY
		WHERE DT = #{dt}
			AND STUD_ID = #{studId} 
	</select>
	
	<select id="selectThreeDayLrnMsg" parameterType="hashMap" resultType="resultMap">
	/* HamsSales.selectThreeDayLrnMsg : 3일 리포트 학습 요약 - 메시지*/
		SELECT
			CD_NM
		FROM COMM_CD
		WHERE 	
			CD IN
				<foreach collection="msgCd" item="msgCd" index="index" open="(" separator="," close=")">
					#{msgCd}
				</foreach>
			AND GRP = 'MSG'
		    AND GRADE = 6
		    AND LANG_CD = 'ko'
		    AND CD_TYPE = #{cdType}
	</select>
	
	<select id="selectLrnPtnTmln" parameterType="hashMap" resultType="resultMap">
	/* HamsSales.selectLrnPtnTmln : 3일 리포트 학습 패턴 - 타임라인*/
		SELECT 
			DATE_FORMAT(DT, '%Y.%m.%d') AS DT,
		    TIMESTAMPDIFF(DAY, START_DT, DT) + 1 AS EXP_DAY
		FROM STUD 
		WHERE DT BETWEEN #{dt} - INTERVAL 2 DAY  AND #{dt}
			AND STUD_ID = #{studId}
	</select>
	
	<select id="selectLrnTmln" parameterType="hashMap" resultType="resultMap">
	/* HamsSales.selectLrnTmln : 3일 리포트 학습 패턴 - 타임라인 상세*/
		SELECT 
			SERVICE_ID,
			SUBJ_CD,
		    EX_TM,
		    LRN_NM,
		    LRN_SEC,
		   	STD_LRN_TM_CD,
			CAST(EX_TYPE AS UNSIGNED) AS EX_TYPE,
		    DATE_FORMAT(PLAN_DT, '%Y.%m.%d' ) AS PLAN_DT
		FROM (
			SELECT 
				SERVICE_ID,
				SUBJ_CD,
				CONCAT(IFNULL(DATE_FORMAT(LRN_START_DTTM, '%H:%i'),''), ' ~ ', IFNULL(DATE_FORMAT(LRN_END_DTTM, '%H:%i'),''))AS EX_TM,
				CTGR AS LRN_NM,
				LRN_SEC,
				STD_LRN_TM_CD,
				EX_TYPE_CD AS EX_TYPE,
				PLAN_DT
			FROM DAY_LRN_TMLN
			WHERE DT = #{dt}
				AND STUD_ID = #{studId}
			UNION ALL
			SELECT 
				NULL AS SERVICE_ID,
				NULL AS SUBJ_CD,
				NULL AS EX_TM,
				CTGR AS LRN_NM,
				NULL AS LRN_SEC,
				NULL AS STD_LRN_TM_CD,
				2 AS EX_TYPE,
				PLAN_DT
			FROM DAY_PLAN_U_EX_STT
			WHERE DT = #{dt}
				AND STUD_ID = #{studId}
				AND LRN_EX_YN = 'N'
		)A
		<if test="ordNm != null and ordNm != ''">
			<choose>
				<when test="ordNm == 'planDt'">
					ORDER BY PLAN_DT DESC, EX_TYPE
				</when>
				<otherwise>
					ORDER BY IFNULL(EX_TM,'23:59 ~ 24:00')
				</otherwise>
			</choose>
		</if>
	</select>
	
	<select id="selectLrnExStt" parameterType="hashMap" resultType="resultMap">
	/* HamsSales.selectLrnExStt : 3일 리포트 학습 수행 결과*/
		SELECT
			LRN_SUBJ_CD_SP,
			LRN_EX_CNT_SP,
			TOTAL_LRN_EX_CNT,
			GRP_LRN_EX_CNT
		FROM (
			SELECT 
				B.LRN_SUBJ_CD_SP,
			    B.LRN_EX_CNT_SP,
			    B.TOTAL_LRN_EX_CNT,
			    CASE
			    	WHEN B.LRN_SUBJ_CD_SP IS NULL AND B.TOTAL_LRN_EX_CNT IS NULL THEN NULL
			    	ELSE C.TOTAL_LRN_EX_CNT
			    END AS GRP_LRN_EX_CNT
			FROM STUD A
			JOIN LRN_EX_DETAIL B ON A.DT = B.DT AND A.STUD_ID = B.STUD_ID
			JOIN LRN_EX_DETAIL_GRP C ON A.DT = C.DT AND A.GRADE = C.GRADE
			WHERE A.DT = #{dt}
				AND A.STUD_ID = #{studId}
		) A
	</select>
	
	<select id="selectLrnPlanStt" parameterType="hashMap" resultType="resultMap">
	/* HamsSales.selectLrnPlanStt : 3일 리포트 학습 수행 결과*/
		SELECT
			EX_RT,
			PLAN_CNT,
			EX_CNT,
		    GRP_AVG_EX_RT,
		    GRP_AVG_PLAN_CNT,
		    GRP_AVG_EX_CNT
		FROM (
			SELECT 
				B.PLAN_EX_RT AS EX_RT,
		        B.PLAN_CNT,
		        B.PLAN_EX_CNT AS EX_CNT,
		        CASE
					WHEN B.PLAN_CNT IS NULL THEN NULL
					ELSE C.PLAN_EX_RT
				END AS GRP_AVG_EX_RT,
		        CASE
					WHEN B.PLAN_CNT IS NULL THEN NULL
					ELSE C.PLAN_CNT
				END AS GRP_AVG_PLAN_CNT,
		        CASE
					WHEN B.PLAN_CNT IS NULL THEN NULL
					ELSE C.PLAN_EX_CNT
				END AS GRP_AVG_EX_CNT
			FROM STUD A
			JOIN LRN_EX_DETAIL B ON A.DT = B.DT AND A.STUD_ID = B.STUD_ID
			JOIN LRN_EX_DETAIL_GRP C ON A.DT = C.DT AND A.GRADE = C.GRADE
			WHERE A.DT = #{dt}
				AND A.STUD_ID = #{studId}
		) A
	</select>
	
	<select id="selectALrnStt" parameterType="hashMap" resultType="resultMap">
	/* HamsSales.selectALrnStt : 3일 리포트 학습 수행 결과*/
		SELECT
			A_LRN_SUBJ_CD_SP,
			A_LRN_EX_CNT_SP,
			A_LRN_EX_CNT,
			GRP_LRN_EX_CNT
		FROM (
			SELECT 
				B.A_LRN_SUBJ_CD_SP,
				B.A_LRN_EX_CNT_SP,
				B.A_LRN_EX_CNT,
				CASE
					WHEN B.LRN_SUBJ_CD_SP IS NULL AND B.TOTAL_LRN_EX_CNT IS NULL THEN NULL
					ELSE C.A_LRN_EX_CNT
				END AS GRP_LRN_EX_CNT
			FROM STUD A
			JOIN LRN_EX_DETAIL B ON A.DT = B.DT AND A.STUD_ID = B.STUD_ID
			JOIN LRN_EX_DETAIL_GRP C ON A.DT = C.DT AND A.GRADE = C.GRADE
			WHERE A.DT = #{dt}
				AND A.STUD_ID = #{studId}
		) A
	</select>
	
	<select id="selectExam" parameterType="hashMap" resultType="resultMap">
	/* HamsSales.selectExam : 3일 리포트 평가 결과*/
		SELECT
			A.EXPL_CNT,
		    CASE
				WHEN A.EXPL_CNT IS NULL OR A.EXPL_CNT = 0 THEN NULL
		        ELSE A.CRT_RT
		    END AS CRT_RT,
		    CASE
				WHEN A.EXPL_CNT IS NULL OR A.EXPL_CNT = 0 THEN NULL
		        ELSE B.ANS_QUES_CNT
		    END AS ANS_QUES_CNT,
		    CASE
				WHEN A.EXPL_CNT IS NULL OR A.EXPL_CNT = 0 THEN NULL
		        ELSE B.CRT_QUES_CNT
		    END AS CRT_QUES_CNT,
		    CASE
				WHEN A.EXPL_CNT IS NULL OR A.EXPL_CNT = 0 THEN NULL
		        ELSE C.SUBJ_CD_SP
		    END AS SUBJ_CD_SP,
		    CASE
				WHEN A.EXPL_CNT IS NULL OR A.EXPL_CNT = 0 THEN NULL
		        ELSE C.CRT_RT_SP
		    END AS CRT_RT_SP,
		    CASE
				WHEN A.EXPL_CNT IS NULL OR A.EXPL_CNT = 0 THEN NULL
		        ELSE C.EXPL_CNT_SP
		    END AS EXPL_CNT_SP,
		    CASE
				WHEN A.EXPL_CNT IS NULL OR A.EXPL_CNT = 0 THEN NULL
		        ELSE IFNULL(A.INCRT_NT_NC_CNT, 0)
		    END AS INCRT_NT_NC_CNT,
		    CASE
				WHEN A.EXPL_CNT IS NULL OR A.EXPL_CNT = 0 THEN NULL
		        ELSE IFNULL(A.IMPRV_SLV_HABIT_CNT, 0)
		    END AS IMPRV_SLV_HABIT_CNT,
		    CASE
				WHEN A.EXPL_CNT IS NULL OR A.EXPL_CNT = 0 THEN NULL
		        ELSE IFNULL(B.SKIP_QUES_CNT, 0)
		    END AS SKIP_QUES_CNT,
		    CASE
				WHEN A.EXPL_CNT IS NULL OR A.EXPL_CNT = 0 THEN NULL
		        ELSE IFNULL(B.GUESS_QUES_CNT, 0)
		    END AS GUESS_QUES_CNT,
		    CASE
				WHEN A.EXPL_CNT IS NULL OR A.EXPL_CNT = 0 THEN NULL
		        ELSE IFNULL(B.CURSORY_QUES_CNT, 0)
		    END AS CURSORY_QUES_CNT
		FROM (
			SELECT 
				STUD_ID,
		        EXPL_CNT,
		        CRT_RT,
		        IMPRV_SLV_HABIT_CNT,
		        CASE
		        	WHEN INCRT_NT_NC_CNT IS NULL AND ( EXPL_CNT IS NULL OR EXPL_CNT = 0 ) THEN NULL
		        	WHEN INCRT_NT_NC_CNT IS NULL AND EXPL_CNT > 0 THEN 0
		        	ELSE INCRT_NT_NC_CNT
		        END AS INCRT_NT_NC_CNT,
		        PLAN_CNT
			FROM DAY_MSG_CONDITION
		    WHERE DT = #{dt}
				AND STUD_ID = #{studId}
		) A
		LEFT OUTER JOIN (
			SELECT 
				STUD_ID,
				SUM(QUES_CNT) AS ANS_QUES_CNT,
        		SUM(CRT_CNT) AS CRT_QUES_CNT,
        		SUM(SKIP_QUES_CNT) AS SKIP_QUES_CNT,
		        ( SUM(IFNULL(GUESS_CRT_QUES_CNT, 0)) + SUM(IFNULL(GUESS_INCRT_QUES_CNT, 0)) ) AS GUESS_QUES_CNT,
		        SUM(CURSORY_QUES_CNT) AS CURSORY_QUES_CNT
			FROM EXAM_RST
			WHERE DT BETWEEN (#{dt} - INTERVAL 2 DAY) AND #{dt}
				AND STUD_ID = #{studId}
			GROUP BY STUD_ID
		) B ON A.STUD_ID = B.STUD_ID
		JOIN (
			SELECT 
				A.STUD_ID,
		        GROUP_CONCAT(A.SUBJ_CD ORDER BY A.SUBJ_CD SEPARATOR ',') AS SUBJ_CD_SP,
		        GROUP_CONCAT(IFNULL(B.EXPL_CNT,0) ORDER BY A.SUBJ_CD SEPARATOR ',') AS EXPL_CNT_SP,
		        GROUP_CONCAT(IFNULL(B.CRT_RT,0) ORDER BY A.SUBJ_CD SEPARATOR ',') AS CRT_RT_SP
			FROM (
				SELECT 
					STUD_ID,
					CD AS SUBJ_CD
				FROM STUD A
				JOIN COMM_CD B ON B.CD LIKE 'C%' AND B.GRP = 'SUBJ'
				WHERE DT = #{dt}
					AND STUD_ID = #{studId}
				) A 
			LEFT OUTER JOIN (
				SELECT 
					STUD_ID,
					SUBJ_CD,
					COUNT(STUD_ID) AS EXPL_CNT,
					ROUND(SUM(CRT_CNT) / SUM(QUES_CNT) * 100) AS CRT_RT,
					SUM(CRT_CNT),
					SUM(QUES_CNT)
				FROM EXAM_RST
				WHERE DT BETWEEN (#{dt} - INTERVAL 2 DAY) AND #{dt}
					AND STUD_ID = #{studId}
				GROUP BY STUD_ID, SUBJ_CD
			) B ON A.STUD_ID = B.STUD_ID AND A.SUBJ_CD = B.SUBJ_CD
		    GROUP BY A.STUD_ID
		) C ON A.STUD_ID = C.STUD_ID
	</select>
	
	<select id="selectExpl" parameterType="hashMap" resultType="resultMap">
	/* HamsSales.selectExpl : 3일 리포트 평가 목록*/
		SELECT
			A.EXAM_CD,
		    A.SMT_ID,
		    A.STU_ID,
			B.CD_NM AS SUBJ_CD,
		    A.SMT_DTTM,
		    A.EXAM_TYPE,
		    A.EXAM_NM,
		    '1차' AS ROUND,
		    A.CRT_RT,
		    A.CRT_CNT AS CRT_QUES_CNT,
		    A.QUES_CNT,
		    REPLACE(A.CRT_QUES_SP,'|',',') AS CRT_QUES_SP,
			REPLACE(A.GUESS_CRT_QUES_SP,'|',',')AS GUESS_QUES_SP,
			REPLACE(A.SKIP_QUES_SP,'|',',')AS SKIP_QUES_SP,
			REPLACE(A.CURSORY_QUES_SP,'|',',')AS CURSORY_QUES_SP,
			REPLACE(A.INCRT_QUES_SP,'|',',') AS INCRT_QUES_SP
		FROM EXAM_RST A
		JOIN COMM_CD B ON A.SUBJ_CD = B.CD AND B.GRP = 'SUBJ'
		WHERE A.DT BETWEEN (#{dt} - INTERVAL 2 DAY) AND #{dt}
			AND A.STUD_ID = #{studId}
		<if test='type != null and type != ""'>
			<choose>
				<when test="listSize == 1">
					AND A.EXAM_TYPE = #{type}
				</when>
				<otherwise>
					AND A.EXAM_TYPE IN
					<foreach collection="examType" item="type" index="index" open="(" separator="," close=")">
			       		 #{type}
			       </foreach>
		       </otherwise>
	       </choose>  
		</if>
		ORDER BY A.SMT_DTTM DESC
		<choose>
			<when test="( startIdx == null or startIdx == '') and (pageSize == null or pageSize == '')">
				LIMIT 0, 3
			</when>
			<when test="startIdx == null or startIdx == ''">
				LIMIT 0, ${pageSize}
			</when>
			<when test="pageSize == null or pageSize == ''">
				LIMIT ${idx}, 3
			</when>
			<otherwise>
				LIMIT ${idx},  ${pageSize}
			</otherwise>
		</choose>
	</select>
	
	<select id="selectExplCnt" parameterType="hashMap" resultType="resultMap">
	/* HamsSales.selectExplCnt : 3일 리포트 평가 목록 페이지 수*/
		SELECT
			COUNT(STUD_ID) AS TOTAL_CNT
		FROM EXAM_RST
		WHERE DT BETWEEN (#{dt} - INTERVAL 2 DAY) AND #{dt}
			AND STUD_ID = #{studId}
			<if test='type != null and type != ""'>
				<choose>
					<when test="listSize == 1">
						AND EXAM_TYPE = #{type}
					</when>
					<otherwise>
						AND EXAM_TYPE IN
						<foreach collection="examType" item="type" index="index" open="(" separator="," close=")">
				       		 #{type}
				       </foreach>
			       </otherwise>
		       </choose>  
			</if>
	</select>
	
	<select id="selectIncrtNote" parameterType="hashMap" resultType="resultMap">
	/* HamsSales.selectIncrtNote : 3일 리포트 평가 오답노트 목록*/
		SELECT
			B.EXAM_CD,
			B.SMT_ID,
		    B.STU_ID,
			B.GRADE_TERM,
		    C.CD_NM AS SUBJ_NM,
		    B.UNIT_NM,
		    B.EXAM_TYPE AS TYPE,
		    D.CD_NM AS LRN_STT,
		    B.QUES_CNT,
		    B.CRT_QUES_CNT,
		    B.INCRT_CNT AS REMAIN_QUES_CNT,
		    DATE_FORMAT(B.REG_DT, '%Y-%m-%d') AS INCRT_NOTE_REG_DT,
			DATE_FORMAT(B.SMT_DTTM, '%Y-%m-%d %H:%i:%s') AS SMT_DTTM
		FROM EXAM_RST A
		JOIN EXAM_RST_INCRT_NT B ON A.DT = B.DT AND A.STUD_ID = B.STUD_ID AND A.EXAM_TYPE = B.EXAM_TYPE AND A.EXAM_CD = B.EXAM_CD
		JOIN COMM_CD C ON B.SUBJ_CD = C.CD AND C.GRP = 'SUBJ'
		JOIN COMM_CD D ON B.LRN_STT = D.CD AND D.GRP = 'LRN_INFO'
		WHERE A.DT BETWEEN (#{dt} - INTERVAL 2 DAY) AND #{dt}
			AND A.STUD_ID = #{studId}
		ORDER BY B.SMT_DTTM
		<choose>
			<when test="( startIdx == null or startIdx == '') and (pageSize == null or pageSize == '')">
				LIMIT 0, 3
			</when>
			<when test="startIdx == null or startIdx == ''">
				LIMIT 0, ${pageSize}
			</when>
			<when test="pageSize == null or pageSize == ''">
				LIMIT ${idx}, 3
			</when>
			<otherwise>
				LIMIT ${idx},  ${pageSize}
			</otherwise>
		</choose>
	</select>
	
	<select id="selectIncrtNoteCnt" parameterType="hashMap" resultType="resultMap">
	/* HamsSales.selectIncrtNoteCnt : 3일 리포트 평가 오답노트 목록*/
		SELECT
			COUNT(A.STUD_ID) AS TOTAL_CNT
		FROM EXAM_RST A
		JOIN EXAM_RST_INCRT_NT B ON A.DT = B.DT AND A.STUD_ID = B.STUD_ID AND A.EXAM_TYPE = B.EXAM_TYPE AND A.EXAM_CD = B.EXAM_CD
		WHERE A.DT BETWEEN (#{dt} - INTERVAL 2 DAY) AND #{dt}
			AND A.STUD_ID = #{studId}
		ORDER BY B.SMT_DTTM
	</select>
	
	<select id="selectFeedback" parameterType="hashMap" resultType="resultMap">
	/* HamsSales.selectFeedback : 체험 리포트 피드백 */
		SELECT
			FEEDBACK.RECOMMEND_JOB,
			STUD.STUD_NM,
		    CONCAT(STUD.START_DT, '~', STUD.END_DT) AS EXP_DT,
			FEEDBACK.GUIDE_MSG,
			FEEDBACK.STT_MSG,
			FEEDBACK.POSITIVE_MSG,
			FEEDBACK.NEGATIVE_MSG,
			FEEDBACK.EXP_TCHR_CHA_NM,
			FEEDBACK.EXP_TCHR_CHA_CELL,
			FEEDBACK.MAX_SUBJ_CD
		FROM (
			SELECT 
				STUD_ID,
				GUIDE_MSG,
				RECOMMEND_JOB,
				STT_MSG,
				POSITIVE_MSG,
				NEGATIVE_MSG,
				EXP_TCHR_CHA_NM,
				EXP_TCHR_CHA_CELL,
				MAX_SUBJ_CD
			FROM EXP_REPORT_FEEDBACK
			WHERE STUD_ID = #{studId}
		) AS FEEDBACK
		JOIN (
			SELECT 
				MAX(DT) AS DT,
				STUD_ID, 
				STUD_NM, 
				START_DT, 
				END_DT
			FROM STUD
			WHERE 
				STUD_ID = #{studId}
		) AS STUD
		ON FEEDBACK.STUD_ID = STUD.STUD_ID
	</select>
	
	<select id="selectFeedbackCd" parameterType="hashMap" resultType="resultMap">
	/* HamsSales.selectFeedbackCd : 체험리포트 코드 조회*/
		SELECT
			CD_NM
		FROM COMM_CD
		WHERE 	
			CD = #{msgCd}
			AND GRP = #{grp}
		    AND GRADE = 6
		    AND LANG_CD = 'ko'
		    AND CD_TYPE = 'G'
	</select>
	
	<update id="updateFeedbackRecommendJob" parameterType="hashMap">
		UPDATE EXP_REPORT_FEEDBACK SET 
			RECOMMEND_JOB = #{recommendJob}
		WHERE STUD_ID = #{studId}
	</update>
	
	<select id="selectSubjLrnPtn" parameterType="hashMap" resultType="resultMap">
	/* HamsSales.selectSubjLrnPtn : 체험 리포트 과목별 학습 패턴 */
		SELECT
			SUBJ_CD,
			SUBJ_TOTAL_LRN_SEC AS TOTAL_LRN_SEC,
			SUB_SUBJ_CD_SP,
			SUB_SUBJ_LRN_SEC_SP,
			SUB_SUBJ_LRN_EX_CNT_SP
		FROM EXP_REPORT_SUBJ_LRN_EX_STT
		WHERE 
			STUD_ID = #{studId}
	</select>
	
	<select id="selectLrnHabitStt" parameterType="hashMap" resultType="resultMap">
	/* HamsSales.selectLrnHabitStt : 바른 학습 습관 현황 */
		SELECT 
			STUD_ID,
			ATT_HABIT_SCORE,
			ATT_RT,
			PLAN_DAY_CNT,
			ATT_DAY_CNT,
			IFNULL(DT_SP,'') AS DT_SP,
			IFNULL(PLAN_DT_SP,'') AS PLAN_DT_SP,
			IFNULL(ATT_DT_SP,'') AS ATT_DT_SP,
			PLAN_HABIT_SCORE,
			EX_RT,
			PLAN_CNT,
			EX_CNT,
			B_LRN_EX_CNT,
			LRN_EX_CNT,
			D_LRN_EX_CNT,
			U_LRN_EX_CNT,
			INCRT_NT_HABIT_SCORE,
			INCRT_NT_NC_CNT,
			A_LRN_HABIT_SCORE,
			A_LRN_EX_CNT,
			SUBJ_CD_SP,
			SUBJ_EX_CNT_SP,
			CONCN_HABIT_SCORE,
			LOW_CONCN_CNT,
			SLV_HABIT_SCORE,
			IMPRV_SLV_HABIT_CNT,
			SKIP_QUES_CNT,
			GUESS_QUES_CNT,
			CURSORY_QUES_CNT
		FROM EXP_REPORT_LRN_HABIT_STT
		WHERE STUD_ID = #{studId}
	</select>
	
	<select id="selectExamRstIncrtNTLog" parameterType="hashMap" resultType="resultMap">
	/* HamsSales.selectIncrtNTLog : 오답노트 확인 습관 목록 */
		SELECT
			REG_DT,
			SUBJ_NM,
			EXAM_NM AS UNIT_NM
		FROM EXP_REPORT_EXAM_RST_INCRT_NT
		WHERE 
			STUD_ID = #{studId}
		ORDER BY REG_DT DESC
		LIMIT 3
	</select>
	
	<select id="selectConcnHabitTmln" parameterType="hashMap" resultType="resultMap">
	/* HamsSales.selectConcnHabitTmln : 체험 리포트  집중하는 습관 타임라인 */
		SELECT 
			SUBJ_CD,
		    CONCAT(IFNULL(LRN_START_DTTM, ''), '~', IFNULL(SUBSTR(LRN_END_DTTM, -8), '')) AS TMLN,
			CTGR
		FROM EXP_REPORT_CONCN_HABIT_LRN_TMLN AS TMLN
		WHERE 
			STUD_ID = #{studId}
		ORDER BY ORD
		LIMIT 3
	</select>
	
	<select id="selectExamStt" parameterType="hashMap" resultType="resultMap">
	/* HamsSales.selectExamStt : 체험 리포트 평가 분석 */
		SELECT 
			CRT_RT,
			TOP10_AVG_SCORE,
			EXPL_CNT,
			ANS_QUES_CNT,
			CRT_QUES_CNT,
			(SELECT CD_NM FROM COMM_CD WHERE GRP = 'SUBJ' AND GRADE = '6' AND LANG_CD = 'ko' AND CD = RST.MAX_SUBJ_CD) AS MAX_SUBJ_NM,
			MAX_SUBJ_CRT_RT,
			MAX_SUBJ_TOP10_AVG_SCORE,
			MAX_SUBJ_EXPL_CNT,
			MAX_SUBJ_ANS_QUES_CNT,
		    MAX_SUBJ_CRT_QUES_CNT,
		    MAX_SUBJ_ACT_FIELD_NM_SP,
		    MAX_SUBJ_ACT_FIELD_CRT_RT_SP,
		    MAX_SUBJ_CONT_FIELD_NM_SP,
		    MAX_SUBJ_CONT_FIELD_CRT_RT_SP,
			(SELECT CD_NM FROM COMM_CD WHERE GRP = 'SUBJ' AND GRADE = '6' AND LANG_CD = 'ko' AND CD = RST.MIN_SUBJ_CD) AS MIN_SUBJ_NM,
			MIN_SUBJ_CRT_RT,
			MIN_SUBJ_TOP10_AVG_SCORE,
			MIN_SUBJ_EXPL_CNT,
			MIN_SUBJ_ANS_QUES_CNT,
		    MIN_SUBJ_CRT_QUES_CNT,
		    MIN_SUBJ_ACT_FIELD_NM_SP,
		    MIN_SUBJ_ACT_FIELD_CRT_RT_SP,
		    MIN_SUBJ_CONT_FIELD_NM_SP,
		    MIN_SUBJ_CONT_FIELD_CRT_RT_SP
		FROM EXP_REPORT_EXAM_RST AS RST
		WHERE STUD_ID = #{studId}
	</select>
	
	<select id="selectRecommendedContents" parameterType="hashMap" resultType="resultMap">
	/* HamsSales.selectRecommendedContents : 체험 리포트 콘텐츠 추천 */
		SELECT 
			STUD_ID,
			ORD,
			TYPE,
		    CD.CD_NM AS SUBJ,
		    SUB_CD.CD_NM AS SUBJ_DETAIL,
			EXPLANATION,
			THUM
		FROM (
			SELECT 
				STUD_ID,
				ORD,
				TYPE,
				SUBJ,
				SUBJ_DETAIL,
				EXPLANATION,
				THUM
			FROM EXP_REPORT_CONT_RECOMMEND
			WHERE 
				STUD_ID = #{studId}
		) AS CONT
		LEFT OUTER JOIN (
			SELECT
				CD, 
		        CD_NM
			FROM COMM_CD
			WHERE
				GRP = 'SUBJ'
				AND GRADE = 6
				AND LANG_CD = 'ko'
				AND CD_TYPE = 'G'
		) AS CD
		ON CONT.SUBJ = CD.CD
		LEFT OUTER JOIN (
			SELECT 
				CD, 
		        CD_NM
			FROM COMM_SUB_CD
			WHERE
				GRP = 'SUBJ'
				AND GRADE = 6
				AND LANG_CD = 'ko'
				AND CD_TYPE = 'G'
		) AS SUB_CD
		ON CONT.SUBJ_DETAIL = SUB_CD.CD
	</select>
	
	<update id="updateFeedback" parameterType="hashMap">
		UPDATE EXP_REPORT_FEEDBACK SET 
			GUIDE_MSG = #{guideMsg},
			RECOMMEND_JOB = #{recommendJob},
			STT_MSG = #{sttMsg},
			POSITIVE_MSG = #{positiveMsg},
			NEGATIVE_MSG = #{negativeMsg},
			EXP_TCHR_CHA_NM = #{expTchrChaNm},
			EXP_TCHR_CHA_CELL = #{expTchrChaCell}
		WHERE STUD_ID = #{studId}
	</update>
	
</mapper>
