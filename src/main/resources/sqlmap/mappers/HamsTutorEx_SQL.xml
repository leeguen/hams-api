<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="HamsTutorEx">
	
	<select id="selectPredictionCd" parameterType="hashMap" resultType="resultMap">
		SELECT 
			CD,
			CD_NM
		FROM COMM_CD
		WHERE GRP = 'PREDICTION_TYPE'
			AND LANG_CD = 'ko';
    </select>
    
    <select id="selectPredictionCount" parameterType="hashMap" resultType="resultMap">
		SELECT
			PREDICTION_TYPE,
		    COUNT(*) AS PREDICTION_CNT
		FROM (
			SELECT
				RP.STUD_ID,
				RP.PAYMENT_PROBABILITY,
				CASE
					WHEN RP.PAYMENT_PROBABILITY <![CDATA[>=]]> 70 THEN 'P1'
					WHEN RP.PAYMENT_PROBABILITY <![CDATA[>=]]> 40 AND RP.PAYMENT_PROBABILITY <![CDATA[<]]> 70 THEN 'P2'
					WHEN RP.PAYMENT_PROBABILITY IS NULL THEN 'F'
					ELSE 'P3'
				END AS PREDICTION_TYPE
			FROM SETTLEMENT_REPAY_PREDICTION RP
			JOIN STUD ST ON RP.STUD_ID = ST.STUD_ID
			JOIN TCHR TC ON RP.DT = TC.DT AND ST.TCHR_CHA_ID = TC.TCHR_ID AND TC.TCHR_ID = #{tchrId}
			WHERE RP.DT = #{dt}
				AND RP.EXCLUSION_REASON IS NULL
		) CNT
		GROUP BY PREDICTION_TYPE
    </select>
    
    <select id="selectPredictionList" parameterType="hashMap" resultType="resultMap">
		SELECT
			STUD_ID,
		    PREDICTION_TYPE
		FROM (
			SELECT
				RP.STUD_ID,
				RP.PAYMENT_PROBABILITY,
				CASE
					WHEN RP.PAYMENT_PROBABILITY <![CDATA[>=]]> 70 THEN 'P1'
					WHEN RP.PAYMENT_PROBABILITY <![CDATA[>=]]> 40 AND RP.PAYMENT_PROBABILITY <![CDATA[<]]> 70 THEN 'P2'
					WHEN RP.PAYMENT_PROBABILITY IS NULL THEN 'F'
					ELSE 'P3'
				END AS PREDICTION_TYPE
			FROM SETTLEMENT_REPAY_PREDICTION RP
			JOIN STUD ST ON RP.STUD_ID = ST.STUD_ID
			JOIN TCHR TC ON RP.DT = TC.DT AND ST.TCHR_CHA_ID = TC.TCHR_ID AND TC.TCHR_ID =  #{tchrId}
			WHERE RP.DT = #{dt}
				AND RP.EXCLUSION_REASON IS NULL
		) TPR
		ORDER BY PREDICTION_TYPE, STUD_ID
    </select>
	
	<select id="selectStudInfo" parameterType="hashMap" resultType="resultMap">
		SELECT
			START_DT
		FROM STUD
		WHERE STUD_ID = #{studId};
    </select>
	
	<select id="selectAiDiagnosisRst" parameterType="hashMap" resultType="resultMap">
		SELECT
			MSG_TYPE,
		    COUNT(*) AS CNT
		FROM DAY_7_CONSULTING_POINT_MSG
		WHERE DT = #{endDt}
			AND STUD_ID = #{studId}
		GROUP BY MSG_TYPE;
    </select>
    
    <select id="selectAiDiagnosisRstList" parameterType="hashMap" resultType="resultMap">
		SELECT 
			CASE
				WHEN INSTR(MSG_CD, 'G') <![CDATA[>]]> 0 THEN 'G' 
		        ELSE 'B'
		    END AS MSG_TYPE,
			MSG_CD,
			MSG 
		FROM COMM_MSG_CD WHERE MSG_TYPE = 'C'
    </select>
    
    <select id="selectAiDiagnosisRstMsg" parameterType="hashMap" resultType="resultMap">
		SELECT
			ST.STUD_ID,
		    CASE
				WHEN DL.PLAN_CNT IS NULL THEN 0
				WHEN DL.PLAN_CNT <![CDATA[<]]> (IFNULL(T_LRN_CNT,0) + IFNULL(AD_LRN_CNT,0)) THEN 100
		        ELSE ROUND((IFNULL(T_LRN_CNT,0) + IFNULL(AD_LRN_CNT,0)) / DL.PLAN_CNT * 100)
		    END AS EX_RT,
		    DL.A_LRN_EX_CNT AS A_LRN_CNT,
		    DLRN.D_LRN_CNT,
		    (DL.PLAN_CNT - (IFNULL(T_LRN_CNT,0) + IFNULL(AD_LRN_CNT,0))) AS N_LRN_CNT,
		    (SELECT SUBJ_NM FROM COMM_SUBJ_CD WHERE SUBJ_CD = ALRN.SUBJ_CD) AS SUBJ_CD,
			(SELECT SUBJ_NM FROM COMM_SUBJ_CD WHERE SUBJ_CD = ALRN.SUB_SUBJ_CD) AS SUB_SUBJ_CD,
		    DL.LRN_EX_REVERSE_ORD_CNT AS R_LRN_CNT,
			TM.BELOW_5_MIN_LRN_CNT AS B_LRN_CNT,
			TM.OVER_25_MIN_LRN_CNT AS O_LRN_CNT,
		    ATT.LOGIN_CNT,
		    CAST(ATT.PTN_RT AS SIGNED) AS PTN_RT,
		    ES.EXPL_CNT,
		    ES.PS_EXPL_CNT,
		    CASE
				WHEN ES.EXPL_CNT IS NULL THEN NULL
		        WHEN ES.PS_EXPL_CNT IS NULL THEN ES.EXPL_CNT
		        ELSE (ES.EXPL_CNT - ES.PS_EXPL_CNT)
		    END AS NPS_EXPL_CNT,
		    CASE
				WHEN ES.QUES_CNT IS NULL THEN 0
		        WHEN ES.QUES_CNT = 0 THEN 0
		        WHEN ES.QUES_CNT <![CDATA[<]]> ES.CRT_CNT THEN 100
		        ELSE ROUND(ES.CRT_CNT / ES.QUES_CNT * 100)
		    END AS CRT_RT,
		    ES.INCRT_NT_CNT,
		    ES.IMPRV_SLV_HABIT_CNT AS SLV_CNT,
		    ES.GUC_QUES_CNT,
		    ES.SKP_QUES_CNT,
		    ES.CUR_QUES_CNT
		FROM STUD ST
		LEFT OUTER JOIN DAY_7_LRN_EX_STT DL ON DL.DT = #{endDt} AND ST.STUD_ID = DL.STUD_ID
		LEFT OUTER JOIN DAY_7_EXAM_STT ES ON ES.DT = #{endDt} AND ST.STUD_ID = ES.STUD_ID
		LEFT OUTER JOIN (
			SELECT
				STUD_ID,
				COUNT(*) AS T_LRN_CNT
			FROM DAY_PLAN_T_LRN_EX_LOG
			WHERE PLAN_DT BETWEEN #{startDt} AND #{endDt}
				AND STUD_ID = #{studId}
		) TL ON ST.STUD_ID = TL.STUD_ID
		LEFT OUTER JOIN (
			SELECT
				STUD_ID,
				COUNT(*) AS AD_LRN_CNT
			FROM DAY_PLAN_AD_LRN_EX_LOG
			WHERE PLAN_DT BETWEEN #{startDt} AND #{endDt}
				AND STUD_ID = #{studId}
		) ADL ON ST.STUD_ID = ADL.STUD_ID
		LEFT OUTER JOIN (
			SELECT
				STUD_ID,
				COUNT(*) AS D_LRN_CNT
			FROM DAY_PLAN_AD_LRN_EX_LOG
			WHERE PLAN_DT BETWEEN #{startDt} AND #{endDt}
				AND STUD_ID = #{studId}
		        AND PLAN_DT <![CDATA[<]]> DT
		) DLRN ON ST.STUD_ID = DLRN.STUD_ID
		LEFT OUTER JOIN (
			SELECT
				STUD_ID,
				SUM(BELOW_5_MIN_LRN_CNT) AS BELOW_5_MIN_LRN_CNT,
				SUM(OVER_25_MIN_LRN_CNT) AS OVER_25_MIN_LRN_CNT
			FROM DAY_SUBJ_LRN_TM
			WHERE DT BETWEEN #{startDt} AND #{endDt}
				AND STUD_ID = #{studId}
		) TM ON ST.STUD_ID = TM.STUD_ID
		LEFT OUTER JOIN (
			SELECT
				STUD_ID,
				SUM(IF(LOGIN_YN = 'Y', 1, 0)) AS LOGIN_CNT,
		        ROUND(SUM(LOGIN_PTN) / SUM(IF(LOGIN_YN = 'Y',1,0)) * 100) AS PTN_RT
			FROM DAY_ATT_LOG
			WHERE DT BETWEEN #{startDt} AND #{endDt}
				AND STUD_ID = #{studId}
		        AND LOGIN_PTN IS NOT NULL
			GROUP BY STUD_ID
		) ATT ON ST.STUD_ID = ATT.STUD_ID
		LEFT OUTER JOIN (
			SELECT
				STUD_ID,
				SUBJ_CD,
				SUB_SUBJ_CD
			FROM DAY_SUBJ_A_LRN_EX_STT
			WHERE DT BETWEEN #{startDt} AND #{endDt}
				AND STUD_ID = #{studId}
			GROUP BY STUD_ID, SUBJ_CD, SUB_SUBJ_CD
			ORDER BY SUM(A_LRN_EX_CNT) DESC,
				CASE SUBJ_CD
				    WHEN 'C01' THEN 1
				    WHEN 'C02' THEN 2
				    WHEN 'C03' THEN 3
				    WHEN 'C04' THEN 4
				    WHEN 'C05' THEN 5
				    WHEN 'C06' THEN 6
				    WHEN 'N04' THEN 7
				    WHEN 'N03' THEN 8
				    WHEN 'N01' THEN 9
				    WHEN 'N02' THEN 10
				    WHEN 'N05' THEN 11
				    WHEN 'N06' THEN 12
				END
			LIMIT 1
		) ALRN ON ST.STUD_ID = ALRN.STUD_ID
		WHERE ST.STUD_ID = #{studId}
    </select>
	
	
	<select id="selectAiWeakChapterGuide" parameterType="hashMap" resultType="resultMap">
		SELECT
			SUBJ_CD,
		    TITLE,
		    CASE
				WHEN WC_CNT <![CDATA[>]]> 0 AND WU_CNT <![CDATA[>]]> 0 THEN REPLACE((SELECT MSG FROM COMM_MSG_CD WHERE MSG_CD = 'WCM0001'),'{n}',WC_CNT)
		        WHEN WC_CNT <![CDATA[>]]> 0 AND WU_CNT = 0 THEN (SELECT MSG FROM COMM_MSG_CD WHERE MSG_CD = 'WCM0003') 
		        ELSE (SELECT MSG FROM COMM_MSG_CD WHERE MSG_CD = 'WCM0002') 
		    END AS MSG,
		    CASE
				WHEN WC_CNT <![CDATA[>]]> 0 AND WU_CNT <![CDATA[>]]> 0 THEN ''
		        WHEN WC_CNT <![CDATA[>]]> 0 AND WU_CNT = 0 THEN (SELECT MSG FROM COMM_MSG_CD WHERE MSG_CD = 'WCS0002') 
		        ELSE (SELECT MSG FROM COMM_MSG_CD WHERE MSG_CD = 'WCS0001') 
		    END AS SUB_MSG,
   		    GUIDE_MSG_LIST
		FROM (
			SELECT
				(SELECT SUBJ_NM FROM COMM_SUBJ_CD WHERE SUBJ_CD = SUBJ.SUBJ_CD AND DEPTH = 1) AS SUBJ_CD,
				IFNULL(WEAK_UNIT_NM,'') AS TITLE,
				IFNULL(GUIDE_POINT,'') AS GUIDE_MSG_LIST,
				IFNULL(WC_CNT,0) AS WC_CNT,
		        IF(WU.STUD_ID IS NULL, 0, 1) AS WU_CNT
	        FROM STUD ST
			CROSS JOIN COMM_SUBJ_CD SUBJ ON SUBJ.SUBJ_CD LIKE 'C%' AND SUBJ.DEPTH = 1
			LEFT OUTER JOIN DAY_7_EXAM_STT EX ON EX.DT = #{endDt} AND ST.STUD_ID = EX.STUD_ID
			LEFT OUTER JOIN DAY_7_WEAK_UNIT_GUIDE WU ON EX.DT = WU.DT AND EX.STUD_ID = WU.STUD_ID AND SUBJ.SUBJ_CD = WU.SUBJ_CD
			LEFT OUTER JOIN (
				SELECT 
					STUD_ID,
					SUBJ_CD,
					COUNT(*) AS WC_CNT 
				FROM EXAM_UNIT_TEST_RST
				WHERE DT BETWEEN #{startDt} AND #{endDt} 
					AND STUD_ID = #{studId}
				GROUP BY STUD_ID, SUBJ_CD
			) EU ON EX.STUD_ID = EU.STUD_ID AND SUBJ.SUBJ_CD = EU.SUBJ_CD
			WHERE ST.STUD_ID = #{studId}
		) WC
    </select>
    
    <select id="selectAiRecommendQuestionSubjList" parameterType="hashMap" resultType="resultMap">
    	SELECT
			(SELECT SUBJ_NM FROM COMM_SUBJ_CD WHERE SUBJ_CD = ST.SUBJ_CD AND DEPTH = 1) AS SUBJ_CD,
		    CASE 
				WHEN QUES_CNT = 0 THEN (SELECT MSG FROM COMM_MSG_CD WHERE MSG_CD = 'RQM0002')
		        ELSE (SELECT MSG FROM COMM_MSG_CD WHERE MSG_CD = 'RQM0001')
		    END AS MSG,
		    CASE
				WHEN EXAM_CNT = 0 AND ALL_EXAM_CNT = 0 AND QUES_CNT = 0 THEN (SELECT MSG FROM COMM_MSG_CD WHERE MSG_CD = 'RQS0002')
		        WHEN ( EXAM_CNT <![CDATA[>]]> 0 OR ALL_EXAM_CNT <![CDATA[>]]> 0 ) AND QUES_CNT = 0 THEN (SELECT MSG FROM COMM_MSG_CD WHERE MSG_CD = 'RQS0003')
		        ELSE (SELECT MSG FROM COMM_MSG_CD WHERE MSG_CD = 'RQS0001')
		    END AS SUB_MSG
		FROM (
			SELECT
				ST.STUD_ID,
				SUBJ.SUBJ_CD
			FROM STUD ST
			JOIN COMM_SUBJ_CD SUBJ ON SUBJ.SUBJ_CD LIKE 'C%' AND SUBJ.DEPTH = 1
			LEFT OUTER JOIN DAY_7_WEAK_UNIT_GUIDE WU ON WU.DT = #{endDt} AND ST.STUD_ID = WU.STUD_ID AND SUBJ.SUBJ_CD = WU.SUBJ_CD
			WHERE ST.STUD_ID = #{studId}
		) ST
		LEFT OUTER JOIN (
			SELECT
				ST.STUD_ID,
				ST.SUBJ_CD,
		        COUNT(ST.CRT_RT) AS EXAM_CNT,
		        COUNT(QUES.SMT_ID) AS QUES_CNT,
		        IFNULL(ALL_EXAM_CNT,0) AS ALL_EXAM_CNT
			FROM (
				SELECT
					ST.STUD_ID,
					SUBJ.SUBJ_CD,
					WU.CRT_RT
				FROM STUD ST
				JOIN COMM_SUBJ_CD SUBJ ON SUBJ.SUBJ_CD LIKE 'C%' AND SUBJ.DEPTH = 1
				LEFT OUTER JOIN DAY_7_WEAK_UNIT_GUIDE WU ON WU.DT = #{endDt} AND ST.STUD_ID = WU.STUD_ID AND SUBJ.SUBJ_CD = WU.SUBJ_CD
				WHERE ST.STUD_ID = #{studId}
			) ST
			LEFT OUTER JOIN (
				SELECT 
					STUD_ID,
		            SUBJ_CD,
					COUNT(*) AS ALL_EXAM_CNT
		        FROM EXAM_RST 
		        WHERE DT BETWEEN #{startDt} AND #{endDt}
					AND STUD_ID = #{studId}
		            AND DEL_YN = 'N'
				GROUP BY STUD_ID, SUBJ_CD
		    ) ER ON ST.STUD_ID = ER.STUD_ID AND ST.SUBJ_CD = ER.SUBJ_CD
			LEFT OUTER JOIN(
				SELECT
					STUD_ID,
					SUBJ_CD,
					EXAM_CD,
					EXAM_TYPE,
					QUES_CD,
					SMT_ID,
					STU_ID,
					EXAM_NM,
					SMT_DTTM,
					QUES_PTN,
					ORD
				FROM (
					SELECT
						STUD_ID,
						SUBJ_CD,
						EXAM_CD,
						EXAM_TYPE,
						QUES_CD,
						SMT_ID,
						STU_ID,
						EXAM_NM,
						SMT_DTTM,
						QUES_PTN,
						CASE
							WHEN @STID = STUD_ID AND @SUBJCD = SUBJ_CD THEN @ROWNUM:=@ROWNUM+1
							ELSE @ROWNUM:=1
						END AS ORD,
						@STID:=STUD_ID AS STID,
						@SUBJCD:=SUBJ_CD AS SUBJCDS
					FROM (
						SELECT 
							STUD_ID,
							SUBJ_CD,
							EXAM_CD,
							EXAM_TYPE,
							QUES_CD,
							SMT_ID,
							STU_ID,
							EXAM_NM,
							SMT_DTTM,
							QUES_PTN,
							RANK_1,
							RANK_2
						FROM(
							SELECT
								STUD_ID,
								SUBJ_CD,
								EXAM_CD,
								EXAM_TYPE,
								QUES_CD,
								SMT_ID,
								(SELECT EXAM_NM FROM EXAM_RST WHERE DT = ER.DT AND STUD_ID = ER.STUD_ID AND EXAM_TYPE = ER.EXAM_TYPE AND EXAM_CD = ER.EXAM_CD) AS EXAM_NM,
								(SELECT STU_ID FROM EXAM_RST WHERE DT = ER.DT AND STUD_ID = ER.STUD_ID AND EXAM_TYPE = ER.EXAM_TYPE AND EXAM_CD = ER.EXAM_CD) AS STU_ID,
								(SELECT SMT_DTTM FROM EXAM_RST WHERE DT = ER.DT AND STUD_ID = ER.STUD_ID AND EXAM_TYPE = ER.EXAM_TYPE AND EXAM_CD = ER.EXAM_CD) AS SMT_DTTM,
								EXP_SEC,
								IFNULL(QUES_PTN_IRT, QUES_PTN) AS QUES_PTN,
								CASE
									WHEN IFNULL(QUES_PTN_IRT, QUES_PTN) = 'INC' THEN 1
									WHEN IFNULL(QUES_PTN_IRT, QUES_PTN) = 'MIS' THEN 2
									WHEN IFNULL(QUES_PTN_IRT, QUES_PTN) = 'GUI' THEN 3
									WHEN IFNULL(QUES_PTN_IRT, QUES_PTN) = 'GUC' THEN 3
									WHEN IFNULL(QUES_PTN_IRT, QUES_PTN) = 'CUR' THEN 4
									WHEN IFNULL(QUES_PTN_IRT, QUES_PTN) = 'SKP' THEN 5
								END AS RANK_1,
								CASE
									WHEN CRT_YN = 'N' OR CRT_YN = 'P' THEN 1
									WHEN CRT_YN = 'Y' THEN 2
								END AS RANK_2
							FROM EXAM_RST_QUES_LOG ER
							WHERE DT BETWEEN #{startDt} AND #{endDt}
								AND STUD_ID = #{studId}
								AND EXAM_TYPE NOT IN ('D', 'G', 'H')
								AND IFNULL(QUES_PTN_IRT,QUES_PTN) NOT IN ('CRT')
						) QPTN
						ORDER BY STUD_ID, SUBJ_CD, RANK_1, RANK_2, EXP_SEC
					) PTN,
					(SELECT @STID:='', @SUBJCD:='', @ROWNUM:=0 FROM DUAL) R
				) QPTN_1
				WHERE ORD  <![CDATA[<]]>  3
			) QUES ON ST.STUD_ID = QUES.STUD_ID AND ST.SUBJ_CD = QUES.SUBJ_CD AND IF(ST.CRT_RT IS NULL, QUES.ORD  <![CDATA[<]]>  3, QUES.ORD = 1)
		    GROUP BY ST.STUD_ID, ST.SUBJ_CD
		) MSG ON ST.STUD_ID = MSG.STUD_ID AND ST.SUBJ_CD = MSG.SUBJ_CD;
    </select>
    
    <select id="selectAiRecommendQuestion" parameterType="hashMap" resultType="resultMap">
		SELECT
			(SELECT SUBJ_NM FROM COMM_SUBJ_CD WHERE SUBJ_CD = ST.SUBJ_CD AND DEPTH = 1) AS SUBJ_CD,
			QUES.EXAM_CD AS EXAM_ID,
			QUES.QUES_CD,
			QUES.SMT_ID,
			QUES.STU_ID AS STU_NO,
			QUES.EXAM_NM,
			DATE_FORMAT(QUES.SMT_DTTM, '%Y-%m-%d %H:%i') AS SMT_DTTM,
			(SELECT CD_NM FROM COMM_CD WHERE CD = QUES.EXAM_TYPE AND GRP = 'EXAM') AS EXAM_TYPE,
			(SELECT CD_NM FROM COMM_CD WHERE CD = QUES.QUES_PTN AND GRP = 'QUES_PTN') AS RECOMMEND_TYPE
		FROM (
			SELECT
				ST.STUD_ID,
				SUBJ.SUBJ_CD,
				WU.CRT_RT
			FROM STUD ST
			JOIN COMM_SUBJ_CD SUBJ ON SUBJ.SUBJ_CD LIKE 'C%' AND SUBJ.DEPTH = 1
			LEFT OUTER JOIN DAY_7_WEAK_UNIT_GUIDE WU ON WU.DT = #{endDt} AND ST.STUD_ID = WU.STUD_ID AND SUBJ.SUBJ_CD = WU.SUBJ_CD
			WHERE ST.STUD_ID = #{studId}
		) ST
		LEFT OUTER JOIN(
			SELECT
				STUD_ID,
				SUBJ_CD,
				EXAM_CD,
				EXAM_TYPE,
				QUES_CD,
				SMT_ID,
				STU_ID,
				EXAM_NM,
				SMT_DTTM,
				QUES_PTN,
		        ORD
			FROM (
				SELECT
					STUD_ID,
					SUBJ_CD,
					EXAM_CD,
					EXAM_TYPE,
					QUES_CD,
					SMT_ID,
					STU_ID,
					EXAM_NM,
					SMT_DTTM,
					QUES_PTN,
					CASE
						WHEN @STID = STUD_ID AND @SUBJCD = SUBJ_CD THEN @ROWNUM:=@ROWNUM+1
						ELSE @ROWNUM:=1
					END AS ORD,
					@STID:=STUD_ID AS STID,
					@SUBJCD:=SUBJ_CD AS SUBJCDS
				FROM (
					SELECT 
						STUD_ID,
						SUBJ_CD,
						EXAM_CD,
						EXAM_TYPE,
						QUES_CD,
						SMT_ID,
						STU_ID,
						EXAM_NM,
						SMT_DTTM,
						QUES_PTN,
						RANK_1,
						RANK_2
					FROM(
						SELECT
							STUD_ID,
							SUBJ_CD,
							EXAM_CD,
							EXAM_TYPE,
							QUES_CD,
							SMT_ID,
							(SELECT EXAM_NM FROM EXAM_RST WHERE DT = ER.DT AND STUD_ID = ER.STUD_ID AND EXAM_TYPE = ER.EXAM_TYPE AND EXAM_CD = ER.EXAM_CD) AS EXAM_NM,
							(SELECT STU_ID FROM EXAM_RST WHERE DT = ER.DT AND STUD_ID = ER.STUD_ID AND EXAM_TYPE = ER.EXAM_TYPE AND EXAM_CD = ER.EXAM_CD) AS STU_ID,
							(SELECT SMT_DTTM FROM EXAM_RST WHERE DT = ER.DT AND STUD_ID = ER.STUD_ID AND EXAM_TYPE = ER.EXAM_TYPE AND EXAM_CD = ER.EXAM_CD) AS SMT_DTTM,
							EXP_SEC,
							IFNULL(QUES_PTN_IRT, QUES_PTN) AS QUES_PTN,
							CASE
								WHEN IFNULL(QUES_PTN_IRT, QUES_PTN) = 'INC' THEN 1
								WHEN IFNULL(QUES_PTN_IRT, QUES_PTN) = 'MIS' THEN 2
								WHEN IFNULL(QUES_PTN_IRT, QUES_PTN) = 'GUI' THEN 3
								WHEN IFNULL(QUES_PTN_IRT, QUES_PTN) = 'GUC' THEN 3
								WHEN IFNULL(QUES_PTN_IRT, QUES_PTN) = 'CUR' THEN 4
								WHEN IFNULL(QUES_PTN_IRT, QUES_PTN) = 'SKP' THEN 5
							END AS RANK_1,
							CASE
								WHEN CRT_YN = 'N' OR CRT_YN = 'P' THEN 1
								WHEN CRT_YN = 'Y' THEN 2
							END AS RANK_2
						FROM EXAM_RST_QUES_LOG ER
						WHERE DT BETWEEN #{startDt} AND #{endDt}
							AND STUD_ID = #{studId}
		                    AND EXAM_TYPE NOT IN ('D', 'G', 'H')
							AND IFNULL(QUES_PTN_IRT,QUES_PTN) NOT IN ('CRT')
					) QPTN
					ORDER BY STUD_ID, SUBJ_CD, RANK_1, RANK_2, EXP_SEC
				) PTN,
				(SELECT @STID:='', @SUBJCD:='', @ROWNUM:=0 FROM DUAL) R
			) QPTN_1
			WHERE ORD <![CDATA[<]]> 3
		) QUES ON ST.STUD_ID = QUES.STUD_ID AND ST.SUBJ_CD = QUES.SUBJ_CD AND IF(ST.CRT_RT IS NULL, QUES.ORD <![CDATA[<]]> 3, QUES.ORD = 1);
    </select>
    
    <select id="selectAiRecommendCourse" parameterType="hashMap" resultType="resultMap">
		SELECT
			STUD_NM
		FROM STUD ST
		WHERE ST.STUD_ID = #{studId}
    </select>
    
    <select id="selectAiRecommendCourseList" parameterType="hashMap" resultType="resultMap">
		SELECT
			(SELECT SUBJ_NM FROM COMM_SUBJ_CD WHERE SUBJ_CD = RC.SUBJ_CD AND DEPTH = 1) AS SUBJ_CD,
		    LRN.EX_RT,
		    CASE
				WHEN EX_RT BETWEEN 90 AND 100 THEN 'G'
		        WHEN EX_RT BETWEEN 30 AND 89 THEN 'Y'
		        WHEN EX_RT BETWEEN 0 AND 29 THEN 'R'
		        ELSE NULL
		    END AS EX_RT_TYPE,
		    EXAM.CRT_RT,
			CASE
				WHEN CRT_RT BETWEEN 80 AND 100 THEN 'G'
		        WHEN CRT_RT BETWEEN 50 AND 79 THEN 'Y'
		        WHEN CRT_RT BETWEEN 0 AND 49 THEN 'R'
		        ELSE NULL
		    END AS CRT_RT_TYPE,
			COURSE_CTGR_01 AS COURSE_TITLE_1,
			COURSE_NM_01 AS COURSE_NM_1,
			COURSE_ID_01 AS COURSE_ID_1,
			COURSE_CTGR_02 AS COURSE_TITLE_2,
			COURSE_NM_02 AS COURSE_NM_2,
			COURSE_ID_02 AS COURSE_ID_2,
			COURSE_CTGR_03 AS COURSE_TITLE_3,
			COURSE_NM_03 AS COURSE_NM_3,
			COURSE_ID_03 AS COURSE_ID_3
		FROM STUD_RECOMMEND_COURSE RC
		LEFT OUTER JOIN (
			SELECT
				PLAN.STUD_ID,
				PLAN.SUBJ_CD,
				CASE
					WHEN PLAN_CNT <![CDATA[<]]> LRN_CNT THEN 100
					ELSE ROUND(LRN_CNT / PLAN_CNT * 100)
				END AS EX_RT
			FROM (
				SELECT
					STUD_ID,
					SUBJ_CD,
					SUM(PLAN_CNT) AS PLAN_CNT
				FROM (
					SELECT
						STUD_ID,
						SUBJ_CD,
						PLAN_CNT
					FROM DAY_SUBJ_PLAN_STT
					WHERE DT BETWEEN #{startDt} AND LAST_DAY(#{startDt})
						AND STUD_ID = #{studId}
						AND SUBJ_CD IN ('C01', 'C02', 'C03', 'C04', 'C05', 'C06')
						-- AND SUBJ_CD IN ('C01', 'C02', 'C03', 'C04', 'C05', 'C06', 'N01', 'N02')
				) PLAN_1
				GROUP BY STUD_ID, SUBJ_CD
			) PLAN
			LEFT OUTER JOIN (
				SELECT
					STUD_ID,
					SUBJ_CD,
					COUNT(STUD_ID) AS LRN_CNT
				FROM DAY_LRN_EX_LOG
				WHERE PLAN_DT BETWEEN #{startDt} AND LAST_DAY(#{startDt})
					AND STUD_ID = #{studId}
					AND SUBJ_CD IN ('C01', 'C02', 'C03', 'C04', 'C05', 'C06')
					AND FNSH_YN = 'Y'
					AND PLAN_UPD_YN IS NULL
				GROUP BY STUD_ID, SUBJ_CD
			) LRN ON PLAN.STUD_ID = LRN.STUD_ID AND PLAN.SUBJ_CD = LRN.SUBJ_CD
		) LRN ON RC.STUD_ID = LRN.STUD_ID AND RC.SUBJ_CD = LRN.SUBJ_CD
		LEFT OUTER JOIN (
			SELECT
				STUD_ID,
		        SUBJ_CD,
				CASE
					WHEN QUES_CNT <![CDATA[<]]> CRT_CNT THEN 100
					ELSE ROUND(CRT_CNT / QUES_CNT * 100)
				END AS CRT_RT
			FROM EXAM_MONTH_SUBJ_RST
			WHERE YYMM = #{yymm}
				AND STUD_ID = #{studId}
		) EXAM ON RC.STUD_ID = EXAM.STUD_ID AND RC.SUBJ_CD = EXAM.SUBJ_CD
		WHERE RC.YYMM = #{yymm}
			AND RC.STUD_ID = #{studId};
    </select>
    <select id="selectAiRecommendCourseRstList" parameterType="hashMap" resultType="resultMap">
		SELECT
			(SELECT SUBJ_NM FROM COMM_SUBJ_CD WHERE SUBJ_CD = ST.SUBJ_CD AND DEPTH = 1) AS SUBJ_CD,
		    LRN.EX_RT,
		    CASE
				WHEN EX_RT BETWEEN 90 AND 100 THEN 'G'
		        WHEN EX_RT BETWEEN 30 AND 89 THEN 'Y'
		        WHEN EX_RT BETWEEN 0 AND 29 THEN 'R'
		        ELSE NULL
		    END AS EX_RT_TYPE,
		    EXAM.CRT_RT,
			CASE
				WHEN CRT_RT BETWEEN 80 AND 100 THEN 'G'
		        WHEN CRT_RT BETWEEN 50 AND 79 THEN 'Y'
		        WHEN CRT_RT BETWEEN 0 AND 49 THEN 'R'
		        ELSE NULL
		    END AS CRT_RT_TYPE,
		    COMPRE,
		    CASE
				WHEN COMPRE BETWEEN 80 AND 100 THEN 'G'
				WHEN COMPRE BETWEEN 50 AND 79 THEN 'Y'
				WHEN COMPRE BETWEEN 0 AND 49 THEN 'R'
				ELSE NULL
			END AS COMPRE_TYPE
		FROM (
			SELECT
				STUD_ID,
		        SUBJ_CD
			FROM STUD ST
		    CROSS JOIN COMM_SUBJ_CD SU
		    WHERE ST.STUD_ID = #{studId}
				AND SU.SUBJ_CD LIKE 'C%'
				AND SU.DEPTH = 1
		) ST
		LEFT OUTER JOIN (
			SELECT
				PLAN.STUD_ID,
				PLAN.SUBJ_CD,
				CASE
					WHEN PLAN_CNT <![CDATA[<]]> LRN_CNT THEN 100
					ELSE ROUND(LRN_CNT / PLAN_CNT * 100)
				END AS EX_RT
			FROM (
				SELECT
					STUD_ID,
					SUBJ_CD,
					SUM(PLAN_CNT) AS PLAN_CNT
				FROM (
					SELECT
						STUD_ID,
						SUBJ_CD,
						PLAN_CNT
					FROM DAY_SUBJ_PLAN_STT
					WHERE DT BETWEEN #{startDt} AND LAST_DAY(#{startDt})
						AND STUD_ID = #{studId}
						AND SUBJ_CD IN ('C01', 'C02', 'C03', 'C04', 'C05', 'C06')
						-- AND SUBJ_CD IN ('C01', 'C02', 'C03', 'C04', 'C05', 'C06', 'N01', 'N02')
				) PLAN_1
				GROUP BY STUD_ID, SUBJ_CD
			) PLAN
			LEFT OUTER JOIN (
				SELECT
					STUD_ID,
					SUBJ_CD,
					COUNT(STUD_ID) AS LRN_CNT
				FROM DAY_LRN_EX_LOG
				WHERE PLAN_DT BETWEEN #{startDt} AND LAST_DAY(#{startDt})
					AND STUD_ID = #{studId}
					AND SUBJ_CD IN ('C01', 'C02', 'C03', 'C04', 'C05', 'C06')
					AND FNSH_YN = 'Y'
					AND PLAN_UPD_YN IS NULL
				GROUP BY STUD_ID, SUBJ_CD
			) LRN ON PLAN.STUD_ID = LRN.STUD_ID AND PLAN.SUBJ_CD = LRN.SUBJ_CD
		) LRN ON ST.STUD_ID = LRN.STUD_ID AND ST.SUBJ_CD = LRN.SUBJ_CD
		LEFT OUTER JOIN (
			SELECT
				STUD_ID,
		        SUBJ_CD,
				CASE
					WHEN QUES_CNT <![CDATA[<]]> CRT_CNT THEN 100
					ELSE ROUND(CRT_CNT / QUES_CNT * 100)
				END AS CRT_RT
			FROM EXAM_MONTH_SUBJ_RST
			WHERE YYMM = #{yymm}
				AND STUD_ID = #{studId}
		) EXAM ON ST.STUD_ID = EXAM.STUD_ID AND ST.SUBJ_CD = EXAM.SUBJ_CD
		LEFT OUTER JOIN (
			SELECT
				STUD_ID,
				SUBJ_CD,
				CASE
					WHEN TRUE_SCORE = 0 THEN NULL
					ELSE CAST(ROUND(TRUE_SCORE / QUES_CNT * 100) AS UNSIGNED)
				END AS COMPRE
			FROM (
				SELECT
					STUD_ID,
					SUBJ_CD,
					SUM(IFNULL(QUES_CNT,0)) AS QUES_CNT,
					SUM(IFNULL(TRUE_SCORE,0)) AS TRUE_SCORE
				FROM EXAM_RST
				WHERE DT BETWEEN #{startDt} AND LAST_DAY(#{startDt})
					AND STUD_ID = #{studId}
				GROUP BY STUD_ID, SUBJ_CD
			) COMP
		) IRT ON ST.STUD_ID = IRT.STUD_ID AND ST.SUBJ_CD = IRT.SUBJ_CD;
    </select>
</mapper>
