<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Homelog">

	<select id="selectHomelogPageCnt" parameterType="hashMap" resultType="resultMap">
		/* Homelog.selectHomelogPageCnt */
		SELECT
			COUNT(*) AS TOTAL_CNT,
		    CAST(CEIL((COUNT(*) / 10)) AS UNSIGNED) AS PAGE_CNT
		FROM STUD_HOMELOG_HISTORY
		WHERE STUD_ID = #{studId}
			AND YYYY = #{yyyy};
	</select>
	
	<select id="selectHomelogCntList" parameterType="hashMap" resultType="resultMap">
		/* Homelog.selectHomelogCntList */
		SELECT
		    YYYY,
		    COUNT(*) AS H_LOG_CNT
		FROM STUD_HOMELOG_HISTORY
		WHERE STUD_ID = #{studId}
		<choose>
			<when test='startYyyy != null and endYyyy != null'>
			AND YYYY BETWEEN #{startYyyy} AND #{endYyyy}
			</when>
			<when test='startYyyy != null and endYyyy == null'>
			AND YYYY = #{startYyyy}
			</when>
			<when test='startYyyy == null and endYyyy != null'>
			AND YYYY = #{endYyyy}
			</when>
		</choose>
		GROUP BY STUD_ID, YYYY;
	</select>
	
	<select id="selectHomelogAdminList" parameterType="hashMap" resultType="resultMap">
		/* Homelog.selectHomelogAdminList */
		SELECT
			CD,
		    GRP,
		    GRP_CD,
		    NAME,
		    PROPERTY,
		    CONT,
		    TCHR_NAME,
		    STATUS,
		    TEMPLATE_URL,
		    DATE_FORMAT(REG_DTTM, '%Y-%m-%d %H:%i:%s') AS REG_DTTM
		FROM (
			SELECT
				A.CD,
				'학습분석 상' AS GRP,
				A.GRP_CD,
				B.NAME,
				B.PROPERTY_CONT AS PROPERTY,
				B.CONT,
				'아이뚜루' AS TCHR_NAME,
				CASE
					WHEN A.EXPS_YN = 'Y' AND A.DEL_YN = 'N' THEN '수여 완료'
			        WHEN A.EXPS_YN = 'N' AND A.DEL_YN = 'N' THEN CONCAT('수여 대기중', '(', DATE_FORMAT(A.PRST_DT, '%y.%m.%d'), '수여)')
			        WHEN A.DEL_YN = 'Y' THEN '삭제 완료'
			    END AS STATUS,
				(SELECT CONCAT(TEMPLATE_URL, TEMPLATE_NM, '.png') FROM TEMPLATE_INFO WHERE CD = B.TEMPLATE_CD) AS TEMPLATE_URL,
				A.REG_DTTM
			FROM STUD_HOMELOG_HISTORY A
			JOIN TCHR_AUTO_HOMELOG_INFO B ON B.TCHR_ID = 0 AND A.CD = B.CD AND B.DEL_YN = 'N'
			WHERE A.STUD_ID = #{studId}
				AND A.YYYY = #{yyyy}
			UNION ALL
			SELECT
				A.CD,
				'선생님 상' AS GRP,
				A.GRP_CD,
				B.NAME,
				B.PROPERTY_CONT AS PROPERTY,
				B.CONT,
				NULL AS TCHR_NAME,
				CASE
					WHEN A.EXPS_YN = 'Y' AND A.DEL_YN = 'N' THEN '수여 완료'
			        WHEN A.EXPS_YN = 'N' AND A.DEL_YN = 'N' THEN CONCAT('수여 대기중', '(', DATE_FORMAT(A.PRST_DT, '%y.%m.%d'), '수여)')
			        WHEN A.DEL_YN = 'Y' THEN '삭제 완료'
			    END AS STATUS,
				(SELECT CONCAT(TEMPLATE_URL, TEMPLATE_NM, '.png') FROM TEMPLATE_INFO WHERE CD = B.TEMPLATE_CD) AS TEMPLATE_URL,
				A.REG_DTTM
			FROM STUD_HOMELOG_HISTORY A
			JOIN TCHR_MANUAL_HOMELOG_INFO B ON A.TCHR_ID = B.TCHR_ID AND A.CD = B.CD AND B.DEL_YN = 'N'
			WHERE A.STUD_ID = #{studId}
				AND A.YYYY = #{yyyy}
		) A
		ORDER BY REG_DTTM, CD
		LIMIT 10
		OFFSET #{page};
	</select>
	
	<select id="selectHomelogDetailList" parameterType="hashMap" resultType="resultMap">
		/* Homelog.selectHomelogDetailList */
		SELECT
			CD,
			ID,
		    GRP,
		    GRP_CD,
		    NAME,
		    STUD_NAME,
		    PROPERTY,
		    PERIOD,
		    CONT,
		    TCHR_NAME,
		    TEMPLATE_URL,
		    DATE_FORMAT(REG_DTTM, '%Y-%m-%d %H:%i:%s') AS REG_DTTM
		FROM (
			SELECT
				A.CD,
				CONCAT('ISE-FFC-99-', RIGHT(A.CD,4)) AS ID,
				'학습분석 상' AS GRP,
				A.GRP_CD,
				B.NAME,
				NULL AS STUD_NAME,
				B.PROPERTY_CONT AS PROPERTY,
				CASE
					WHEN B.PERIOD_STT_DT IS NULL AND B.PERIOD_END_DT IS NULL THEN NULL
					ELSE CONCAT(B.PERIOD_STT_DT, ' ~ ', B.PERIOD_END_DT)
				END AS PERIOD,
				B.CONT,
				'아이뚜루' AS TCHR_NAME,
				(SELECT CONCAT(TEMPLATE_URL, TEMPLATE_NM, '.png') FROM TEMPLATE_INFO WHERE CD = B.TEMPLATE_CD) AS TEMPLATE_URL,
				A.REG_DTTM
			FROM STUD_HOMELOG_HISTORY A
			JOIN TCHR_AUTO_HOMELOG_INFO B ON B.TCHR_ID = 0 AND A.CD = B.CD AND B.DEL_YN = 'N'
			WHERE A.STUD_ID = #{studId}
				AND A.YYYY = #{yyyy}
			UNION ALL
			SELECT
				A.CD,
				CONCAT('ISE-FFC-',LEFT(RIGHT(A.CD,6),2),'-', RIGHT(A.CD,4)) AS ID,
				'선생님 상' AS GRP,
				A.GRP_CD,
				B.NAME,
				NULL AS STUD_NAME,
				B.PROPERTY_CONT AS PROPERTY,
				CASE
					WHEN B.PERIOD_STT_DT IS NULL AND B.PERIOD_END_DT IS NULL THEN NULL
					ELSE CONCAT(B.PERIOD_STT_DT, ' ~ ', B.PERIOD_END_DT)
				END AS PERIOD,
				B.CONT,
				NULL AS TCHR_NAME,
				(SELECT CONCAT(TEMPLATE_URL, TEMPLATE_NM, '.png') FROM TEMPLATE_INFO WHERE CD = B.TEMPLATE_CD) AS TEMPLATE_URL,
				A.REG_DTTM
			FROM STUD_HOMELOG_HISTORY A
			JOIN TCHR_MANUAL_HOMELOG_INFO B ON A.TCHR_ID = B.TCHR_ID AND A.CD = B.CD AND B.DEL_YN = 'N'
			WHERE A.STUD_ID = #{studId}
				AND A.YYYY = #{yyyy}
		) A
		ORDER BY REG_DTTM, CD
		LIMIT 10
		OFFSET #{page};
	</select>
	
	<select id="selectHomelogThumbList" parameterType="hashMap" resultType="resultMap">
		/* Homelog.selectHomelogThumbList */
		SELECT
			CD,
		    GRP,
		    GRP_CD,
		    NAME,
		    PROPERTY,
		    TEMPLATE_URL,
		    DATE_FORMAT(REG_DTTM, '%Y-%m-%d %H:%i:%s') AS REG_DTTM
		FROM (
			SELECT
				A.CD,
				'학습분석 상' AS GRP,
				A.GRP_CD,
				B.NAME,
				B.PROPERTY_CONT AS PROPERTY,
				(SELECT CONCAT(TEMPLATE_URL, TEMPLATE_NM, '.png') FROM TEMPLATE_INFO WHERE CD = B.TEMPLATE_CD) AS TEMPLATE_URL,
				A.REG_DTTM
			FROM STUD_HOMELOG_HISTORY A
			JOIN TCHR_AUTO_HOMELOG_INFO B ON B.TCHR_ID = 0 AND A.CD = B.CD AND B.DEL_YN = 'N'
			WHERE A.STUD_ID = #{studId}
				AND A.YYYY = #{yyyy}
			UNION ALL
			SELECT
				A.CD,
				'선생님 상' AS GRP,
				A.GRP_CD,
				B.NAME,
				B.PROPERTY_CONT AS PROPERTY,
				(SELECT CONCAT(TEMPLATE_URL, TEMPLATE_NM, '.png') FROM TEMPLATE_INFO WHERE CD = B.TEMPLATE_CD) AS TEMPLATE_URL,
				A.REG_DTTM
			FROM STUD_HOMELOG_HISTORY A
			JOIN TCHR_MANUAL_HOMELOG_INFO B ON A.TCHR_ID = B.TCHR_ID AND A.CD = B.CD AND B.DEL_YN = 'N'
			WHERE A.STUD_ID = #{studId}
				AND A.YYYY = #{yyyy}
		) A
		ORDER BY REG_DTTM, CD
		LIMIT 10
		OFFSET #{page};
	</select>
	
	<select id="selectHomelogDetail" parameterType="hashMap" resultType="resultMap">
		/* Homelog.selectHomelogDetail */
		SELECT
			A.CD,
			CONCAT('ISE-FFC-',LEFT(RIGHT(A.CD,6),2),'-', RIGHT(A.CD,4)) AS ID,
			CASE
				WHEN A.GRP_CD = 'A' THEN '학습분석 상'
				ELSE '선생님 상'  
			END AS GRP,
			A.GRP_CD,
			B.NAME,
			NULL AS STUD_NAME,
			B.PROPERTY_CONT AS PROPERTY,
			CASE
				WHEN B.PERIOD_STT_DT IS NULL AND B.PERIOD_END_DT IS NULL THEN NULL
				ELSE CONCAT(B.PERIOD_STT_DT, ' ~ ', B.PERIOD_END_DT)
			END AS PERIOD,
			B.CONT,
			NULL AS TCHR_NAME,
			(SELECT CONCAT(TEMPLATE_URL, TEMPLATE_NM, '.png') FROM TEMPLATE_INFO WHERE CD = B.TEMPLATE_CD) AS TEMPLATE_URL,
			NULL AS SHORT_URL,
			DATE_FORMAT(A.REG_DTTM, '%Y-%m-%d %H:%i:%s') AS REG_DTTM
		<choose>
			<when test='grpCd != null and grpCd == "A"'>
		FROM STUD_HOMELOG_HISTORY A
		JOIN TCHR_AUTO_HOMELOG_INFO B ON B.TCHR_ID = 0 AND A.CD = B.CD
			</when>
			<otherwise>
		FROM STUD_HOMELOG_HISTORY A
		JOIN TCHR_MANUAL_HOMELOG_INFO B ON A.TCHR_ID = B.TCHR_ID AND A.CD = B.CD
			</otherwise>
		</choose>
		WHERE A.STUD_ID = #{studId}
			AND A.CD = #{cd};
	</select>
	
	<select id="selectHomelogInfo" parameterType="hashMap" resultType="resultMap">
		/* Homelog.selectHomelogInfo */
		SELECT
			A.CD,
			A.MEMO,
			A.NAME,
		    CASE
				WHEN #{grpCd} = 'A' THEN '학습분석 상'
		        ELSE '선생님 상'
		    END AS GRP,
		    #{grpCd} AS GRP_CD,
			'뚜루뚜루' AS STUD_NAME,
			A.PROPERTY_NM AS PROPERTY_NAME,
		    A.PROPERTY_CONT AS PROPERTY_CONTENT,
		    DATE_FORMAT(A.PERIOD_STT_DT, '%Y-%m-%d') AS START_PERIOD,
		    DATE_FORMAT(A.PERIOD_END_DT, '%Y-%m-%d') AS END_PERIOD,
			A.CONT,
			(SELECT CONCAT(TEMPLATE_URL, TEMPLATE_NM, '.png') FROM TEMPLATE_INFO WHERE CD = A.TEMPLATE_CD) AS TEMPLATE_URL
		<choose>
			<when test='grpCd != null and grpCd == "A"'>
		FROM TCHR_AUTO_HOMELOG_INFO A
			</when>
			<otherwise>
		FROM TCHR_MANUAL_HOMELOG_INFO A
			</otherwise>
		</choose>
		WHERE A.TCHR_ID = #{tchrId}
			AND A.CD = #{cd};
	</select>
	
	<select id="selectTemplateList" parameterType="hashMap" resultType="resultMap">
		/* Homelog.selectTemplateList */
		SELECT
			CD,
		    TEMPLATE_NM AS NAME,
		    CONCAT(TEMPLATE_URL, TEMPLATE_NM, '.png') AS URL
		FROM TEMPLATE_INFO
		WHERE CD > 0
			AND GRP = 'T';
	</select>
	
	<select id="selectHomelogTemplateList" parameterType="hashMap" resultType="resultMap">
		/* Homelog.selectHomelogTemplateList */
		SELECT
			CD,
			MEMO
		<choose>
			<when test='grpCd != null and grpCd == "A"'>
		FROM TCHR_AUTO_HOMELOG_INFO
		WHERE TCHR_ID = 0;
			</when>
			<otherwise>
		FROM TCHR_MANUAL_HOMELOG_INFO
		WHERE TCHR_ID = #{tchrId};
			</otherwise>
		</choose>
	</select>
	
	<select id="selectHomelogMaxCd" parameterType="hashMap" resultType="resultMap">
		/* Homelog.selectHomelogMaxCd */
		SELECT
			COUNT(*) AS CNT,
			MAX(CD) AS MAX_CD
		<choose>
			<when test='grpCd != null and grpCd == "A"'>
		FROM TCHR_AUTO_HOMELOG_INFO
			</when>
			<otherwise>
		FROM TCHR_MANUAL_HOMELOG_INFO
			</otherwise>
		</choose>
		WHERE TCHR_ID = #{tchrId}
			AND YYMM = #{yymm};
	</select>
	
	<insert id="regHomelog" parameterType="hashMap">
		/* Homelog.regHomelog */
		<choose>
			<when test='grpCd != null and grpCd == "A"'>
		INSERT INTO TCHR_AUTO_HOMELOG_INFO
			</when>
			<otherwise>
		INSERT INTO TCHR_MANUAL_HOMELOG_INFO
			</otherwise>
		</choose>
		(
			TCHR_ID,
			YYMM,
			DT,
			CD,
			NAME,
			MEMO,
			PROPERTY_NM,
			PROPERTY_CONT,
			PERIOD_NM,
			PERIOD_STT_DT,
			PERIOD_END_DT,
			CONT,
			TEMPLATE_CD,
			REG_DTTM
		)
		VALUES
		(
			#{tchrId},
			#{yymm},
			#{yymmdd},
			#{cd},
			#{name},
			#{memo},
			#{propertyName},
			#{propertyContent},
			#{periodName},
			#{startPeriod},
			#{endPeriod},
			#{cont},
			#{templateCd},
			DATE_ADD(NOW(), INTERVAL 9 HOUR)
		)
		ON DUPLICATE KEY UPDATE 
			NAME=#{name},
			MEMO = #{memo},
			PROPERTY_NM = #{propertyName},
			PROPERTY_CONT = #{propertyContent},
			PERIOD_NM = #{periodName},
			PERIOD_STT_DT=#{startPeriod}, 
			PERIOD_END_DT = #{endPeriod},
			CONT = #{cont},
			TEMPLATE_CD = #{templateCd},
			UPD_DTTM = DATE_ADD(NOW(), INTERVAL 9 HOUR);
	</insert>
	
	<insert id="setHomelog" parameterType="hashMap">
		/* Homelog.setHomelog */
		INSERT INTO STUD_HOMELOG_HISTORY
		(
			STUD_ID,
		    DT,
		    CD,
		    GRP_CD,
		    YYYY,
		    STATUS,
		    PRST_DT,
		    TCHR_ID,
		    REG_DTTM
		)
		VALUES
		<foreach item="item" index="index" collection="list" separator=",">
			(#{item.studId}, #{item.dt}, #{item.cd}, #{item.grpCd}, #{item.yyyy}, #{item.status}, #{item.dt}, #{item.tchrId}, DATE_ADD(NOW(), INTERVAL 9 HOUR))       
		</foreach>
	</insert>
	
	<update id="delHomelog" parameterType="hashMap">
		/* Homelog.delHomelog */
		UPDATE TCHR_MANUAL_HOMELOG_INFO 
		SET DEL_YN = 'Y',
			UPD_DTTM = DATE_ADD(NOW(), INTERVAL 9 HOUR),
	        DEL_DTTM = DATE_ADD(NOW(), INTERVAL 9 HOUR)
		WHERE TCHR_ID = #{tchrId}
			AND CD = #{cd};
	</update>
	
	<update id="delHomelogForStud" parameterType="hashMap">
		/* Homelog.delHomelogForStud */
		UPDATE STUD_MANUAL_HOMELOG 
		SET DEL_YN = 'Y',
			UPD_DTTM = DATE_ADD(NOW(), INTERVAL 9 HOUR),
	        DEL_DTTM = DATE_ADD(NOW(), INTERVAL 9 HOUR)
		WHERE TCHR_ID = #{tchrId}
			AND CD = #{cd};
	</update>
	
	<select id="spTchrManualHomelogMaxCd" parameterType="hashMap" resultType="resultMap">
		/* Homelog.spTchrManualHomelogMaxCd */
		{call es_s_dashboard.tchr_hoemlog_max_cd (
			  #{tchrId, mode=IN, jdbcType=INTEGER},
			  #{yymm, mode=IN, jdbcType=INTEGER}
		 )}
	</select>
	
	<select id="spRegTchrManualHomelog" parameterType="hashMap" resultType="resultMap">
		/* Homelog.spRegTchrManualHomelog */
		{call es_s_dashboard.reg_homelog (
			  #{tchrId, mode=IN, jdbcType=INTEGER},
			  #{yymm, mode=IN, jdbcType=INTEGER},
			  #{yymmdd, mode=IN, jdbcType=INTEGER},
			  #{cd, mode=IN, jdbcType=INTEGER},
			  #{memo, mode=IN, jdbcType=VARCHAR},
			  #{name, mode=IN, jdbcType=VARCHAR},
			  #{propertyName, mode=IN, jdbcType=VARCHAR},
			  #{propertyContent, mode=IN, jdbcType=VARCHAR},
			  #{periodName, mode=IN, jdbcType=VARCHAR},
			  #{startPeriod, mode=IN, jdbcType=VARCHAR},
			  #{endPeriod, mode=IN, jdbcType=VARCHAR},
			  #{cont, mode=IN, jdbcType=VARCHAR},
			  #{templateCd, mode=IN, jdbcType=VARCHAR}
		 )}
	</select>
	
	<select id="spDelTchrManualHomelog" parameterType="hashMap" resultType="resultMap">
		/* Homelog.spDelTchrManualHomelog */
		{call es_s_dashboard.del_homelog (
			  #{tchrId, mode=IN, jdbcType=INTEGER},
			  #{cd, mode=IN, jdbcType=INTEGER}
		 )}
	</select>
</mapper>
	