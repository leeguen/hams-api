<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="StudLrnType">
    <select id="getLrnTypeSummary" parameterType="hashMap" resultType="resultMap">
    	/* StudLrnType.getLrnTypeSummary */
    	SELECT
			LRN_TYPE_NM,
			-- LRN_TYPE_IMG
		    IFNULL(LRN_TYPE_IMG,'') AS LRN_TYPE_IMG
		FROM MONTH_LRN_TYPE ST
		LEFT OUTER JOIN LRN_TYPE_INFO LI ON ST.LRN_TYPE_CD = LI.LRN_TYPE_CD
		WHERE ST.STUD_ID = #{studId} AND ST.YYMM = #{yymm};
    </select>
    
    <select id="getLrnTypeInfo" parameterType="hashMap" resultType="resultMap">
    	/* StudLrnType.getLrnTypeInfo */
    	SELECT
		    LRN_TYPE_NM,
		    LRN_TYPE_IMG,
		    IFNULL(PREV_LRN_TYPE_NM, '') AS PREV_LRN_TYPE_NM,
		    IFNULL(PREV_LRN_TYPE_IMG, '') AS PREV_LRN_TYPE_IMG,
		    DATE_FORMAT(DATE_ADD(CONCAT(#{yymm},'01'), INTERVAL 1 MONTH), '%Y-%m-%d') AS NEXT_LRN_TYPE_ANAL_DT
		FROM (
			SELECT
				ST.STUD_ID,
				LRN_TYPE_NM,
				-- LRN_TYPE_IMG
				IFNULL(LRN_TYPE_IMG,'') AS LRN_TYPE_IMG,
		        (SELECT COUNT(LRN_TYPE_CD) FROM MONTH_LRN_TYPE WHERE STUD_ID = 4995 AND YYMM = 202201) AS LRN_TYPE_CNT
			FROM MONTH_LRN_TYPE ST
			LEFT OUTER JOIN LRN_TYPE_INFO LI ON ST.LRN_TYPE_CD = LI.LRN_TYPE_CD
			WHERE ST.STUD_ID = #{studId} AND ST.YYMM = #{yymm}
		) LT
		LEFT OUTER JOIN (
			SELECT
				ST.STUD_ID,
				IFNULL(LRN_TYPE_NM, '') AS PREV_LRN_TYPE_NM,
				-- LRN_TYPE_IMG
				IFNULL(LRN_TYPE_IMG,'') AS PREV_LRN_TYPE_IMG
			FROM MONTH_LRN_TYPE ST
			LEFT OUTER JOIN LRN_TYPE_INFO LI ON ST.LRN_TYPE_CD = LI.LRN_TYPE_CD
			WHERE ST.STUD_ID = #{studId} AND ST.YYMM = DATE_FORMAT(DATE_SUB(CONCAT(#{yymm},'01'), INTERVAL 1 MONTH), '%Y%m')
		) LT1 ON LT.STUD_ID = LT1.STUD_ID;
    </select>
    
    <select id="getLrnTypeInfoYn" parameterType="hashMap" resultType="resultMap">
    	/* StudLrnType.getLrnTypeInfoYn */
    	SELECT
			IF(LRN_TYPE_CNT = 1, 'Y', 'N') AS LRN_TYPE_ANAL_YN,
		    IF(LRN_TYPE_CHECK_CNT = 1, 'Y', 'N') AS LRN_TYPE_CHECK_YN
		FROM (
			SELECT
				STUD_ID,
				COUNT(LRN_TYPE_CD) AS LRN_TYPE_CNT,
				(SELECT LRN_TYPE_GUIDE FROM LRN_TYPE_GUIDE WHERE STUD_ID = #{studId}) AS LRN_TYPE_CHECK_CNT
			FROM MONTH_LRN_TYPE
			WHERE STUD_ID = #{studId} AND YYMM = #{yymm}
		) LTCNT;
    </select>
    
    <select id="getLrnTypeDetail" parameterType="hashMap" resultType="resultMap">
    	/* StudLrnType.getLrnTypeDetail */
    	SELECT
			LI.LRN_TYPE_NM,
			LD.LRN_TYPE_CD,
		    IFNULL(LI.LRN_TYPE_IMG, NULL) AS LRN_TYPE_IMG,
		    IFNULL(LI.LRN_TYPE_DEF, NULL) AS LRN_TYPE_DEF,
		    IFNULL(LD.LRN_TEND, NULL) AS LRN_TEND,
		    IFNULL(LD.LRN_STR, NULL) AS LRN_STR,
		    LD.LRN_TYPE_ACT_SCORE AS ACT_SCORE, 
		    LD.LRN_TYPE_STR_SCORE AS STR_SCORE,
		    GL.LRN_TYPE_STUD_RT
		FROM LRN_TYPE_DETAIL LD
		LEFT OUTER JOIN LRN_TYPE_INFO LI ON LD.LRN_TYPE_CD = LI.LRN_TYPE_CD
		LEFT OUTER JOIN GRP_LRN_TYPE_STT GL ON LD.LRN_TYPE_CD = GL.LRN_TYPE_CD AND LD.YYMM = GL.YYMM
		WHERE STUD_ID = #{studId} AND LD.YYMM = #{yymm};
    </select>
    
    <select id="getLrnTypeGrp" parameterType="hashMap" resultType="resultMap">
    	/* StudLrnType.getLrnTypeGrp */
    	SELECT
			LI.LRN_TYPE_NM AS MAX_LRN_TYPE_NM
		FROM GRP_LRN_TYPE_STT GL
		LEFT OUTER JOIN LRN_TYPE_INFO LI ON GL.LRN_TYPE_CD = LI.LRN_TYPE_CD
		WHERE YYMM = #{yymm}
		ORDER BY LRN_TYPE_STUD_CNT DESC
		LIMIT 1;
    </select>
    
    <select id="getLrnTypeHistory" parameterType="hashMap" resultType="resultMap">
    	/* StudLrnType.getLrnTypeHistory */
    	SELECT
		    ST.MM,
		    LI.LRN_TYPE_NM,
		    IFNULL(LI.LRN_TYPE_IMG, NULL) AS LRN_TYPE_IMG,
		    IFNULL(LD.LRN_TEND, NULL) AS LRN_TEND,
			IFNULL(LD.LRN_STR, NULL) AS LRN_STR
		FROM (
			SELECT
				STUD_ID,
				YYMM,
		        MM
			FROM STUD
			CROSS JOIN (
				SELECT
					CASE 
						WHEN lv<![CDATA[<]]>10 THEN CONCAT(YY,'0',lv)
						ELSE CONCAT(YY,lv)
					END YYMM,
		            CASE
						WHEN lv<![CDATA[<]]>10 THEN CONCAT('0',lv)
						ELSE lv
					END MM
				FROM (
					SELECT @ROWNUM:=@ROWNUM+1 AS lv
							, #{yyyy} AS YY
					FROM information_schema.`COLUMNS` A
							   , (SELECT @ROWNUM:=0) R
						LIMIT 12 
				) AS A  
			) YM
			WHERE STUD_ID = #{studId}
		) ST
		LEFT OUTER JOIN LRN_TYPE_DETAIL LD ON ST.STUD_ID = LD.STUD_ID AND ST.YYMM = LD.YYMM
		LEFT OUTER JOIN LRN_TYPE_INFO LI ON LD.LRN_TYPE_CD = LI.LRN_TYPE_CD;
    </select>
    
    <update id="updateLrnTypeInfo" parameterType="hashMap">
    	/* StudLrnType.updateLrnTypeInfo */
    	UPDATE LRN_TYPE_GUIDE 
		SET 
			LRN_TYPE_GUIDE = #{guideValue},
		    UPD_DTTM = DATE_ADD(NOW(), INTERVAL 9 HOUR)
		WHERE STUD_ID = #{studId};
    </update>
    
    <select id="getReportEmotion" parameterType="hashMap" resultType="resultMap">
    	/* StudLrnType.getReportEmotion */
    	SELECT
    		IFNULL(MR1.MSG, NULL) AS MSG,
			IF(CNT = 0, 'N', 'Y') AS EMOTION_YN,
		    IFNULL(MR1.EMOTICON, NULL) AS EMOTICON
    	<choose>
	    	<when test='currConCheck == "m"'>
   		FROM (
			SELECT
				YYMM,
				STUD_ID,
				COUNT(*) AS CNT
			FROM MONTH_REPORT_EMOTION
			WHERE YYMM = #{yymm}
				AND STUD_ID = #{studId}
		) MR
		LEFT OUTER JOIN MONTH_REPORT_EMOTION MR1 ON MR.YYMM = MR1.YYMM AND MR.STUD_ID = MR1.STUD_ID;
	    	</when>
	    	<otherwise>
    	FROM (
			SELECT
				YYMM,
				WK,
				STUD_ID,
				COUNT(*) AS CNT
			FROM WEEK_REPORT_EMOTION
			WHERE YYMM = #{yymm}
				AND WK = #{wk}
				AND STUD_ID = #{studId}
		) MR
		LEFT OUTER JOIN WEEK_REPORT_EMOTION MR1 ON MR.YYMM = MR1.YYMM AND MR.WK = MR1.WK AND MR.STUD_ID = MR1.STUD_ID;
	    	</otherwise>
    	</choose>
    </select>
    
    <insert id="insertReportEmotion" parameterType="hashMap">
    	/* StudLrnType.insertReportEmotion */
    	<choose>
	    	<when test='currConCheck == "m"'>
	   		INSERT INTO MONTH_REPORT_EMOTION
			(
				YYMM,
				STUD_ID,
			    EMOTICON,
			    REG_DTTM,
			    UPD_DTTM
			)
			VALUES
			(
				#{yymm},
				#{studId},
				#{emoticon},
				DATE_ADD(NOW(), INTERVAL 9 HOUR),
				DATE_ADD(NOW(), INTERVAL 9 HOUR)
			);
	    	</when>
	    	<otherwise>
    		INSERT INTO WEEK_REPORT_EMOTION
			(
				YYMM,
				WK,
				STUD_ID,
			    EMOTICON,
			    REG_DTTM,
			    UPD_DTTM
			)
			VALUES
			(
				#{yymm},
				#{wk},
				#{studId},
				#{emoticon},
				DATE_ADD(NOW(), INTERVAL 9 HOUR),
				DATE_ADD(NOW(), INTERVAL 9 HOUR)
			);
	    	</otherwise>
    	</choose>
    </insert>
    
    <select id="getStudLrnTypeInfo" parameterType="hashMap" resultType="resultMap">
    	/* StudLrnType.getStudLrnTypeInfo */
    	SELECT
			(SELECT LRN_TYPE_DKT_NM FROM LRN_TYPE_INFO WHERE LRN_TYPE_CD = MS.LRN_TYPE_CD) AS LRN_TYPE_CD,
		    MS.LRN_TYPE_GROUP_CD,
			(SELECT CD_NM FROM COMM_CD WHERE CD = ST.LRN_STT_CD AND GRP = 'LRN_STT_CD') AS LRN_STT_CD,
		    (SELECT CD_NM FROM COMM_CD WHERE CD = ST.STUD_TYPE AND GRP = 'STUD_TYPE') AS STUD_TYPE,
		    (SELECT CD_NM FROM COMM_CD WHERE CD = ST.STUD_STATUS AND GRP = 'STUD_STATUS') AS STUD_STATUS,
		    (SELECT CD_NM FROM COMM_CD WHERE CD = ST.STUD_STATUS_DETAIL AND GRP = 'STUD_STATUS_DETAIL') AS STUD_STATUS_DETAIL
		FROM STUD ST 
		LEFT OUTER JOIN (
			SELECT
				STUD_ID,
		        LRN_TYPE_CD,
		        LRN_TYPE_GROUP_CD
			FROM MONTH_LRN_TYPE
			WHERE STUD_ID = #{studId}
		    ORDER BY YYMM DESC
		    LIMIT 1
		) MS ON ST.STUD_ID = MS.STUD_ID
		WHERE ST.STUD_ID = #{studId};
    </select>
    
</mapper>
