<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Group_ES_Demo">

	<select id="getSchoolType" parameterType="hashMap" resultType="resultMap">
	/* Group_ES.getSchoolType : 학교타입 디폴트값 지정을 위한 학생수 추출 */
	/* DB UTC 기준 + 배치 월요일 03:30 경 완료 시점 기준 default 선택 주차 계산 */
		SELECT WL.YYMM, WL.WK,  0 AS MS_TOT_STUD_CNT
 			, TOTAL_STUD_CNT AS ES_TOT_STUD_CNT
		FROM WEEK_ORG_LRN_RST AS WL
		JOIN (
			SELECT YYMM	
				, CAST(WK AS SIGNED INTEGER) AS WK
			FROM COMM_WK_DT
			WHERE IFNULL(SU, IFNULL(SA, IFNULL(FR, IFNULL(TH, IFNULL(WE, IFNULL(TU, MO)))))) <![CDATA[<]]> DATE_FORMAT(now() + INTERVAL 5.5 HOUR, '%Y-%m-%d')
			ORDER BY YYMM DESC, WK DESC
			LIMIT 1
		) AS CD ON WL.YYMM = CD.YYMM AND WL.WK = CD.WK
		WHERE WL.ORG_ID = 'seocho4'
	</select>
	
	<select id="selectGetYymmWk" parameterType="hashMap" resultType="resultMap">
	/* Group_ES.selectGetYymmWk : 년월, 주차 산출 */
	/* DB UTC 기준 + 배치 월요일 03:30 경 완료 시점 기준 주차 계산 */
		SELECT 
			CAST(SUBSTRING(YYMM,1,4) AS SIGNED INTEGER) AS YYYY,
			CAST(SUBSTRING(YYMM,5,2) AS SIGNED INTEGER) AS MM,		
			CAST(WK AS SIGNED INTEGER) AS WK
		FROM COMM_WK_DT
		WHERE IFNULL(SU, IFNULL(SA, IFNULL(FR, IFNULL(TH, IFNULL(WE, IFNULL(TU, MO)))))) <![CDATA[>=]]> DATE_FORMAT(#{svcOpenDe} - INTERVAL 7 DAY , '%Y-%m-%d')
			AND IFNULL(SU, IFNULL(SA, IFNULL(FR, IFNULL(TH, IFNULL(WE, IFNULL(TU, MO)))))) <![CDATA[<]]> DATE_FORMAT(now() + INTERVAL 5.5 HOUR , '%Y-%m-%d')
	</select>
	
	<select id="selectGetYymm" parameterType="hashMap" resultType="resultMap">
	/* Group_ES.selectGetYymm : 년월 산출 */
	/* DB UTC 기준 + 배치 월요일 03:30 경 완료 시점 기준 주차 계산 */
		SELECT 
			CAST(SUBSTRING(A.YYMM,1,4) AS SIGNED INTEGER) AS YYYY,
			CAST(SUBSTRING(A.YYMM,5,2) AS SIGNED INTEGER) AS MM
		FROM COMM_WK_DT A 
		JOIN (
			SELECT
				-- SUBSTRING_INDEX(GROUP_CONCAT(YYMM SEPARATOR '|'),'|', 1) AS START_YYMM,
		        -- SUBSTRING_INDEX(GROUP_CONCAT(YYMM SEPARATOR '|'),'|', -1) AS END_YYMM
		        MIN(YYMM) AS START_YYMM,
		        MAX(YYMM) AS END_YYMM
			FROM COMM_WK_DT
			WHERE ( 
					DATE_FORMAT(#{svcOpenDe} - INTERVAL 1 MONTH , '%Y-%m-%d')
					BETWEEN IFNULL(MO, IFNULL(TU, IFNULL(WE, IFNULL(TH, IFNULL(FR, IFNULL(SA, SU))))))
						and IFNULL(SU, IFNULL(SA, IFNULL(FR, IFNULL(TH, IFNULL(WE, IFNULL(TU, MO)))))) 
				)
				OR (
					DATE_FORMAT(NOW() + INTERVAL 5.5 HOUR , '%Y-%m-%d')
					BETWEEN IFNULL(MO, IFNULL(TU, IFNULL(WE, IFNULL(TH, IFNULL(FR, IFNULL(SA, SU))))))
						and IFNULL(SU, IFNULL(SA, IFNULL(FR, IFNULL(TH, IFNULL(WE, IFNULL(TU, MO))))))
				)
		) B ON A.YYMM <![CDATA[>=]]> B.START_YYMM 
			AND A.YYMM <![CDATA[<]]> B.END_YYMM
		GROUP BY YYMM
	</select>
	
	<select id="selectGradeClassOrgId" parameterType="hashMap" resultType="resultMap">
	/* Group.selectGradeClassOrgId : 학년, 반 기관 ID 조회 */
		SELECT
			DEPTH_2_ORG_ID AS DEPTH_ORG_ID
		FROM GRADE_CLASS_ORG_INFO
		WHERE ORG_ID = 'seocho4' 
			OR DEPTH_1_ORG_ID = 'seocho4'
	</select>
	
	<select id="selectGradeClassInfo" parameterType="hashMap" resultType="resultMap">
	/* Group.selectGradeClassInfo : 학년, 반 정보 조회 */
		SELECT
			REPLACE(DEPTH_1_ORG_ID,ORG_ID,'') AS GRADE,
    		REPLACE(DEPTH_2_ORG_ID,DEPTH_1_ORG_ID,'') AS CLASS
		FROM GRADE_CLASS_ORG_INFO
		WHERE ORG_ID = 'seocho4' 
			OR DEPTH_1_ORG_ID = 'seocho4'
	</select>
	
	<select id="selectGradeClassYn" parameterType="hashMap" resultType="resultMap">
	/* Group.selectGradeClassYn : 학년, 반 정보 조회 */
		SELECT
			IF(TCNT.CNT <![CDATA[>]]> 0, 'Y','N') AS AGN_ID_YN,
		    IF(GCCNT.CNT <![CDATA[>]]> 0, 'Y','N') AS GC_YN
		FROM (
			SELECT
				COUNT(*) AS CNT
			FROM GRADE_CLASS_ORG_INFO
			WHERE ORG_ID = 'seocho4'
				OR DEPTH_1_ORG_ID = 'seocho4'
		        OR DEPTH_2_ORG_ID = 'seocho4'
		) TCNT
		LEFT OUTER JOIN (
			SELECT
				COUNT(*) AS CNT
			FROM GRADE_CLASS_ORG_INFO
			WHERE ORG_ID = 'seocho4'
				OR DEPTH_1_ORG_ID = 'seocho4'
		) GCCNT ON 1=1
	</select>
	
	<select id="selectWeeklyGroupStatusMain" parameterType="hashMap" resultType="resultMap">
	/* Group.selectWeeklyGroupLrnAnalysis : 기관용 학습 분석 */
		SELECT
			TOTAL_STUD_CNT, 
		    ATT_RT,
		    EX_RT, 
		    CRT_RT, 
		    DAY_AVG_LRN_SEC AS DAY_AVG_LRN_TM,
		    CAST(LRN_SIGNAL_A AS SIGNED INTEGER) AS LRN_SIGNAL_A, 
		    CAST(LRN_SIGNAL_B AS SIGNED INTEGER) AS LRN_SIGNAL_B, 
		    CAST(LRN_SIGNAL_C AS SIGNED INTEGER) AS LRN_SIGNAL_C
		FROM (
		<choose>
			<when test="localCd != null and localCd != ''">
				SELECT 
					YYMM, 
				    WK, 
				    ORG_ID, 
				    TOTAL_STUD_CNT, 
				    ATT_RT, 
				    EX_RT, 
				    CRT_RT, 
				    DAY_AVG_LRN_SEC,
					SUBSTRING_INDEX(LRN_SIGNAL_SP, '|',1) AS LRN_SIGNAL_A,
					SUBSTRING_INDEX(SUBSTRING_INDEX(LRN_SIGNAL_SP, '|',2),'|',-1) AS LRN_SIGNAL_B,
					SUBSTRING_INDEX(LRN_SIGNAL_SP, '|',-1) AS LRN_SIGNAL_C
				FROM WEEK_ORG_LOCAL_LRN_RST
				WHERE YYMM = #{yymm}
					AND WK = #{wk}
					AND ORG_ID = 'seocho4'
					AND LOCAL_CD = #{localCd}
				
			</when>
			<otherwise>
				SELECT 
					YYMM, 
				    WK, 
				    ORG_ID, 
				    TOTAL_STUD_CNT, 
				    ATT_RT, 
				    EX_RT, 
				    CRT_RT, 
				    DAY_AVG_LRN_SEC,
				    SUBSTRING_INDEX(LRN_SIGNAL_SP, '|',1) AS LRN_SIGNAL_A,
					SUBSTRING_INDEX(SUBSTRING_INDEX(LRN_SIGNAL_SP, '|',2),'|',-1) AS LRN_SIGNAL_B,
					SUBSTRING_INDEX(LRN_SIGNAL_SP, '|',-1) AS LRN_SIGNAL_C
				FROM WEEK_ORG_LRN_RST
				WHERE YYMM = #{yymm}
					AND WK = #{wk}
					AND ORG_ID = 'seocho4'
			</otherwise>
		</choose>
		) A
	</select>
	
	<select id="selectMonthlyGroupStatusMain" parameterType="hashMap" resultType="resultMap">
	/* Group.selectMonthlyGroupLrnAnalysis : 기관용 월간 학습 분석 */
		SELECT
			TOTAL_STUD_CNT, 
		    ATT_RT, 
		    EX_RT, 
		    CRT_RT, 
		    DAY_AVG_LRN_SEC AS DAY_AVG_LRN_TM,
		    CAST(LRN_SIGNAL_A AS SIGNED INTEGER) AS LRN_SIGNAL_A, 
		    CAST(LRN_SIGNAL_B AS SIGNED INTEGER) AS LRN_SIGNAL_B, 
		    CAST(LRN_SIGNAL_C AS SIGNED INTEGER) AS LRN_SIGNAL_C
		FROM (
		<choose>
			<when test="localCd != null and localCd != ''">
				SELECT 
					YYMM, 
				    ORG_ID, 
				    TOTAL_STUD_CNT, 
				    ATT_RT, 
				    EX_RT, 
				    CRT_RT, 
				    DAY_AVG_LRN_SEC,
				    SUBSTRING_INDEX(LRN_SIGNAL_SP, '|',1) AS LRN_SIGNAL_A,
					SUBSTRING_INDEX(SUBSTRING_INDEX(LRN_SIGNAL_SP, '|',2),'|',-1) AS LRN_SIGNAL_B,
					SUBSTRING_INDEX(LRN_SIGNAL_SP, '|',-1) AS LRN_SIGNAL_C
				FROM MONTH_ORG_LOCAL_LRN_RST
				WHERE YYMM = #{yymm}
					AND ORG_ID = 'seocho4'
					AND LOCAL_CD = #{localCd}
				
			</when>
			<otherwise>
				SELECT 
					YYMM, 
				    ORG_ID, 
				    TOTAL_STUD_CNT, 
				    ATT_RT, 
				    EX_RT, 
				    CRT_RT, 
				    DAY_AVG_LRN_SEC,
				    SUBSTRING_INDEX(LRN_SIGNAL_SP, '|',1) AS LRN_SIGNAL_A,
					SUBSTRING_INDEX(SUBSTRING_INDEX(LRN_SIGNAL_SP, '|',2),'|',-1) AS LRN_SIGNAL_B,
					SUBSTRING_INDEX(LRN_SIGNAL_SP, '|',-1) AS LRN_SIGNAL_C
				FROM MONTH_ORG_LRN_RST
				WHERE YYMM = #{yymm}
					AND ORG_ID = 'seocho4'
			</otherwise>
		</choose>
		) A
	</select>
	
	<select id="selectWeeklyGroupLrnChart" parameterType="hashMap" resultType="resultMap">
	/* Group.selectWeeklyGroupLrnChart : 기관 주간 학습 차트 */		
		SELECT
			CASE
				WHEN LOCATE('Y',GROUP_CONCAT(IFNULL(A.NUll_CHECK,'N') ORDER BY A.YYMM, A.WK SEPARATOR '|')) = 0 
					THEN NULL
		        ELSE GROUP_CONCAT(SUBSTRING(A.YYMM,5,2),'월 ', A.WK, '주차' ORDER BY A.YYMM, A.WK SEPARATOR '|') 
		    END AS X_AXIS_CTGR,
			CASE
				WHEN COUNT(A.ATT_RT) != 0
					THEN GROUP_CONCAT(IFNULL(A.ATT_RT,'') ORDER BY A.YYMM, A.WK SEPARATOR '|')
				ELSE NULL
			END ATT_RT,
			CASE
				WHEN COUNT(A.EX_RT) != 0
					THEN GROUP_CONCAT(IFNULL(A.EX_RT,'') ORDER BY A.YYMM, A.WK SEPARATOR '|')
				ELSE NULL
			END EX_RT,
			CASE
				WHEN COUNT(A.CRT_RT) != 0
					THEN GROUP_CONCAT(IFNULL(A.CRT_RT,'') ORDER BY A.YYMM, A.WK SEPARATOR '|')
				ELSE NULL
			END CRT_RT,
			CASE
				WHEN COUNT(A.DAY_AVG_LRN_TM) != 0
					THEN GROUP_CONCAT(IFNULL(A.DAY_AVG_LRN_TM,'') ORDER BY A.YYMM, A.WK SEPARATOR '|')
				ELSE NULL
			END DAY_AVG_LRN_TM
        FROM (
        	SELECT 
				A.YYMM,
				A.WK,
				B.ORG_ID,
				B.ATT_RT,
				B.EX_RT,
				B.CRT_RT,
				FLOOR(B.DAY_AVG_LRN_SEC / 60) AS DAY_AVG_LRN_TM,
				CASE 
					WHEN  B.ATT_RT IS NULL AND B.EX_RT IS NULL AND B.CRT_RT IS NULL AND B.DAY_AVG_LRN_SEC IS NULL 
						THEN 'N'
					ELSE 'Y'
				END AS NUll_CHECK
			FROM COMM_WK_DT A 
			LEFT OUTER JOIN WEEK_ORG_LRN_RST B ON A.YYMM = B.YYMM AND A.WK = B.WK AND B.ORG_ID = 'seocho4'
			WHERE ((A.YYMM = #{yymm} AND A.WK <![CDATA[<=]]> #{wk}) OR (A.YYMM <![CDATA[<]]> #{yymm}))
			ORDER BY A.YYMM DESC, A.WK DESC 
			LIMIT 6
        ) A
	</select>
	
	<select id="selectMonthlyGroupLrnChart" parameterType="hashMap" resultType="resultMap">
	/* Group.selectMonthlyGroupLrnChart : 기관 월간 학습 차트 */
		SELECT
			CASE
				WHEN LOCATE('Y',GROUP_CONCAT(IFNULL(A.NUll_CHECK,'N') ORDER BY A.YYMM SEPARATOR '|')) = 0 
					THEN NULL
		        ELSE GROUP_CONCAT(SUBSTRING(A.YYMM,5,2),'월' ORDER BY A.YYMM SEPARATOR '|')
		    END AS X_AXIS_CTGR,
			CASE
				WHEN COUNT(A.ATT_RT) != 0
					THEN GROUP_CONCAT(IFNULL(A.ATT_RT,'') ORDER BY A.YYMM SEPARATOR '|')
				ELSE NULL
			END ATT_RT,
			CASE
				WHEN COUNT(A.EX_RT) != 0
					THEN GROUP_CONCAT(IFNULL(A.EX_RT,'') ORDER BY A.YYMM SEPARATOR '|')
				ELSE NULL
			END EX_RT,
			CASE
				WHEN COUNT(A.CRT_RT) != 0
					THEN GROUP_CONCAT(IFNULL(A.CRT_RT,'') ORDER BY A.YYMM SEPARATOR '|')
				ELSE NULL
			END CRT_RT,
			CASE
				WHEN COUNT(A.DAY_AVG_LRN_TM) != 0
					THEN GROUP_CONCAT(IFNULL(A.DAY_AVG_LRN_TM,'') ORDER BY A.YYMM SEPARATOR '|')
				ELSE NULL
			END DAY_AVG_LRN_TM
		FROM (
			SELECT 
				DISTINCT
				A.YYMM,
				B.ORG_ID,
				B.ATT_RT,
				B.EX_RT,
				B.CRT_RT,
				FLOOR(B.DAY_AVG_LRN_SEC / 60) AS DAY_AVG_LRN_TM,
				CASE 
					WHEN  B.ATT_RT IS NULL AND B.EX_RT IS NULL AND B.CRT_RT IS NULL AND B.DAY_AVG_LRN_SEC IS NULL 
						THEN 'N'
					ELSE 'Y'
				END AS NUll_CHECK
			FROM COMM_WK_DT A 
		    LEFT OUTER JOIN MONTH_ORG_LRN_RST B ON A.YYMM = B.YYMM AND B.ORG_ID = 'seocho4'
			WHERE A.YYMM  <![CDATA[<=]]> #{yymm} 
			ORDER BY A.YYMM DESC
			LIMIT 4
        ) A
	</select>
	<select id="selectWeeklyGroupMapInfo" parameterType="hashMap" resultType="resultMap">
	/* Group.selectWeeklyGroupMapInfo : 기관 주간 지도 정보 */
		SELECT
			TOTAL_STUD_CNT,
			ATT_RT,
			EX_RT, 
			CRT_RT,
			DAY_AVG_LRN_SEC AS DAY_AVG_LRN_TM,
			NULL AS LOCAL_CD, 
			NULL AS LOCAL_NM,
			'0' AS DEPTH,
			NULL AS LATITUDE,
			NULL AS LONGITUDE   
		FROM WEEK_ORG_LRN_RST
		WHERE
			YYMM = #{yymm}
			AND WK = #{wk}
			AND ORG_ID = 'seocho4'
		UNION ALL (
			SELECT 
				A.TOTAL_STUD_CNT,
				A.ATT_RT,
				A.EX_RT, 
				A.CRT_RT,
				DAY_AVG_LRN_SEC AS DAY_AVG_LRN_TM,
				B.LOCAL_CD, 
				B.LOCAL_NM,
				A.DEPTH,       
				B.LATITUDE,
				B.LONGITUDE            
			FROM WEEK_ORG_LOCAL_LRN_RST A
			LEFT OUTER JOIN (
				SELECT 
					1_DEPTH_LOCAL_CD AS LOCAL_CD, 
					1_DEPTH_LOCAL_NM AS LOCAL_NM,
					NULL AS LATITUDE,
					NULL AS LONGITUDE
				FROM ZIPCODE_LOCAL_LOCATION A
				JOIN WEEK_STUD_LRN_RST B ON A.ZIPCODE = B.ZIPCODE AND B.YYMM = #{yymm} AND B.WK = #{wk}
					<choose>
						<when test="orgList != null and orgList.size!=0">
							AND B.ORG_ID IN 
							<foreach collection="orgList" item="item"  open="(" close=")" separator=",">
			                    #{item}
			                </foreach>
						</when>
						<otherwise>
							AND B.ORG_ID = 'seocho4'
						</otherwise>
					</choose>
				UNION
				SELECT
					2_DEPTH_LOCAL_CD AS LOCAL_CD, 
					2_DEPTH_LOCAL_NM AS LOCAL_NM,
					NULL AS LATITUDE,
					NULL AS LONGITUDE
				FROM ZIPCODE_LOCAL_LOCATION A
				JOIN WEEK_STUD_LRN_RST B ON A.ZIPCODE = B.ZIPCODE AND B.YYMM = #{yymm} AND B.WK = #{wk}
					<choose>
						<when test="orgList != null and orgList.size!=0">
							AND B.ORG_ID IN 
							<foreach collection="orgList" item="item"  open="(" close=")" separator=",">
			                    #{item}
			                </foreach>
						</when>
						<otherwise>
							AND B.ORG_ID = 'seocho4'
						</otherwise>
					</choose>
				UNION
				SELECT
					3_DEPTH_LOCAL_CD AS LOCAL_CD, 
					3_DEPTH_LOCAL_NM AS LOCAL_NM,
					LATITUDE,
					LONGITUDE
				FROM ZIPCODE_LOCAL_LOCATION A
				JOIN WEEK_STUD_LRN_RST B ON A.ZIPCODE = B.ZIPCODE AND B.YYMM = #{yymm} AND B.WK = #{wk}
					<choose>
						<when test="orgList != null and orgList.size!=0">
							AND B.ORG_ID IN 
							<foreach collection="orgList" item="item"  open="(" close=")" separator=",">
			                    #{item}
			                </foreach>
						</when>
						<otherwise>
							AND B.ORG_ID = 'seocho4'
						</otherwise>
					</choose>
			) B ON A.LOCAL_CD = B.LOCAL_CD
			WHERE	
				A.YYMM = #{yymm}
				AND A.WK = #{wk}
				AND A.ORG_ID = 'seocho4'
		)
		ORDER BY DEPTH
	</select>
	
	<select id="selectMonthlyGroupMapInfo" parameterType="hashMap" resultType="resultMap">
	/* Group.selectMonthlyGroupMapInfo : 기관 월간 지도 정보 */
		SELECT
			TOTAL_STUD_CNT,
			ATT_RT,
			EX_RT, 
			CRT_RT,
			DAY_AVG_LRN_SEC AS DAY_AVG_LRN_TM,
			NULL AS LOCAL_CD, 
			NULL AS LOCAL_NM,
			'0' AS DEPTH,
			NULL AS LATITUDE,
			NULL AS LONGITUDE   
		FROM MONTH_ORG_LRN_RST
		WHERE
			YYMM = #{yymm}
			AND ORG_ID = 'seocho4'
		UNION ALL (
			SELECT 
				A.TOTAL_STUD_CNT,
				A.ATT_RT,
				A.EX_RT, 
				A.CRT_RT,
				DAY_AVG_LRN_SEC AS DAY_AVG_LRN_TM,
				B.LOCAL_CD, 
				B.LOCAL_NM,
				A.DEPTH,       
				B.LATITUDE,
				B.LONGITUDE            
			FROM MONTH_ORG_LOCAL_LRN_RST A
			LEFT OUTER JOIN (
				SELECT 
					1_DEPTH_LOCAL_CD AS LOCAL_CD, 
					1_DEPTH_LOCAL_NM AS LOCAL_NM,
					NULL AS LATITUDE,
					NULL AS LONGITUDE
				FROM ZIPCODE_LOCAL_LOCATION A
        		JOIN MONTH_STUD_LRN_RST B ON A.ZIPCODE = B.ZIPCODE AND B.YYMM = #{yymm}
        			<choose>
						<when test="orgList != null and orgList.size!=0">
							AND B.ORG_ID IN 
							<foreach collection="orgList" item="item"  open="(" close=")" separator=",">
			                    #{item}
			                </foreach>
						</when>
						<otherwise>
							AND B.ORG_ID = 'seocho4'
						</otherwise>
					</choose>
				UNION
				SELECT
					2_DEPTH_LOCAL_CD AS LOCAL_CD, 
					2_DEPTH_LOCAL_NM AS LOCAL_NM,
					NULL AS LATITUDE,
					NULL AS LONGITUDE
				FROM ZIPCODE_LOCAL_LOCATION A
        		JOIN MONTH_STUD_LRN_RST B ON A.ZIPCODE = B.ZIPCODE AND B.YYMM = #{yymm}
        			<choose>
						<when test="orgList != null and orgList.size!=0">
							AND B.ORG_ID IN 
							<foreach collection="orgList" item="item"  open="(" close=")" separator=",">
			                    #{item}
			                </foreach>
						</when>
						<otherwise>
							AND B.ORG_ID = 'seocho4'
						</otherwise>
					</choose>
				UNION
				SELECT
					3_DEPTH_LOCAL_CD AS LOCAL_CD, 
					3_DEPTH_LOCAL_NM AS LOCAL_NM,
					LATITUDE,
					LONGITUDE
				FROM ZIPCODE_LOCAL_LOCATION A
        		JOIN MONTH_STUD_LRN_RST B ON A.ZIPCODE = B.ZIPCODE AND B.YYMM = #{yymm}
        			<choose>
						<when test="orgList != null and orgList.size!=0">
							AND B.ORG_ID IN 
							<foreach collection="orgList" item="item"  open="(" close=")" separator=",">
			                    #{item}
			                </foreach>
						</when>
						<otherwise>
							AND B.ORG_ID = 'seocho4'
						</otherwise>
					</choose>
			) B ON A.LOCAL_CD = B.LOCAL_CD
			WHERE	
				A.YYMM = #{yymm}
				AND A.ORG_ID = 'seocho4'
		)
		ORDER BY DEPTH
	</select>
	
	<select id="selectWeeklyGroupOnlineSchool" parameterType="hashMap" resultType="resultMap">
	/* Weekly.selectWeeklyOnlineSchool : 주별 온라인 개학 정보 */
		SELECT 
			CAST(SUBSTRING(B.YYMM,1,4) AS SIGNED INTEGER) AS YYYY,
			CASE
				WHEN SUBSTRING(B.YYMM,5,2) >= 10 THEN CAST(SUBSTRING(B.YYMM,5,2) AS SIGNED INTEGER)
                ELSE CAST(SUBSTRING(B.YYMM,6,1) AS SIGNED INTEGER)
			END AS MM,
			CAST(B.WK AS SIGNED INTEGER) AS WK,
			B.ORG_ID,
			B.SUBJ_CD,
			IFNULL(B.LOGIN_CNT,0) AS LOGIN_CNT,
			CASE
				WHEN B.AVG_LRN_TM >= 60 THEN	-- 1시간 이상일때
					CASE
						WHEN B.AVG_LRN_TM MOD 60 = 0 THEN CONCAT(B.AVG_LRN_TM DIV 60,'시간')	-- 60, 120, 180...
                        ELSE CONCAT(CONCAT(B.AVG_LRN_TM DIV 60,'시간'), CONCAT(B.AVG_LRN_TM MOD 60,'분'))
					END
				WHEN B.AVG_LRN_TM <![CDATA[<]]> 1 THEN	CONCAT(B.AVG_LRN_TM,'초')-- 1분 미만
                ELSE CONCAT(IFNULL(B.AVG_LRN_TM,0),'분')
			END AS AVG_LRN_TM
		FROM (        	
			SELECT 'Z01' AS SUBJ_CD UNION
			SELECT 'Z02' AS SUBJ_CD UNION
			SELECT 'Z03' AS SUBJ_CD UNION
			SELECT 'Z04' AS SUBJ_CD UNION
            SELECT 'Z05' AS SUBJ_CD UNION
			SELECT 'Z06' AS SUBJ_CD
		) A
		LEFT OUTER JOIN (
			SELECT 
				YYMM, 
                WK, 
                ORG_ID, 
                SUBJ_CD, 
                LOGIN_CNT, 
                FLOOR(IFNULL(AVG_LRN_SEC,0)/60) AS AVG_LRN_TM
		    FROM WEEK_ONLINE_SCHOOL_STT
		    WHERE 
		    	YYMM = #{yymm} 
		    	AND WK = #{wk} 
		    	AND ORG_ID = 'seocho4'
		 ) B ON A.SUBJ_CD = B.SUBJ_CD
	</select>
	
	<select id="selectMonthlyGroupOnlineSchool" parameterType="hashMap" resultType="resultMap">
	/* Monthly.selectWeeklyOnlineSchool : 월별 온라인 개학 정보 */
		SELECT
		 	CAST(SUBSTRING(B.YYMM,1,4) AS SIGNED INTEGER) AS YYYY,
			CASE
				WHEN SUBSTRING(B.YYMM,5,2) >= 10 THEN CAST(SUBSTRING(B.YYMM,5,2) AS SIGNED INTEGER)
                ELSE CAST(SUBSTRING(B.YYMM,6,1) AS SIGNED INTEGER)
			END AS MM,
			B.ORG_ID,
			B.SUBJ_CD,
			IFNULL(B.LOGIN_CNT,0) AS LOGIN_CNT,
			CASE
				WHEN B.AVG_LRN_TM >= 60 THEN	-- 1시간 이상일때
					CASE
						WHEN B.AVG_LRN_TM MOD 60 = 0 THEN CONCAT(B.AVG_LRN_TM DIV 60,'시간')	-- 60, 120, 180...
                        ELSE CONCAT(CONCAT(B.AVG_LRN_TM DIV 60,'시간'), CONCAT(B.AVG_LRN_TM MOD 60,'분'))
					END
				WHEN B.AVG_LRN_TM <![CDATA[<]]> 1 THEN	CONCAT(B.AVG_LRN_TM,'초')-- 1분 미만
                ELSE CONCAT(IFNULL(B.AVG_LRN_TM,0),'분')
			END AS AVG_LRN_TM
		FROM (        	
			SELECT 'Z01' AS SUBJ_CD UNION
			SELECT 'Z02' AS SUBJ_CD UNION
			SELECT 'Z03' AS SUBJ_CD UNION
			SELECT 'Z04' AS SUBJ_CD UNION
            SELECT 'Z05' AS SUBJ_CD UNION
			SELECT 'Z06' AS SUBJ_CD
		) A
		LEFT OUTER JOIN (
			SELECT 
				YYMM, 
				ORG_ID, 
				SUBJ_CD, 
				LOGIN_CNT, 
				FLOOR(IFNULL(AVG_LRN_SEC,0)/60) AS AVG_LRN_TM
		    FROM MONTH_ONLINE_SCHOOL_STT
		    WHERE 
		    	YYMM = #{yymm} 
		    	AND ORG_ID = 'seocho4'
		 ) B ON A.SUBJ_CD = B.SUBJ_CD
	</select>
	
	<select id="selectWeeklyGroupStudList" parameterType="hashMap" resultType="resultMap">
	/* Group.selectWeeklyGroupStudList : 기관용 주간 학생 리스트 */
		SELECT 
		    ROWNUM, 
			YYYY,
			MM,
			WK,
			CONCAT('김', '*', '런', TRUNCATE(RAND(NOW()) * 10,0) + 1) AS STUD_NM,
			STUD_ID,
			CONCAT('***test', TRUNCATE(RAND(NOW()) * 10,0) + 1) AS LOGIN_ID,
			STUD_GRADE,
			LRN_SIGNAL,
			ATT_RT,
			EX_RT,
			DAY_AVG_LRN_TM,
			CRT_RT -- ,
			-- TCHR_ID
		FROM (
			SELECT 
				@ROWNUM := @ROWNUM + 1 AS ROWNUM, 
				D.*
			FROM (
				SELECT
					CAST(SUBSTRING(A.YYMM,1,4) AS SIGNED INTEGER) AS YYYY,
					CASE
						WHEN SUBSTRING(A.YYMM,5,2) >= 10 THEN CAST(SUBSTRING(A.YYMM,5,2) AS SIGNED INTEGER)
		                ELSE CAST(SUBSTRING(A.YYMM,6,1) AS SIGNED INTEGER)
					END AS MM,
					CAST(A.WK AS SIGNED INTEGER) AS WK,
					-- A.STUD_NM,
					A.STUD_ID,
					-- A.LOGIN_ID,
					A.STUD_GRADE,
					A.LRN_SIGNAL,
					A.ATT_RT,
					A.EX_RT,
					CASE
						WHEN FLOOR(IFNULL(A.DAY_AVG_LRN_SEC,0)/60) >= 60 THEN	-- 1시간 이상일때
							CASE
								WHEN FLOOR(IFNULL(A.DAY_AVG_LRN_SEC,0)/60) MOD 60 = 0 THEN CONCAT(FLOOR(IFNULL(A.DAY_AVG_LRN_SEC,0)/60) DIV 60,'시간')	-- 60, 120, 180...
								ELSE CONCAT(CONCAT(FLOOR(IFNULL(A.DAY_AVG_LRN_SEC,0)/60) DIV 60,'시간'), CONCAT(FLOOR(IFNULL(A.DAY_AVG_LRN_SEC,0)/60) MOD 60,'분'))
							END
						WHEN FLOOR(IFNULL(A.DAY_AVG_LRN_SEC,0)/60)  <![CDATA[<]]>  1 THEN	CONCAT(A.DAY_AVG_LRN_SEC,'초')-- 1분 미만
						ELSE CONCAT(FLOOR(IFNULL(A.DAY_AVG_LRN_SEC,0)/60),'분')
					END AS DAY_AVG_LRN_TM,
					A.CRT_RT,
					A.ZIPCODE -- ,
					-- B.TCHR_ID
				FROM WEEK_STUD_LRN_RST A
				<!-- 
				LEFT OUTER JOIN (
					SELECT 
						DISTINCT
		                A.STUD_ID,
		                A.TCHR_ID
					FROM STUD_TCHR A
					JOIN COMM_WK_DT B ON A.DT = IFNULL(B.SU, IFNULL(B.SA, IFNULL(B.FR, IFNULL(B.TH, IFNULL(B.WE, IFNULL(B.TU, B.MO)))))) AND B.YYMM = #{yymm} AND B.WK = #{wk}
				) B ON A.STUD_ID = B.STUD_ID  -->
				<if test="localCd != null and localCd != ''">
				JOIN ZIPCODE_LOCAL_LOCATION C ON A.ZIPCODE = C.ZIPCODE
	                <if test="depth == 1"> 
						AND C.1_DEPTH_LOCAL_CD = #{localCd}
					</if>
					<if test="depth == 2"> 
						AND C.2_DEPTH_LOCAL_CD = #{localCd}
					</if>
					<if test="depth == 3"> 
						AND C.3_DEPTH_LOCAL_CD = #{localCd}
					</if>
                </if>
				WHERE A.YYMM = #{yymm}
					AND A.WK = #{wk}
					<choose>
						<when test="orgList != null and orgList.size!=0">
							AND A.ORG_ID IN 
							<foreach collection="orgList" item="item"  open="(" close=")" separator=",">
			                    #{item}
			                </foreach>
						</when>
						<otherwise>
							AND A.ORG_ID = 'seocho4'
						</otherwise>
					</choose>
					<if test="lrnSignal != null and lrnSignal != ''">
						AND A.LRN_SIGNAL = #{lrnSignal}
					</if>
					<if test="studPlan != null and studPlan != ''">
						<choose>
							<when test="studPlan == 'N'.toString()">
								AND A.ATT_RT IS NULL
							</when>
							<otherwise>
								AND A.ATT_RT IS NOT NULL
							</otherwise>
						</choose>
					</if>
					<!--  <if test="keyword != null and keyword != ''">
						<choose>
							<when test="searchType == 'studId'">
								AND A.LOGIN_ID LIKE CONCAT('%',#{keyword},'%')
							</when>
							<otherwise>
								AND A.STUD_NM LIKE CONCAT('%',#{keyword},'%')
							</otherwise>
						</choose>
					</if> -->
				<choose>
				<!-- <when test="orderNm == 'studNmOn'.toString()">
						ORDER BY A.STUD_NM 
					</when>
					<when test="orderNm == 'studNmOff'.toString()">
						ORDER BY A.STUD_NM DESC
					</when>
					<when test="orderNm == 'studIdOn'.toString()">
						ORDER BY A.LOGIN_ID
					</when>
					<when test="orderNm == 'studIdOff'.toString()">
						ORDER BY A.LOGIN_ID DESC
					</when> -->
					<when test="orderNm == 'studGradeOn'.toString()">
						ORDER BY A.STUD_GRADE
					</when>
					<when test="orderNm == 'studGradeOff'.toString()">
						ORDER BY A.STUD_GRADE DESC
					</when>
					<when test="orderNm == 'lrnSignalOn'.toString()">
						ORDER BY A.LRN_SIGNAL
					</when>
					<when test="orderNm == 'lrnSignalOff'.toString()">
						ORDER BY A.LRN_SIGNAL DESC
					</when>
					<when test="orderNm == 'attRtOn'.toString()">
						ORDER BY A.ATT_RT
					</when>
					<when test="orderNm == 'attRtOff'.toString()">
						ORDER BY A.ATT_RT DESC
					</when>
					<when test="orderNm == 'exRtOn'.toString()">
						ORDER BY A.EX_RT
					</when>
					<when test="orderNm == 'exRtOff'.toString()">
						ORDER BY A.EX_RT DESC
					</when>
					<when test="orderNm == 'dayAvgLrnTmOn'.toString()">
						ORDER BY A.DAY_AVG_LRN_SEC
					</when>
					<when test="orderNm == 'dayAvgLrnTmOff'.toString()">
						ORDER BY A.DAY_AVG_LRN_SEC DESC
					</when>
					<when test="orderNm == 'crtRtOn'.toString()">
						ORDER BY A.CRT_RT
					</when>
					<when test="orderNm == 'crtRtOff'.toString()">
						ORDER BY A.CRT_RT DESC
					</when>
					<otherwise>
						<!--  ORDER BY A.LOGIN_ID ASC  -->
						ORDER BY A.STUD_ID ASC
					</otherwise>
				</choose>
				) D
				, (SELECT @ROWNUM := 0) E
			) F
			<choose>
				<when test="pageSize == null or pageSize == ''">
					WHERE ROWNUM BETWEEN ${startIdx} AND (${startIdx} <![CDATA[+9]]>)				
				</when>
				<otherwise>
					WHERE ROWNUM BETWEEN ${startIdx} AND (${startIdx} + ${pageSize} <![CDATA[-1]]>)
				</otherwise>
			</choose>
	</select>
	
	<select id="selectMonthlyGroupStudList" parameterType="hashMap" resultType="resultMap">
	/* Group.selectMonthlyGroupStudList : 기관용 월간 학생 리스트 */
		SELECT 
			ROWNUM, 
			YYYY,
			MM,
			CONCAT('김', '*', '런', TRUNCATE(RAND(NOW()) * 10,0) + 1) AS STUD_NM,
			STUD_ID,
			CONCAT('***test', TRUNCATE(RAND(NOW()) * 10,0) + 1) AS LOGIN_ID,
			STUD_GRADE,
			LRN_SIGNAL,
			ATT_RT,
			EX_RT,
			DAY_AVG_LRN_TM,
			CRT_RT -- ,
			-- TCHR_ID
		FROM (
			SELECT 
				@ROWNUM := @ROWNUM + 1 AS ROWNUM, 
				D.*
			FROM (
				SELECT
					CAST(SUBSTRING(A.YYMM,1,4) AS SIGNED INTEGER) AS YYYY,
					CASE
						WHEN SUBSTRING(A.YYMM,5,2) >= 10 THEN CAST(SUBSTRING(A.YYMM,5,2) AS SIGNED INTEGER)
		                ELSE CAST(SUBSTRING(A.YYMM,6,1) AS SIGNED INTEGER)
					END AS MM,
					-- A.STUD_NM,
					A.STUD_ID,
					-- A.LOGIN_ID,
					A.STUD_GRADE,
					A.LRN_SIGNAL,
					A.ATT_RT,
					A.EX_RT,
					CASE
						WHEN FLOOR(IFNULL(A.DAY_AVG_LRN_SEC,0)/60) >= 60 THEN	-- 1시간 이상일때
							CASE
								WHEN FLOOR(IFNULL(A.DAY_AVG_LRN_SEC,0)/60) MOD 60 = 0 THEN CONCAT(FLOOR(IFNULL(A.DAY_AVG_LRN_SEC,0)/60) DIV 60,'시간')	-- 60, 120, 180...
								ELSE CONCAT(CONCAT(FLOOR(IFNULL(A.DAY_AVG_LRN_SEC,0)/60) DIV 60,'시간'), CONCAT(FLOOR(IFNULL(A.DAY_AVG_LRN_SEC,0)/60) MOD 60,'분'))
							END
						WHEN FLOOR(IFNULL(A.DAY_AVG_LRN_SEC,0)/60) <![CDATA[<]]> 1 THEN CONCAT(A.DAY_AVG_LRN_SEC,'초')-- 1분 미만
						ELSE CONCAT(FLOOR(IFNULL(A.DAY_AVG_LRN_SEC,0)/60),'분')
					END AS DAY_AVG_LRN_TM,
					A.CRT_RT,
					A.ZIPCODE -- ,
					-- B.TCHR_ID
				FROM MONTH_STUD_LRN_RST A
				<!--  
				LEFT OUTER JOIN (
					SELECT 
						DISTINCT
		                A.STUD_ID,
		                A.TCHR_ID
					FROM STUD_TCHR A
					JOIN (
						SELECT 
							MO,
							TU,
							WE,
							TH,
							FR,
							SA,
							SU
						FROM COMM_WK_DT
						WHERE YYMM = #{yymm}
						ORDER BY WK DESC
						LIMIT 1
					) B ON A.DT = IFNULL(B.SU, IFNULL(B.SA, IFNULL(B.FR, IFNULL(B.TH, IFNULL(B.WE, IFNULL(B.TU, B.MO))))))
				) B ON A.STUD_ID = B.STUD_ID  -->
				<if test="localCd != null and localCd != ''">
				JOIN ZIPCODE_LOCAL_LOCATION C ON A.ZIPCODE = C.ZIPCODE
	                <if test="depth == 1"> 
						AND C.1_DEPTH_LOCAL_CD = #{localCd}
					</if>
					<if test="depth == 2"> 
						AND C.2_DEPTH_LOCAL_CD = #{localCd}
					</if>
					<if test="depth == 3"> 
						AND C.3_DEPTH_LOCAL_CD = #{localCd}
					</if>
                </if>
				WHERE A.YYMM = #{yymm}
					<choose>
						<when test="orgList != null and orgList.size!=0">
							AND A.ORG_ID IN 
							<foreach collection="orgList" item="item"  open="(" close=")" separator=",">
			                    #{item}
			                </foreach>
						</when>
						<otherwise>
							AND A.ORG_ID = 'seocho4'
						</otherwise>
					</choose>
					<if test="lrnSignal != null and lrnSignal != ''">
						AND A.LRN_SIGNAL = #{lrnSignal}
					</if>
					<if test="studPlan != null and studPlan != ''">
						<choose>
							<when test="studPlan == 'N'.toString()">
								AND A.ATT_RT IS NULL
							</when>
							<otherwise>
								AND A.ATT_RT IS NOT NULL
							</otherwise>
						</choose>
					</if>
					<!-- <if test="keyword != null and keyword != ''">
						<choose>
							<when test="searchType == 'studId'">
								AND A.LOGIN_ID LIKE CONCAT('%',#{keyword},'%')
							</when>
							<otherwise>
								AND A.STUD_NM LIKE CONCAT('%',#{keyword},'%')
							</otherwise>
						</choose>
					</if> -->
				<choose>
					<!-- <when test="orderNm == 'studNmOn'.toString()">
						ORDER BY A.STUD_NM
					</when>
					<when test="orderNm == 'studNmOff'.toString()">
						ORDER BY A.STUD_NM DESC
					</when>
					<when test="orderNm == 'studIdOn'.toString()">
						ORDER BY A.LOGIN_ID
					</when>
					<when test="orderNm == 'studIdOff'.toString()">
						ORDER BY A.LOGIN_ID DESC
					</when> -->
					<when test="orderNm == 'studGradeOn'.toString()">
						ORDER BY A.STUD_GRADE
					</when>
					<when test="orderNm == 'studGradeOff'.toString()">
						ORDER BY A.STUD_GRADE DESC
					</when>
					<when test="orderNm == 'lrnSignalOn'.toString()">
						ORDER BY A.LRN_SIGNAL
					</when>
					<when test="orderNm == 'lrnSignalOff'.toString()">
						ORDER BY A.LRN_SIGNAL DESC
					</when>
					<when test="orderNm == 'attRtOn'.toString()">
						ORDER BY A.ATT_RT
					</when>
					<when test="orderNm == 'attRtOff'.toString()">
						ORDER BY A.ATT_RT DESC
					</when>
					<when test="orderNm == 'exRtOn'.toString()">
						ORDER BY A.EX_RT
					</when>
					<when test="orderNm == 'exRtOff'.toString()">
						ORDER BY A.EX_RT DESC
					</when>
					<when test="orderNm == 'dayAvgLrnTmOn'.toString()">
						ORDER BY A.DAY_AVG_LRN_SEC
					</when>
					<when test="orderNm == 'dayAvgLrnTmOff'.toString()">
						ORDER BY A.DAY_AVG_LRN_SEC DESC
					</when>
					<when test="orderNm == 'crtRtOn'.toString()">
						ORDER BY A.CRT_RT
					</when>
					<when test="orderNm == 'crtRtOff'.toString()">
						ORDER BY A.CRT_RT DESC
					</when>
					<otherwise>
						-- ORDER BY A.LOGIN_ID ASC 
						ORDER BY A.STUD_ID ASC 
					</otherwise>
				</choose>
				) D
				, (SELECT @ROWNUM := 0) E
			) F
			<choose>
				<when test="pageSize == null or pageSize == ''">
					WHERE ROWNUM BETWEEN ${startIdx} AND (${startIdx} <![CDATA[+9]]>)				
				</when>
				<otherwise>
					WHERE ROWNUM BETWEEN ${startIdx} AND (${startIdx} + ${pageSize} <![CDATA[-1]]>)
				</otherwise>
			</choose>
	</select>
	
	<select id="selectWeeklyGroupStudListCnt" parameterType="hashMap" resultType="resultMap">
	/* Group.selectWeeklyGroupStudListCnt : 기관 주간 학생 리스트 총 수*/
		SELECT
			COUNT(A.STUD_ID) AS STUD_CNT,
			<choose>
				<when test="pageSize == null or pageSize == ''">
					CEIL(COUNT(A.STUD_ID) / 10) AS PAGE_CNT
				</when>
				<otherwise>
					CEIL(COUNT(A.STUD_ID) / ${pageSize}) AS PAGE_CNT
				</otherwise>
			</choose>
		FROM WEEK_STUD_LRN_RST A
		<choose>
			<when test="localCd != null and localCd != ''">
				JOIN ZIPCODE_LOCAL_LOCATION B ON A.ZIPCODE = B.ZIPCODE
				WHERE A.YYMM = #{yymm}
					AND A.WK = #{wk}
					<choose>
						<when test="orgList != null and orgList.size!=0">
							AND A.ORG_ID IN 
							<foreach collection="orgList" item="item"  open="(" close=")" separator=",">
			                    #{item}
			                </foreach>
						</when>
						<otherwise>
							AND A.ORG_ID = 'seocho4'
						</otherwise>
					</choose>
					<if test="depth == 1"> 
						AND B.1_DEPTH_LOCAL_CD = #{localCd}
					</if>
					<if test="depth == 2"> 
						AND B.2_DEPTH_LOCAL_CD = #{localCd}
					</if>
					<if test="depth == 3"> 
						AND B.3_DEPTH_LOCAL_CD = #{localCd}
					</if>
			</when>
			<otherwise>
				WHERE A.YYMM = #{yymm}
					AND A.WK = #{wk}
					<choose>
						<when test="orgList != null and orgList.size!=0">
							AND A.ORG_ID IN 
							<foreach collection="orgList" item="item"  open="(" close=")" separator=",">
			                    #{item}
			                </foreach>
						</when>
						<otherwise>
							AND A.ORG_ID = 'seocho4'
						</otherwise>
					</choose>
			</otherwise>
		</choose>
		<if test="lrnSignal != null and lrnSignal != ''">
			AND A.LRN_SIGNAL = #{lrnSignal}
		</if>
		<if test="studPlan != null and studPlan != ''">
			<choose>
				<when test="studPlan == 'N'.toString()">
					AND A.ATT_RT IS NULL
				</when>
				<otherwise>
					AND A.ATT_RT IS NOT NULL
				</otherwise>
			</choose>
		</if>
		<!-- <if test="keyword != null and keyword != ''">
			<choose>
				<when test="searchType == 'studId'">
					AND A.LOGIN_ID LIKE CONCAT('%',#{keyword},'%')
				</when>
				<otherwise>
					AND A.STUD_NM LIKE CONCAT('%',#{keyword},'%')
				</otherwise>
			</choose>
		</if> -->
	</select>
	
	<select id="selectMonthlyGroupStudListCnt" parameterType="hashMap" resultType="resultMap">
	/* Group.selectMonthlyGroupStudListCnt : 기관 월간 학생 리스트 총 수*/
		SELECT
			COUNT(A.STUD_ID) AS STUD_CNT,
			<choose>
				<when test="pageSize == null or pageSize == ''">
					CEIL(COUNT(A.STUD_ID) / 10) AS PAGE_CNT
				</when>
				<otherwise>
					CEIL(COUNT(A.STUD_ID) / ${pageSize}) AS PAGE_CNT
				</otherwise>
			</choose>
		FROM MONTH_STUD_LRN_RST A
		<choose>
			<when test="localCd != null and localCd != ''">
				JOIN ZIPCODE_LOCAL_LOCATION B ON A.ZIPCODE = B.ZIPCODE
				WHERE A.YYMM = #{yymm}
					<choose>
						<when test="orgList != null and orgList.size!=0">
							AND A.ORG_ID IN 
							<foreach collection="orgList" item="item"  open="(" close=")" separator=",">
			                    #{item}
			                </foreach>
						</when>
						<otherwise>
							AND A.ORG_ID = 'seocho4'
						</otherwise>
					</choose>
					<if test="depth == 1"> 
						AND B.1_DEPTH_LOCAL_CD = #{localCd}
					</if>
					<if test="depth == 2"> 
						AND B.2_DEPTH_LOCAL_CD = #{localCd}
					</if>
					<if test="depth == 3"> 
						AND B.3_DEPTH_LOCAL_CD = #{localCd}
					</if>
			</when>
			<otherwise>
				WHERE A.YYMM = #{yymm}
					<choose>
						<when test="orgList != null and orgList.size!=0">
							AND A.ORG_ID IN 
							<foreach collection="orgList" item="item"  open="(" close=")" separator=",">
			                    #{item}
			                </foreach>
						</when>
						<otherwise>
							AND A.ORG_ID = 'seocho4'
						</otherwise>
					</choose>
			</otherwise>
		</choose>
		<if test="lrnSignal != null and lrnSignal != ''">
			AND A.LRN_SIGNAL = #{lrnSignal}
		</if>
		<if test="studPlan != null and studPlan != ''">
			<choose>
				<when test="studPlan == 'N'.toString()">
					AND A.ATT_RT IS NULL
				</when>
				<otherwise>
					AND A.ATT_RT IS NOT NULL
				</otherwise>
			</choose>
		</if>
		<!-- <if test="keyword != null and keyword != ''">
			<choose>
				<when test="searchType == 'studId'">
					AND A.LOGIN_ID LIKE CONCAT('%',#{keyword},'%')
				</when>
				<otherwise>
					AND A.STUD_NM LIKE CONCAT('%',#{keyword},'%')
				</otherwise>
			</choose>
		</if> -->
	</select>
	
	<select id="selectWeeklyGroupLocalList" parameterType="hashMap" resultType="resultMap">
	/* Group.selectWeeklyGroupLocalList : 기관 주간 지역 리스트 */
		SELECT
			DISTINCT 
			A.1_DEPTH_LOCAL_CD AS DEPTH_1_LOCAL_CD, 
			A.1_DEPTH_LOCAL_NM AS DEPTH_1_LOCAL_NM, 
			A.2_DEPTH_LOCAL_CD AS DEPTH_2_LOCAL_CD, 
			A.2_DEPTH_LOCAL_NM AS DEPTH_2_LOCAL_NM, 
			A.3_DEPTH_LOCAL_CD AS DEPTH_3_LOCAL_CD, 
			A.3_DEPTH_LOCAL_NM AS DEPTH_3_LOCAL_NM
		FROM ZIPCODE_LOCAL_LOCATION A
		JOIN (
			SELECT 
				DISTINCT ZIPCODE
			FROM WEEK_STUD_LRN_RST
		    WHERE YYMM = #{yymm} 
		    	AND WK = #{wk}
		    	<choose>
				<when test="orgList != null and orgList.size!=0">
					AND ORG_ID IN 
					<foreach collection="orgList" item="item"  open="(" close=")" separator=",">
	                    #{item}
	                </foreach>
				</when>
				<otherwise>
					AND ORG_ID = 'seocho4'
				</otherwise>
			</choose>
		) B ON A.ZIPCODE = B.ZIPCODE
		ORDER BY 1_DEPTH_LOCAL_CD ASC, 2_DEPTH_LOCAL_CD ASC, 3_DEPTH_LOCAL_CD ASC
		
	</select>
	
	<select id="selectMonthlyGroupLocalList" parameterType="hashMap" resultType="resultMap">
	/* Group.selectMonthlyGroupLocalList : 기관 월간 지역 리스트 */
		SELECT 
			DISTINCT 
			A.1_DEPTH_LOCAL_CD AS DEPTH_1_LOCAL_CD, 
			A.1_DEPTH_LOCAL_NM AS DEPTH_1_LOCAL_NM, 
			A.2_DEPTH_LOCAL_CD AS DEPTH_2_LOCAL_CD, 
			A.2_DEPTH_LOCAL_NM AS DEPTH_2_LOCAL_NM, 
			A.3_DEPTH_LOCAL_CD AS DEPTH_3_LOCAL_CD, 
			A.3_DEPTH_LOCAL_NM AS DEPTH_3_LOCAL_NM
		FROM ZIPCODE_LOCAL_LOCATION A
		JOIN ( 
			SELECT 
				DISTINCT(ZIPCODE)
			FROM MONTH_STUD_LRN_RST
			WHERE YYMM = #{yymm}
				<choose>
					<when test="orgList != null and orgList.size!=0">
						AND ORG_ID IN 
						<foreach collection="orgList" item="item"  open="(" close=")" separator=",">
		                    #{item}
		                </foreach>
					</when>
					<otherwise>
						AND ORG_ID = 'seocho4'
					</otherwise>
				</choose>
		) B ON A.ZIPCODE = B.ZIPCODE
		ORDER BY 1_DEPTH_LOCAL_CD ASC, 2_DEPTH_LOCAL_CD ASC, 3_DEPTH_LOCAL_CD ASC
		
	</select>
	
	<select id="selectGroupMainLocal" parameterType="hashMap" resultType="resultMap">
	/* Group.selectGroupMainLocal : 기관 메인 지역 */
		SELECT DISTINCT
			1 AS GRADE,
			<choose>
				<when test="areaCode2 != ''.toString()">
					2 AS LEVEL,
					2_DEPTH_LOCAL_NM AS LOCAL_NM,
					2_DEPTH_LOCAL_CD AS LOCAL_CD,	 
				</when>
				<otherwise>
					1 AS LEVEL,
					1_DEPTH_LOCAL_NM AS LOCAL_NM,
					1_DEPTH_LOCAL_CD AS LOCAL_CD,	 
				</otherwise>
			</choose>
			1_DEPTH_LOCAL_CD AS CTP_CODE
		FROM ZIPCODE_LOCAL_LOCATION
		WHERE
			1_DEPTH_LOCAL_CD_ORIGIN = #{areaCode1}
			<if test="areaCode2 != ''.toString()">
				AND 2_DEPTH_LOCAL_CD_ORIGIN = #{areaCode2}
			</if>
	</select>
	
	<select id="selectWeekLrnStt" parameterType="hashMap" resultType="resultMap">
	/* Group.selectWeekLrnStt : 학습지표 주간 */
		SELECT 
			ORG_ID,
		    GROUP_CONCAT(CONCAT(LEFT(YYMM,4), '년 ', RIGHT(YYMM,2), '월 ',WK ,'주차')) AS CATEGORY_SP,
		    GROUP_CONCAT(IFNULL(TOTAL_STUD_CNT,'')) AS STUD_CNT_SP,
		    GROUP_CONCAT(IFNULL(ATT_RT,'')) AS AVG_ATT_RT_SP,
		    GROUP_CONCAT(IFNULL(EX_RT,'')) AS AVG_EX_RT_SP,
		    GROUP_CONCAT(IFNULL(CRT_RT,'')) AS AVG_CRT_RT_SP,
		    GROUP_CONCAT(IFNULL(DAY_AVG_LRN_SEC,'')) AS AVG_DAY_LRN_SEC_SP
		FROM WEEK_ORG_LRN_RST
		WHERE
			YYMM BETWEEN #{searchStartYymm} AND #{searchEndYymm}
		    AND WK BETWEEN 1 AND 6
			AND ORG_ID = 'seocho4'
		GROUP BY ORG_ID
	</select>
	
	<select id="selectMonthLrnStt" parameterType="hashMap" resultType="resultMap">
	/* Group.selectMonthLrnStt : 학습지표 월간 */
		SELECT 
			ORG_ID,
		    GROUP_CONCAT(CONCAT(LEFT(YYMM,4), '년 ', RIGHT(YYMM,2), '월')) AS CATEGORY_SP,
		    GROUP_CONCAT(IFNULL(TOTAL_STUD_CNT,'')) AS STUD_CNT_SP,
		    GROUP_CONCAT(IFNULL(ATT_RT,'')) AS AVG_ATT_RT_SP,
		    GROUP_CONCAT(IFNULL(EX_RT,'')) AS AVG_EX_RT_SP,
		    GROUP_CONCAT(IFNULL(CRT_RT,'')) AS AVG_CRT_RT_SP,
		    GROUP_CONCAT(IFNULL(DAY_AVG_LRN_SEC,'')) AS AVG_DAY_LRN_SEC_SP
		FROM MONTH_ORG_LRN_RST
		WHERE
			YYMM BETWEEN #{searchStartYymm} AND #{searchEndYymm}
			AND ORG_ID = 'seocho4'
		GROUP BY ORG_ID
	</select>
	
	<select id="selectWeekLrnSttTrend" parameterType="hashMap" resultType="resultMap">
	/* Group.selectWeekLrnSttTrend : 학습지표 추이 주간 */
		SELECT 
			ORG_ID,
		    CONCAT(LEFT(YYMM,4), '년 ', RIGHT(YYMM,2), '월 ',WK ,'주차') AS CATEGORY,
		    ATT_RT AS AVG_ATT_RT,
		    EX_RT AS AVG_EX_RT,
		    CRT_RT AS AVG_CRT_RT,
		    TOTAL_STUD_CNT AS STUD_CNT
		FROM WEEK_ORG_LRN_RST
		WHERE
			YYMM BETWEEN #{searchStartYymm} AND #{searchEndYymm}
		    AND WK BETWEEN 1 AND 6
			AND ORG_ID = 'seocho4'
	</select>
	
	<select id="selectMonthLrnSttTrend" parameterType="hashMap" resultType="resultMap">
	/* Group.selectMonthLrnSttTrend : 학습지표 추이 월간 */
		SELECT 
			ORG_ID,
		    CONCAT(LEFT(YYMM,4), '년 ', RIGHT(YYMM,2), '월') AS CATEGORY,
		    ATT_RT AS AVG_ATT_RT,
		    EX_RT AS AVG_EX_RT,
		    CRT_RT AS AVG_CRT_RT,
		    TOTAL_STUD_CNT AS STUD_CNT
		FROM MONTH_ORG_LRN_RST
		WHERE
			YYMM BETWEEN #{searchStartYymm} AND #{searchEndYymm}
			AND ORG_ID = 'seocho4'
	</select>
	
	<select id="selectOrgLrnStt" parameterType="hashMap" resultType="resultMap">
	/* Group.selectOrgLrnStt : 기관학습현황 */
		SELECT 
			ORG_AVG_ATT_RT,
		    ORG_AVG_EX_RT,
		    ORG_AVG_CRT_RT,
		    ORG_AVG_DAY_LRN_SEC,
		    TOP10_AVG_ATT_RT,
		    TOP10_AVG_EX_RT,
		    TOP10_AVG_CRT_RT,
		    TOP10_AVG_DAY_LRN_SEC
		FROM 
		(
			SELECT 
				IFNULL(ROUND(SUM(ATT_RT) / COUNT(ATT_RT)), 0) AS ORG_AVG_ATT_RT,
				IFNULL(ROUND(SUM(EX_RT) / COUNT(EX_RT)), 0) AS ORG_AVG_EX_RT,
				IFNULL(ROUND(SUM(CRT_RT) / COUNT(CRT_RT)), 0) AS ORG_AVG_CRT_RT,
				IFNULL(ROUND(SUM(DAY_AVG_LRN_SEC) / COUNT(DAY_AVG_LRN_SEC)), 0) AS ORG_AVG_DAY_LRN_SEC
			FROM MONTH_ORG_LRN_RST
			WHERE
				YYMM BETWEEN #{searchStartYymm} AND #{searchEndYymm}
				AND ORG_ID = 'seocho4'
			GROUP BY ORG_ID
		) AS ORG_RST,
		(
			SELECT
				IFNULL(ROUND(SUM(TOP10_AVG_ATT_RT) / COUNT(TOP10_AVG_ATT_RT)), 0) AS TOP10_AVG_ATT_RT,
				IFNULL(ROUND(SUM(TOP10_AVG_EX_RT) / COUNT(TOP10_AVG_EX_RT)), 0) AS TOP10_AVG_EX_RT,
				IFNULL(ROUND(SUM(TOP10_AVG_CRT_RT) / COUNT(TOP10_AVG_CRT_RT)), 0) AS TOP10_AVG_CRT_RT,
				IFNULL(ROUND(SUM(TOP10_AVG_DAY_LRN_SEC) / COUNT(TOP10_AVG_DAY_LRN_SEC)), 0) AS TOP10_AVG_DAY_LRN_SEC
			FROM TOP10_AVG_LRN_STT
			WHERE YYMM BETWEEN #{searchStartYymm} AND #{searchEndYymm}
		) AS TOP10_RST
	</select>
	
	<select id="selectHlUtilizationCrtRtExcellentGrp" parameterType="hashMap" resultType="resultMap">
	/* Group.selectHlUtilizationCrtRtExcellentGrp : 홈런 활용 정답률 우수군 */
		SELECT 
			STUD_NM,
			AVG_CRT_RT
		FROM ( 
			SELECT
				MAX(CONCAT('김', '*', '런', TRUNCATE(RAND(NOW()) * 10,0) + 1)) AS STUD_NM,
				IFNULL(ROUND(SUM(CRT_RT) / COUNT(CRT_RT)), 0) AS AVG_CRT_RT,
				IFNULL(ROUND(SUM(EX_RT) / COUNT(EX_RT)), 0) AS AVG_EX_RT,
		        IFNULL(ROUND(SUM(ATT_RT) / COUNT(ATT_RT)), 0) AS AVG_ATT_RT,
				COUNT(CRT_RT) AS CRT_RT_CNT 
			FROM MONTH_STUD_LRN_RST
			WHERE 
				YYMM BETWEEN #{searchStartYymm} AND #{searchEndYymm}
				<choose>
					<when test="orgList != null and orgList.size!=0">
						AND ORG_ID IN 
						<foreach collection="orgList" item="item"  open="(" close=")" separator=",">
		                    #{item}
		                </foreach>
					</when>
					<otherwise>
						AND ORG_ID = 'seocho4'
					</otherwise>
				</choose>
			GROUP BY STUD_ID
		) AS CRT_RT_RST
		WHERE AVG_CRT_RT <![CDATA[>=]]> 80
			<if test="diffMonth > 1">
				AND CRT_RT_CNT >= 2
			</if>
		ORDER BY AVG_CRT_RT DESC, CRT_RT_CNT DESC, AVG_EX_RT DESC, AVG_ATT_RT DESC, STUD_NM
		LIMIT 0, 5
	</select>
	
	<select id="selectHlUtilizationCrtRtNeedEffortGrp" parameterType="hashMap" resultType="resultMap">
	/* Group.selectHlUtilizationCrtRtNeedEffortGrp : 홈런 활용 정답률 노력필요군 */
		SELECT 
			STUD_NM,
			AVG_CRT_RT
		FROM ( 
			SELECT
				MAX(CONCAT('김', '*', '런', TRUNCATE(RAND(NOW()) * 10,0) + 1)) AS STUD_NM,
				IFNULL(ROUND(SUM(CRT_RT) / COUNT(CRT_RT)), 0) AS AVG_CRT_RT,
				IFNULL(ROUND(SUM(EX_RT) / COUNT(EX_RT)), 0) AS AVG_EX_RT,
		        IFNULL(ROUND(SUM(ATT_RT) / COUNT(ATT_RT)), 0) AS AVG_ATT_RT,
				COUNT(CRT_RT) AS CRT_RT_CNT 
			FROM MONTH_STUD_LRN_RST
			WHERE 
				YYMM BETWEEN #{searchStartYymm} AND #{searchEndYymm}
				<choose>
					<when test="orgList != null and orgList.size!=0">
						AND ORG_ID IN 
						<foreach collection="orgList" item="item"  open="(" close=")" separator=",">
		                    #{item}
		                </foreach>
					</when>
					<otherwise>
						AND ORG_ID = 'seocho4'
					</otherwise>
				</choose>
			GROUP BY STUD_ID
		) AS CRT_RT_RST
		WHERE AVG_CRT_RT <![CDATA[<=]]> 60
			<if test="diffMonth > 1">
				AND CRT_RT_CNT >= 2
			</if>
		ORDER BY AVG_CRT_RT, CRT_RT_CNT, AVG_EX_RT, AVG_ATT_RT, STUD_NM
			LIMIT 0, 5
	</select>
	
	<select id="selectHlUtilizationExRtExcellentGrp" parameterType="hashMap" resultType="resultMap">
	/* Group.selectHlUtilizationExRtExcellentGrp : 홈런 활용 수행률 우수군 */
		SELECT 
			STUD_NM,
		    AVG_EX_RT
		FROM ( 
			SELECT
				MAX(CONCAT('김', '*', '런', TRUNCATE(RAND(NOW()) * 10,0) + 1)) AS STUD_NM,
				IFNULL(ROUND(SUM(EX_RT) / COUNT(EX_RT)), 0) AS AVG_EX_RT,
		        IFNULL(ROUND(SUM(CRT_RT) / COUNT(CRT_RT)), 0) AS AVG_CRT_RT,
		        IFNULL(ROUND(SUM(ATT_RT) / COUNT(ATT_RT)), 0) AS AVG_ATT_RT,
				COUNT(EX_RT) AS EX_RT_CNT 
			FROM MONTH_STUD_LRN_RST
			WHERE 
				YYMM BETWEEN #{searchStartYymm} AND #{searchEndYymm}
				<choose>
					<when test="orgList != null and orgList.size!=0">
						AND ORG_ID IN 
						<foreach collection="orgList" item="item"  open="(" close=")" separator=",">
		                    #{item}
		                </foreach>
					</when>
					<otherwise>
						AND ORG_ID = 'seocho4'
					</otherwise>
				</choose>
			GROUP BY STUD_ID
		) AS CRT_RT_RST
		WHERE AVG_EX_RT <![CDATA[>=]]> 80
			<if test="diffMonth > 1">
				AND EX_RT_CNT >= 2
			</if>
		ORDER BY AVG_EX_RT DESC, EX_RT_CNT DESC, AVG_CRT_RT DESC, AVG_ATT_RT DESC, STUD_NM
		LIMIT 0, 5
	</select>
	
	<select id="selectHlUtilizationExRtNeedEffortGrp" parameterType="hashMap" resultType="resultMap">
	/* Group.selectHlUtilizationExRtNeedEffortGrp : 홈런 활용 수행률 노력필요군 */
		SELECT 
			STUD_NM,
		    AVG_EX_RT
		FROM ( 
			SELECT
				MAX(CONCAT('김', '*', '런', TRUNCATE(RAND(NOW()) * 10,0) + 1)) AS STUD_NM,
				IFNULL(ROUND(SUM(EX_RT) / COUNT(EX_RT)), 0) AS AVG_EX_RT,
		        IFNULL(ROUND(SUM(CRT_RT) / COUNT(CRT_RT)), 0) AS AVG_CRT_RT,
		        IFNULL(ROUND(SUM(ATT_RT) / COUNT(ATT_RT)), 0) AS AVG_ATT_RT,
				COUNT(EX_RT) AS EX_RT_CNT 
			FROM MONTH_STUD_LRN_RST
			WHERE 
				YYMM BETWEEN #{searchStartYymm} AND #{searchEndYymm}
				<choose>
					<when test="orgList != null and orgList.size!=0">
						AND ORG_ID IN 
						<foreach collection="orgList" item="item"  open="(" close=")" separator=",">
		                    #{item}
		                </foreach>
					</when>
					<otherwise>
						AND ORG_ID = 'seocho4'
					</otherwise>
				</choose>
			GROUP BY STUD_ID
		) AS CRT_RT_RST
		WHERE AVG_EX_RT <![CDATA[<=]]> 60
			<if test="diffMonth > 1">
				AND EX_RT_CNT >= 2
			</if>
		ORDER BY AVG_EX_RT, EX_RT_CNT, AVG_CRT_RT, AVG_ATT_RT, STUD_NM
		LIMIT 0, 5
	</select>
	
	<select id="selectWeekLrnSignalTrend" parameterType="hashMap" resultType="resultMap">
	/* Group.selectWeekLrnSignalTrend : 학습 분석 신호 변화 주간 */
		SELECT 
			CONCAT(LEFT(YYMM,4), '년 ', RIGHT(YYMM,2), '월 ',WK ,'주차') AS CATEGORY,
		    COUNT(CASE WHEN LRN_SIGNAL = 'A' THEN 1 END) AS SIGNAL1,
		    COUNT(CASE WHEN LRN_SIGNAL = 'B' THEN 1 END) AS SIGNAL2,
		    COUNT(CASE WHEN LRN_SIGNAL = 'C' THEN 1 END) AS SIGNAL3,
		    COUNT(LRN_SIGNAL) AS TOTAL
		FROM WEEK_STUD_LRN_RST
		WHERE
			YYMM BETWEEN #{searchStartYymm} AND #{searchEndYymm}
			AND WK BETWEEN 1 AND 6
			<choose>
				<when test="orgList != null and orgList.size!=0">
					AND ORG_ID IN 
					<foreach collection="orgList" item="item"  open="(" close=")" separator=",">
	                    #{item}
	                </foreach>
				</when>
				<otherwise>
					AND ORG_ID = 'seocho4'
				</otherwise>
			</choose>
		GROUP BY YYMM, WK
	</select>
	
	<select id="selectMonthLrnSignalTrend" parameterType="hashMap" resultType="resultMap">
	/* Group.selectMonthLrnSignalTrend : 학습 분석 신호 변화 월간 */
		SELECT 
			CONCAT(LEFT(YYMM,4), '년 ', RIGHT(YYMM,2), '월') AS CATEGORY,
		    COUNT(CASE WHEN LRN_SIGNAL = 'A' THEN 1 END) AS SIGNAL1,
		    COUNT(CASE WHEN LRN_SIGNAL = 'B' THEN 1 END) AS SIGNAL2,
		    COUNT(CASE WHEN LRN_SIGNAL = 'C' THEN 1 END) AS SIGNAL3,
		    COUNT(LRN_SIGNAL) AS TOTAL
		FROM MONTH_STUD_LRN_RST
		WHERE
			YYMM BETWEEN #{searchStartYymm} AND #{searchEndYymm}
			<choose>
				<when test="orgList != null and orgList.size!=0">
					AND ORG_ID IN 
					<foreach collection="orgList" item="item"  open="(" close=")" separator=",">
	                    #{item}
	                </foreach>
				</when>
				<otherwise>
					AND ORG_ID = 'seocho4'
				</otherwise>
			</choose>
		GROUP BY YYMM
	</select>
	
	<select id="selectStrengthHabitExcellentStud" parameterType="hashMap" resultType="resultMap">
	/* Group.selectStrengthHabitExcellentStud : 강점 습관 분석 우수회원 */
		SELECT
		    CONCAT(SUBSTRING(A.YYMM,5), '월') AS CATEGORY,
			CONCAT('***test', TRUNCATE(RAND(NOW()) * 10,0) + 1) AS STUD_ID,
		    CONCAT('김', '*', '런', TRUNCATE(RAND(NOW()) * 10,0) + 1) AS STUD_NM,
		    A.CRT_RT AS AVG_CRT_RT,
		    A.EX_RT AS AVG_EX_RT,
		    A.DAY_AVG_LRN_SEC AS AVG_DAY_LRN_SEC
		FROM MONTH_STUD_LRN_RST A
		JOIN (
			SELECT 
				A.STUD_ID,
				CASE
					WHEN A.CRT_RT_CNT <![CDATA[>]]> IFNULL(B.NULL_CNT,0) THEN 1
					ELSE 0
				END AS CRT_RT_CHECK
			FROM (
				SELECT
					YYMM,
					STUD_ID,
					-- STUD_NM,
					IFNULL(ROUND(SUM(EX_RT) / COUNT(EX_RT)), 0) AS AVG_EX_RT,
					IFNULL(ROUND(SUM(CRT_RT) / COUNT(CRT_RT)), 0) AS AVG_CRT_RT,
					IFNULL(ROUND(SUM(ATT_RT) / COUNT(ATT_RT)), 0) AS AVG_ATT_RT,
					COUNT(CRT_RT) AS CRT_RT_CNT,
					COUNT(STUD_ID) AS MONTH_CNT
				FROM MONTH_STUD_LRN_RST
				WHERE YYMM BETWEEN #{searchStartYymm} AND #{searchEndYymm}
					<choose>
						<when test="orgList != null and orgList.size!=0">
							AND ORG_ID IN 
							<foreach collection="orgList" item="item"  open="(" close=")" separator=",">
			                    #{item}
			                </foreach>
						</when>
						<otherwise>
							AND ORG_ID = 'seocho4'
						</otherwise>
					</choose>
				GROUP BY STUD_ID
			) A
			LEFT OUTER JOIN(
				SELECT 
					STUD_ID,
					COUNT(*) AS NULL_CNT
				FROM MONTH_STUD_LRN_RST 
				WHERE YYMM BETWEEN #{searchStartYymm} AND #{searchEndYymm} 
					<choose>
						<when test="orgList != null and orgList.size!=0">
							AND ORG_ID IN 
							<foreach collection="orgList" item="item"  open="(" close=")" separator=",">
			                    #{item}
			                </foreach>
						</when>
						<otherwise>
							AND ORG_ID = 'seocho4'
						</otherwise>
					</choose>
					AND CRT_RT IS NULL
				GROUP BY STUD_ID
			) B ON A.STUD_ID = B.STUD_ID
			WHERE  A.AVG_CRT_RT <![CDATA[>=]]> 80
				AND A.CRT_RT_CNT <![CDATA[>=]]> 2
			ORDER BY A.AVG_CRT_RT DESC, CRT_RT_CHECK DESC, A.AVG_EX_RT DESC, A.AVG_ATT_RT DESC, A.STUD_NM
			LIMIT 1
		) B ON A.STUD_ID = B.STUD_ID
		WHERE A.YYMM BETWEEN #{searchStartYymm} AND #{searchEndYymm}
			<choose>
				<when test="orgList != null and orgList.size!=0">
					AND A.ORG_ID IN 
					<foreach collection="orgList" item="item"  open="(" close=")" separator=",">
	                    #{item}
	                </foreach>
				</when>
				<otherwise>
					AND A.ORG_ID = 'seocho4'
				</otherwise>
			</choose>
	</select>
	
	<select id="selectStrengthHabitExcellentStudHabit" parameterType="hashMap" resultType="resultMap">
	/* Group.selectStrengthHabitExcellentStudHabit : 강점 습관 분석 우수회원 학습특성*/
		SELECT 
			ATT_HABIT,
			PLAN_HABIT,
			INCRT_NOTE_HABIT,
			A_LRN_HABIT,
			SLV_HABIT,
			CONCN_HABIT
		FROM (
			SELECT 
				CASE
					WHEN AVG_ATT_RT <![CDATA[>=]]> 80 THEN AVG_ATT_RT
					ELSE NULL
				END AS ATT_HABIT,
				CASE
					WHEN AVG_EX_RT <![CDATA[>=]]> 80 THEN AVG_EX_RT
					ELSE NULL
				END AS PLAN_HABIT,
				CASE
					WHEN AVG_INCRT_NT_NC_CNT <![CDATA[>=]]> 0 AND AVG_INCRT_NT_NC_CNT <![CDATA[<=]]> 10 THEN AVG_INCRT_NT_NC_CNT
					ELSE NULL
				END AS INCRT_NOTE_HABIT,
				CASE
					WHEN AVG_A_LRN_EX_CNT <![CDATA[>=]]> 10 AND AVG_A_LRN_EX_CNT <![CDATA[<=]]> 100 THEN C.A_LRN_EX_CNT_MAX_SUBJ_CD
					ELSE NULL
				END AS A_LRN_HABIT,
				CASE
					WHEN AVG_IMPRV_SLV_HABIT_CNT <![CDATA[<=]]> 5 THEN AVG_IMPRV_SLV_HABIT_CNT
					ELSE NULL
				END AS SLV_HABIT,
				AVG_DAY_AVG_LRN_SEC AS CONCN_HABIT,
				CASE
					WHEN A.CRT_RT_CNT > IFNULL(B.NULL_CNT,0) THEN 1
					ELSE 0
				END AS CRT_RT_CHECK
			FROM (
				SELECT
					YYMM,
					STUD_ID,
					-- STUD_NM,
					IFNULL(ROUND(SUM(EX_RT) / COUNT(EX_RT)), 0) AS AVG_EX_RT,
					IFNULL(ROUND(SUM(CRT_RT) / COUNT(CRT_RT)), 0) AS AVG_CRT_RT,
					IFNULL(ROUND(SUM(ATT_RT) / COUNT(ATT_RT)), 0) AS AVG_ATT_RT,
					IFNULL(ROUND(SUM(INCRT_NT_NC_CNT) / COUNT(INCRT_NT_NC_CNT)), 0) AS AVG_INCRT_NT_NC_CNT,
					IFNULL(ROUND(SUM(A_LRN_EX_CNT) / COUNT(A_LRN_EX_CNT)), 0) AS AVG_A_LRN_EX_CNT,
					IFNULL(ROUND(SUM(IMPRV_SLV_HABIT_CNT) / COUNT(IMPRV_SLV_HABIT_CNT)), 0) AS AVG_IMPRV_SLV_HABIT_CNT,
					IFNULL(ROUND(SUM(DAY_AVG_LRN_SEC) / COUNT(DAY_AVG_LRN_SEC)), 0) AS AVG_DAY_AVG_LRN_SEC,
					COUNT(CRT_RT) AS CRT_RT_CNT,
					COUNT(STUD_ID) AS MONTH_CNT
				FROM MONTH_STUD_LRN_RST
				WHERE YYMM BETWEEN #{searchStartYymm} AND #{searchEndYymm}
					<choose>
						<when test="orgList != null and orgList.size!=0">
							AND ORG_ID IN 
							<foreach collection="orgList" item="item"  open="(" close=")" separator=",">
			                    #{item}
			                </foreach>
						</when>
						<otherwise>
							AND ORG_ID = 'seocho4'
						</otherwise>
					</choose>
				GROUP BY STUD_ID
			) A
			LEFT OUTER JOIN(
				SELECT 
					STUD_ID,
					COUNT(*) AS NULL_CNT
				FROM MONTH_STUD_LRN_RST 
				WHERE YYMM BETWEEN #{searchStartYymm} AND #{searchEndYymm}
					<choose>
						<when test="orgList != null and orgList.size!=0">
							AND ORG_ID IN 
							<foreach collection="orgList" item="item"  open="(" close=")" separator=",">
			                    #{item}
			                </foreach>
						</when>
						<otherwise>
							AND ORG_ID = 'seocho4'
						</otherwise>
					</choose>
					AND CRT_RT IS NULL
				GROUP BY STUD_ID
			) B ON A.STUD_ID = B.STUD_ID
			JOIN (
				SELECT
					C1_1.STUD_ID,
					C1_1.A_LRN_EX_CNT_MAX_SUBJ_CD,
					C1_1.A_LRN_EX_CNT,
					CASE
						WHEN @STID = C1_1.STUD_ID THEN @ROWNUM:=@ROWNUM + 1
						ELSE @ROWNUM:=1
					END AS ORD,
					(@STID:=C1_1.STUD_ID) AS STID
				FROM (
					SELECT 
						STUD_ID,
						A_LRN_EX_CNT_MAX_SUBJ_CD,
						A_LRN_EX_CNT,
						CASE
							WHEN A_LRN_EX_CNT_MAX_SUBJ_CD = 'C02' THEN 1
							WHEN A_LRN_EX_CNT_MAX_SUBJ_CD = 'C01' THEN 2
							WHEN A_LRN_EX_CNT_MAX_SUBJ_CD = 'C05' THEN 3
							WHEN A_LRN_EX_CNT_MAX_SUBJ_CD = 'C04' THEN 4
							WHEN A_LRN_EX_CNT_MAX_SUBJ_CD = 'C03' THEN 5
							WHEN A_LRN_EX_CNT_MAX_SUBJ_CD = 'C06' THEN 6
							WHEN A_LRN_EX_CNT_MAX_SUBJ_CD = 'N02' THEN 7
							WHEN A_LRN_EX_CNT_MAX_SUBJ_CD = 'N01' THEN 8
							WHEN A_LRN_EX_CNT_MAX_SUBJ_CD = 'N03' THEN 9
							WHEN A_LRN_EX_CNT_MAX_SUBJ_CD = 'N04' THEN 10
							WHEN A_LRN_EX_CNT_MAX_SUBJ_CD = 'N05' THEN 11
							ELSE NULL
						END AS SUBJ_RANK
					FROM MONTH_STUD_LRN_RST
					WHERE YYMM BETWEEN #{searchStartYymm} AND #{searchEndYymm}
					<choose>
						<when test="orgList != null and orgList.size!=0">
							AND ORG_ID IN 
							<foreach collection="orgList" item="item"  open="(" close=")" separator=",">
			                    #{item}
			                </foreach>
						</when>
						<otherwise>
							AND ORG_ID = 'seocho4'
						</otherwise>
					</choose>
					ORDER BY STUD_ID, A_LRN_EX_CNT DESC, SUBJ_RANK
				) C1_1
				,(SELECT @STID:='', @ROWNUM:=0) AS R
			) C ON A.STUD_ID = C.STUD_ID AND C.ORD = 1
			WHERE  A.AVG_CRT_RT <![CDATA[>=]]> 80
				AND A.CRT_RT_CNT <![CDATA[>=]]> 2
			ORDER BY A.AVG_CRT_RT DESC, CRT_RT_CHECK DESC, A.AVG_EX_RT DESC, A.AVG_ATT_RT DESC, A.STUD_ID
			LIMIT 1
		) A
	</select>
	
	<select id="selectStrengthHabitHighGrowthStud" parameterType="hashMap" resultType="resultMap">
	/* Group.selectStrengthHabitHighGrowthStud : 강점 습관 분석 고성장 회원 */
		SELECT 
			CONCAT(SUBSTRING(A.YYMM,5), '월') AS CATEGORY,
			CONCAT('***test', TRUNCATE(RAND(NOW()) * 10,0) + 1) AS STUD_ID,
		    CONCAT('김', '*', '런', TRUNCATE(RAND(NOW()) * 10,0) + 1) AS STUD_NM,
		    A.CRT_RT AS AVG_CRT_RT
		FROM MONTH_STUD_LRN_RST A 
		JOIN (
			SELECT
				B1.STUD_ID
			FROM (
				SELECT
					YYMM,
					STUD_ID,
					-- STUD_NM,
					IFNULL(ROUND(SUM(EX_RT) / COUNT(EX_RT)), 0) AS AVG_EX_RT,
					IFNULL(ROUND(SUM(CRT_RT) / COUNT(CRT_RT)), 0) AS AVG_CRT_RT,
					IFNULL(ROUND(SUM(INCRT_NT_NC_CNT) / COUNT(INCRT_NT_NC_CNT)), 0) AS AVG_INCRT_NT_NC_CNT,
					IFNULL(ROUND(SUM(DAY_AVG_LRN_SEC) / COUNT(DAY_AVG_LRN_SEC)), 0) AS AVG_DAY_AVG_LRN_SEC
				FROM MONTH_STUD_LRN_RST
				WHERE YYMM BETWEEN #{searchStartYymm} AND #{searchEndYymm}
					<choose>
						<when test="orgList != null and orgList.size!=0">
							AND ORG_ID IN 
							<foreach collection="orgList" item="item"  open="(" close=")" separator=",">
			                    #{item}
			                </foreach>
						</when>
						<otherwise>
							AND ORG_ID = 'seocho4'
						</otherwise>
					</choose>
				GROUP BY STUD_ID
			) B1
			JOIN (
				SELECT
					STUD_ID,
					SUM(DIFF_CRT_RT) AS DIFF_CRT_RT,
					FIRST_CRT_RT,
					LAST_CRT_RT,
					( LAST_CRT_RT - FIRST_CRT_RT ) AS DIFF_MONTH_CRT_RT
				FROM (
					SELECT
						B2_1.YYMM,
						B2_1.STUD_ID,
						-- B2_1.STUD_NM,
						IF(CRT_RT - (SELECT CRT_RT FROM MONTH_STUD_LRN_RST WHERE YYMM =  B2_1.LYYMM AND STUD_ID = B2_1.STUD_ID AND ORG_ID = 'seocho4') > 0 ,1, 0) AS DIFF_CRT_RT,
						(SELECT CRT_RT FROM MONTH_STUD_LRN_RST WHERE YYMM =  B2_2.MIN_YYMM AND STUD_ID = B2_1.STUD_ID AND ORG_ID = 'seocho4') AS FIRST_CRT_RT,
						(SELECT CRT_RT FROM MONTH_STUD_LRN_RST WHERE YYMM =  #{searchEndYymm} AND STUD_ID = B2_1.STUD_ID AND ORG_ID = 'seocho4') AS LAST_CRT_RT
					FROM (
						SELECT
							YYMM,
							DATE_FORMAT(CONCAT(SUBSTRING(YYMM,1,4),'-',SUBSTRING(YYMM,5),'-01') - INTERVAL 1 MONTH, '%Y%m') AS LYYMM,
							STUD_ID,
							-- STUD_NM,
							CRT_RT
						FROM MONTH_STUD_LRN_RST
						WHERE YYMM BETWEEN #{searchStartYymm} AND #{searchEndYymm}
							<choose>
								<when test="orgList != null and orgList.size!=0">
									AND ORG_ID IN 
									<foreach collection="orgList" item="item"  open="(" close=")" separator=",">
					                    #{item}
					                </foreach>
								</when>
								<otherwise>
									AND ORG_ID = 'seocho4'
								</otherwise>
							</choose>
					) B2_1
					LEFT OUTER JOIN (
						SELECT
							MIN(YYMM) AS MIN_YYMM,
							STUD_ID
						FROM MONTH_STUD_LRN_RST
						WHERE YYMM BETWEEN #{searchStartYymm} AND #{searchEndYymm}
							<choose>
								<when test="orgList != null and orgList.size!=0">
									AND ORG_ID IN 
									<foreach collection="orgList" item="item"  open="(" close=")" separator=",">
					                    #{item}
					                </foreach>
								</when>
								<otherwise>
									AND ORG_ID = 'seocho4'
								</otherwise>
							</choose>
							AND CRT_RT IS NOT NULL
						GROUP BY STUD_ID
					) B2_2 ON B2_1.STUD_ID = B2_2.STUD_ID
				) B2_3 
				GROUP BY STUD_ID
			) B2 ON B1.STUD_ID = B2.STUD_ID AND DIFF_CRT_RT <![CDATA[>]]> 2
			ORDER BY DIFF_MONTH_CRT_RT DESC, LAST_CRT_RT DESC, AVG_EX_RT DESC, AVG_INCRT_NT_NC_CNT, AVG_DAY_AVG_LRN_SEC DESC
			LIMIT 1
		) B ON A.STUD_ID = B.STUD_ID
		WHERE YYMM BETWEEN #{searchStartYymm} AND #{searchEndYymm}
			<choose>
				<when test="orgList != null and orgList.size!=0">
					AND ORG_ID IN 
					<foreach collection="orgList" item="item"  open="(" close=")" separator=",">
	                    #{item}
	                </foreach>
				</when>
				<otherwise>
					AND ORG_ID = 'seocho4'
				</otherwise>
			</choose>
	</select>
	
	<select id="selectStrengthHabitHighGrowthStudHabit" parameterType="hashMap" resultType="resultMap">
	/* Group.selectStrengthHabitHighGrowthStudHabit : 강점 습관 분석 고성장 회원 학습특성*/
		SELECT 
			ATT_HABIT,
			PLAN_HABIT,
			INCRT_NOTE_HABIT,
			A_LRN_HABIT,
			SLV_HABIT,
			CONCN_HABIT
		FROM (
			SELECT 
				CASE
					WHEN AVG_ATT_RT <![CDATA[>=]]> 80 THEN AVG_ATT_RT
					ELSE NULL
				END AS ATT_HABIT,
				CASE
					WHEN AVG_EX_RT <![CDATA[>=]]> 80 THEN AVG_EX_RT
					ELSE NULL
				END AS PLAN_HABIT,
				CASE
					WHEN AVG_INCRT_NT_NC_CNT <![CDATA[>=]]> 0 AND AVG_INCRT_NT_NC_CNT <![CDATA[<=]]> 10 THEN AVG_INCRT_NT_NC_CNT
					ELSE NULL
				END AS INCRT_NOTE_HABIT,
				CASE
					WHEN AVG_A_LRN_EX_CNT <![CDATA[>=]]> 10 AND AVG_A_LRN_EX_CNT <![CDATA[<=]]> 100 THEN C.A_LRN_EX_CNT_MAX_SUBJ_CD
					ELSE NULL
				END AS A_LRN_HABIT,
				CASE
					WHEN AVG_IMPRV_SLV_HABIT_CNT <![CDATA[<=]]> 5 THEN AVG_IMPRV_SLV_HABIT_CNT
					ELSE NULL
				END AS SLV_HABIT,
				AVG_DAY_AVG_LRN_SEC AS CONCN_HABIT
			FROM (
				SELECT
					YYMM,
					STUD_ID,
					-- STUD_NM,
					IFNULL(ROUND(SUM(EX_RT) / COUNT(EX_RT)), 0) AS AVG_EX_RT,
					IFNULL(ROUND(SUM(CRT_RT) / COUNT(CRT_RT)), 0) AS AVG_CRT_RT,
					IFNULL(ROUND(SUM(ATT_RT) / COUNT(ATT_RT)), 0) AS AVG_ATT_RT,
					IFNULL(ROUND(SUM(INCRT_NT_NC_CNT) / COUNT(INCRT_NT_NC_CNT)), 0) AS AVG_INCRT_NT_NC_CNT,
					IFNULL(ROUND(SUM(A_LRN_EX_CNT) / COUNT(A_LRN_EX_CNT)), 0) AS AVG_A_LRN_EX_CNT,
					IFNULL(ROUND(SUM(IMPRV_SLV_HABIT_CNT) / COUNT(IMPRV_SLV_HABIT_CNT)), 0) AS AVG_IMPRV_SLV_HABIT_CNT,
					IFNULL(ROUND(SUM(DAY_AVG_LRN_SEC) / COUNT(DAY_AVG_LRN_SEC)), 0) AS AVG_DAY_AVG_LRN_SEC,
					COUNT(CRT_RT) AS CRT_RT_CNT,
					COUNT(STUD_ID) AS MONTH_CNT
				FROM MONTH_STUD_LRN_RST
				WHERE YYMM BETWEEN #{searchStartYymm} AND #{searchEndYymm}
					<choose>
						<when test="orgList != null and orgList.size!=0">
							AND ORG_ID IN 
							<foreach collection="orgList" item="item"  open="(" close=")" separator=",">
			                    #{item}
			                </foreach>
						</when>
						<otherwise>
							AND ORG_ID = 'seocho4'
						</otherwise>
					</choose>
				GROUP BY STUD_ID
			) A
			JOIN(
				SELECT
					B1.STUD_ID
				FROM (
					SELECT
						YYMM,
						STUD_ID,
						-- STUD_NM,
						IFNULL(ROUND(SUM(EX_RT) / COUNT(EX_RT)), 0) AS AVG_EX_RT,
						IFNULL(ROUND(SUM(CRT_RT) / COUNT(CRT_RT)), 0) AS AVG_CRT_RT,
						IFNULL(ROUND(SUM(INCRT_NT_NC_CNT) / COUNT(INCRT_NT_NC_CNT)), 0) AS AVG_INCRT_NT_NC_CNT,
						IFNULL(ROUND(SUM(DAY_AVG_LRN_SEC) / COUNT(DAY_AVG_LRN_SEC)), 0) AS AVG_DAY_AVG_LRN_SEC
					FROM MONTH_STUD_LRN_RST
					WHERE YYMM BETWEEN #{searchStartYymm} AND #{searchEndYymm}
						<choose>
							<when test="orgList != null and orgList.size!=0">
								AND ORG_ID IN 
								<foreach collection="orgList" item="item"  open="(" close=")" separator=",">
				                    #{item}
				                </foreach>
							</when>
							<otherwise>
								AND ORG_ID = 'seocho4'
							</otherwise>
						</choose>
					GROUP BY STUD_ID
				) B1
				JOIN (
					SELECT
						STUD_ID,
						SUM(DIFF_CRT_RT) AS DIFF_CRT_RT,
						FIRST_CRT_RT,
						LAST_CRT_RT,
						( LAST_CRT_RT - FIRST_CRT_RT ) AS DIFF_MONTH_CRT_RT
					FROM (
						SELECT
							B2_1.YYMM,
							B2_1.STUD_ID,
							-- B2_1.STUD_NM,
							IF(CRT_RT - (SELECT CRT_RT FROM MONTH_STUD_LRN_RST WHERE YYMM =  B2_1.LYYMM AND STUD_ID = B2_1.STUD_ID AND ORG_ID = 'seocho4') > 0 ,1, 0) AS DIFF_CRT_RT,
							(SELECT CRT_RT FROM MONTH_STUD_LRN_RST WHERE YYMM =  B2_2.MIN_YYMM AND STUD_ID = B2_1.STUD_ID AND ORG_ID = 'seocho4') AS FIRST_CRT_RT,
							(SELECT CRT_RT FROM MONTH_STUD_LRN_RST WHERE YYMM =  #{searchEndYymm} AND STUD_ID = B2_1.STUD_ID AND ORG_ID = 'seocho4') AS LAST_CRT_RT
						FROM (
							SELECT
								YYMM,
								DATE_FORMAT(CONCAT(SUBSTRING(YYMM,1,4),'-',SUBSTRING(YYMM,5),'-01') - INTERVAL 1 MONTH, '%Y%m') AS LYYMM,
								STUD_ID,
								STUD_NM,
								CRT_RT
							FROM MONTH_STUD_LRN_RST
							WHERE YYMM BETWEEN #{searchStartYymm} AND #{searchEndYymm}
								<choose>
									<when test="orgList != null and orgList.size!=0">
										AND ORG_ID IN 
										<foreach collection="orgList" item="item"  open="(" close=")" separator=",">
						                    #{item}
						                </foreach>
									</when>
									<otherwise>
										AND ORG_ID = 'seocho4'
									</otherwise>
								</choose>
						) B2_1
						LEFT OUTER JOIN (
							SELECT
								MIN(YYMM) AS MIN_YYMM,
								STUD_ID
							FROM MONTH_STUD_LRN_RST
							WHERE YYMM BETWEEN #{searchStartYymm} AND #{searchEndYymm}
								<choose>
									<when test="orgList != null and orgList.size!=0">
										AND ORG_ID IN 
										<foreach collection="orgList" item="item"  open="(" close=")" separator=",">
						                    #{item}
						                </foreach>
									</when>
									<otherwise>
										AND ORG_ID = 'seocho4'
									</otherwise>
								</choose>
								AND CRT_RT IS NOT NULL
							GROUP BY STUD_ID
						) B2_2 ON B2_1.STUD_ID = B2_2.STUD_ID
					) B2_3 
					GROUP BY STUD_ID
				) B2 ON B1.STUD_ID = B2.STUD_ID AND DIFF_CRT_RT <![CDATA[>]]> 2
				ORDER BY DIFF_MONTH_CRT_RT DESC, LAST_CRT_RT DESC, AVG_EX_RT DESC, AVG_INCRT_NT_NC_CNT, AVG_DAY_AVG_LRN_SEC DESC
				LIMIT 1
			) B ON A.STUD_ID = B.STUD_ID
			JOIN (
				SELECT
					C1_1.STUD_ID,
					C1_1.A_LRN_EX_CNT_MAX_SUBJ_CD,
					C1_1.A_LRN_EX_CNT,
					CASE
						WHEN @STID = C1_1.STUD_ID THEN @ROWNUM:=@ROWNUM + 1
						ELSE @ROWNUM:=1
					END AS ORD,
					(@STID:=C1_1.STUD_ID) AS STID
				FROM (
					SELECT 
						STUD_ID,
						A_LRN_EX_CNT_MAX_SUBJ_CD,
						A_LRN_EX_CNT,
						CASE
							WHEN A_LRN_EX_CNT_MAX_SUBJ_CD = 'C02' THEN 1
							WHEN A_LRN_EX_CNT_MAX_SUBJ_CD = 'C01' THEN 2
							WHEN A_LRN_EX_CNT_MAX_SUBJ_CD = 'C05' THEN 3
							WHEN A_LRN_EX_CNT_MAX_SUBJ_CD = 'C04' THEN 4
							WHEN A_LRN_EX_CNT_MAX_SUBJ_CD = 'C03' THEN 5
							WHEN A_LRN_EX_CNT_MAX_SUBJ_CD = 'C06' THEN 6
							WHEN A_LRN_EX_CNT_MAX_SUBJ_CD = 'N02' THEN 7
							WHEN A_LRN_EX_CNT_MAX_SUBJ_CD = 'N01' THEN 8
							WHEN A_LRN_EX_CNT_MAX_SUBJ_CD = 'N03' THEN 9
							WHEN A_LRN_EX_CNT_MAX_SUBJ_CD = 'N04' THEN 10
							WHEN A_LRN_EX_CNT_MAX_SUBJ_CD = 'N05' THEN 11
							ELSE NULL
						END AS SUBJ_RANK
					FROM MONTH_STUD_LRN_RST
					WHERE YYMM BETWEEN #{searchStartYymm} AND #{searchEndYymm}
						<choose>
							<when test="orgList != null and orgList.size!=0">
								AND ORG_ID IN 
								<foreach collection="orgList" item="item"  open="(" close=")" separator=",">
				                    #{item}
				                </foreach>
							</when>
							<otherwise>
								AND ORG_ID = 'seocho4'
							</otherwise>
						</choose>
					ORDER BY STUD_ID, A_LRN_EX_CNT DESC, SUBJ_RANK
				) C1_1
				,(SELECT @STID:='', @ROWNUM:=0) AS R
			) C ON A.STUD_ID = C.STUD_ID AND C.ORD = 1
		) A
	</select>
	
 	<select id="selectWeekLrnPlanStudLrnStt" parameterType="hashMap" resultType="resultMap">
	 	/* Group.selectWeekLrnPlanStudLrnStt : 학습계획 학생 학습 현황 주간 */
 		SELECT 
 			1804582 AS STUD_ID,
 		    CONCAT('김', '*', '런', TRUNCATE(RAND(NOW()) * 10,0) + 1) AS STUD_NM,
 		    STUD_GRADE,
 		    LRN_SIGNAL,
 		    ATT_RT,
 		    EX_RT,
 		    DAY_AVG_LRN_SEC,
 		    CRT_RT
 		FROM WEEK_STUD_LRN_RST
 		WHERE
 			YYMM = #{searchYymm}
 		    AND WK = #{searchWk}
 			AND STUD_ID = #{studId}
 			AND ORG_ID = #{orgId}
 	</select>
	
	<select id="selectMonthLrnPlanStudLrnStt" parameterType="hashMap" resultType="resultMap">
	/* Group.selectMonthLrnPlanStudLrnStt : 학습계획 학생 학습 현황 월간 */
		SELECT 
			1804582 AS STUD_ID,
		    CONCAT('김', '*', '런', TRUNCATE(RAND(NOW()) * 10,0) + 1) AS STUD_NM,
		    STUD_GRADE,
		    LRN_SIGNAL,
		    ATT_RT,
		    EX_RT,
		    DAY_AVG_LRN_SEC,
		    CRT_RT
		FROM MONTH_STUD_LRN_RST
		WHERE
			YYMM = #{searchYymm}
			AND STUD_ID = #{studId}
 			AND ORG_ID = #{orgId}
	</select>
</mapper>